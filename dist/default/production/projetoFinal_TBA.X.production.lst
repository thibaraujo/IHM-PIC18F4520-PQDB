

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 15:58:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4520 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001F58                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _temp
   103  001F58  00FA               	dw	250
   104                           
   105                           ;initializer for _pres
   106  001F5A  000F               	dw	15
   107                           
   108                           ;initializer for _lev
   109  001F5C  50                 	db	80
   110                           
   111                           ;initializer for _subMenu
   112  001F5D  01                 	db	1
   113                           
   114                           ;initializer for _menuNum
   115  001F5E  01                 	db	1
   116                           
   117                           	psect	smallconst
   118  000600                     __psmallconst:
   119                           	callstack 0
   120  000600  00                 	db	0
   121  000601                     _valor:
   122                           	callstack 0
   123  000601  3F                 	db	63
   124  000602  06                 	db	6
   125  000603  5B                 	db	91
   126  000604  4F                 	db	79
   127  000605  66                 	db	102
   128  000606  6D                 	db	109
   129  000607  7D                 	db	125
   130  000608  07                 	db	7
   131  000609  7F                 	db	127
   132  00060A  6F                 	db	111
   133  00060B  77                 	db	119
   134  00060C  7C                 	db	124
   135  00060D  39                 	db	57
   136  00060E  5E                 	db	94
   137  00060F  79                 	db	121
   138  000610  71                 	db	113
   139  000611                     __end_of_valor:
   140                           	callstack 0
   141  000611                     _charKey:
   142                           	callstack 0
   143  000611  55                 	db	85
   144  000612  4C                 	db	76
   145  000613  44                 	db	68
   146  000614  52                 	db	82
   147  000615  53                 	db	83
   148  000616  58                 	db	88
   149  000617  41                 	db	65
   150  000618  42                 	db	66
   151  000619  59                 	db	89
   152  00061A  73                 	db	115
   153  00061B                     __end_of_charKey:
   154                           	callstack 0
   155  0000                     _ADRESL	set	4035
   156  0000                     _ADRESH	set	4036
   157  0000                     _ADCON2	set	4032
   158  0000                     _ADCON0	set	4034
   159  0000                     _T2CON	set	4042
   160  0000                     _CCP2CON	set	4026
   161  0000                     _CCPR2L	set	4027
   162  0000                     _PR2	set	4043
   163  0000                     _T0CON	set	4053
   164  0000                     _TMR0L	set	4054
   165  0000                     _TMR0H	set	4055
   166  0000                     _INTCON	set	4082
   167  0000                     _SPBRG	set	4015
   168  0000                     _SPBRGH	set	4016
   169  0000                     _BAUDCON	set	4024
   170  0000                     _TXSTA	set	4012
   171  0000                     _RCREG	set	4014
   172  0000                     _RCSTA	set	4011
   173  0000                     _TXREG	set	4013
   174  0000                     _PIR1	set	3998
   175  0000                     _ADCON1	set	4033
   176  0000                     _TRISE	set	3990
   177  0000                     _TRISD	set	3989
   178  0000                     _TRISC	set	3988
   179  0000                     _TRISB	set	3987
   180  0000                     _TRISA	set	3986
   181  0000                     _PORTE	set	3972
   182  0000                     _PORTD	set	3971
   183  0000                     _PORTC	set	3970
   184  0000                     _PORTB	set	3969
   185  0000                     _PORTA	set	3968
   186  00061B                     STR_2:
   187  00061B  20                 	db	32
   188  00061C  20                 	db	32
   189  00061D  20                 	db	32
   190  00061E  20                 	db	32
   191  00061F  20                 	db	32
   192  000620  20                 	db	32
   193  000621  20                 	db	32
   194  000622  20                 	db	32
   195  000623  20                 	db	32
   196  000624  20                 	db	32
   197  000625  20                 	db	32
   198  000626  20                 	db	32
   199  000627  20                 	db	32
   200  000628  20                 	db	32
   201  000629  20                 	db	32
   202  00062A  20                 	db	32
   203  00062B  00                 	db	0
   204  00062C                     STR_8:
   205  00062C  20                 	db	32
   206  00062D  20                 	db	32
   207  00062E  20                 	db	32
   208  00062F  20                 	db	32
   209  000630  50                 	db	80	;'P'
   210  000631  72                 	db	114	;'r'
   211  000632  65                 	db	101	;'e'
   212  000633  73                 	db	115	;'s'
   213  000634  73                 	db	115	;'s'
   214  000635  61                 	db	97	;'a'
   215  000636  6F                 	db	111	;'o'
   216  000637  3A                 	db	58	;':'
   217  000638  20                 	db	32
   218  000639  20                 	db	32
   219  00063A  20                 	db	32
   220  00063B  20                 	db	32
   221  00063C  00                 	db	0
   222  00063D                     STR_11:
   223  00063D  3C                 	db	60	;'<'
   224  00063E  20                 	db	32
   225  00063F  20                 	db	32
   226  000640  4E                 	db	78	;'N'
   227  000641  69                 	db	105	;'i'
   228  000642  76                 	db	118	;'v'
   229  000643  65                 	db	101	;'e'
   230  000644  6C                 	db	108	;'l'
   231  000645  20                 	db	32
   232  000646  41                 	db	65	;'A'
   233  000647  67                 	db	103	;'g'
   234  000648  75                 	db	117	;'u'
   235  000649  61                 	db	97	;'a'
   236  00064A  20                 	db	32
   237  00064B  20                 	db	32
   238  00064C  20                 	db	32
   239  00064D  00                 	db	0
   240  00064E                     STR_3:
   241  00064E  20                 	db	32
   242  00064F  20                 	db	32
   243  000650  54                 	db	84	;'T'
   244  000651  65                 	db	101	;'e'
   245  000652  6D                 	db	109	;'m'
   246  000653  70                 	db	112	;'p'
   247  000654  65                 	db	101	;'e'
   248  000655  72                 	db	114	;'r'
   249  000656  61                 	db	97	;'a'
   250  000657  74                 	db	116	;'t'
   251  000658  75                 	db	117	;'u'
   252  000659  72                 	db	114	;'r'
   253  00065A  61                 	db	97	;'a'
   254  00065B  3A                 	db	58	;':'
   255  00065C  20                 	db	32
   256  00065D  20                 	db	32
   257  00065E  00                 	db	0
   258  00065F                     STR_13:
   259  00065F  20                 	db	32
   260  000660  20                 	db	32
   261  000661  20                 	db	32
   262  000662  4E                 	db	78	;'N'
   263  000663  69                 	db	105	;'i'
   264  000664  76                 	db	118	;'v'
   265  000665  65                 	db	101	;'e'
   266  000666  6C                 	db	108	;'l'
   267  000667  20                 	db	32
   268  000668  41                 	db	65	;'A'
   269  000669  67                 	db	103	;'g'
   270  00066A  75                 	db	117	;'u'
   271  00066B  61                 	db	97	;'a'
   272  00066C  3A                 	db	58	;':'
   273  00066D  20                 	db	32
   274  00066E  20                 	db	32
   275  00066F  00                 	db	0
   276  000670                     STR_6:
   277  000670  3C                 	db	60	;'<'
   278  000671  20                 	db	32
   279  000672  20                 	db	32
   280  000673  20                 	db	32
   281  000674  20                 	db	32
   282  000675  50                 	db	80	;'P'
   283  000676  72                 	db	114	;'r'
   284  000677  65                 	db	101	;'e'
   285  000678  73                 	db	115	;'s'
   286  000679  73                 	db	115	;'s'
   287  00067A  61                 	db	97	;'a'
   288  00067B  6F                 	db	111	;'o'
   289  00067C  20                 	db	32
   290  00067D  20                 	db	32
   291  00067E  20                 	db	32
   292  00067F  3E                 	db	62	;'>'
   293  000680  00                 	db	0
   294  000681                     STR_1:
   295  000681  20                 	db	32
   296  000682  20                 	db	32
   297  000683  54                 	db	84	;'T'
   298  000684  65                 	db	101	;'e'
   299  000685  6D                 	db	109	;'m'
   300  000686  70                 	db	112	;'p'
   301  000687  65                 	db	101	;'e'
   302  000688  72                 	db	114	;'r'
   303  000689  61                 	db	97	;'a'
   304  00068A  74                 	db	116	;'t'
   305  00068B  75                 	db	117	;'u'
   306  00068C  72                 	db	114	;'r'
   307  00068D  61                 	db	97	;'a'
   308  00068E  20                 	db	32
   309  00068F  20                 	db	32
   310  000690  3E                 	db	62	;'>'
   311  000691  00                 	db	0
   312  000692                     STR_16:
   313  000692  49                 	db	73	;'I'
   314  000693  6E                 	db	110	;'n'
   315  000694  69                 	db	105	;'i'
   316  000695  63                 	db	99	;'c'
   317  000696  69                 	db	105	;'i'
   318  000697  61                 	db	97	;'a'
   319  000698  6E                 	db	110	;'n'
   320  000699  64                 	db	100	;'d'
   321  00069A  6F                 	db	111	;'o'
   322  00069B  2E                 	db	46
   323  00069C  2E                 	db	46
   324  00069D  2E                 	db	46
   325  00069E  00                 	db	0
   326  00069F                     STR_15:
   327  00069F  20                 	db	32
   328  0006A0  25                 	db	37
   329  0006A1  20                 	db	32
   330  0006A2  20                 	db	32
   331  0006A3  20                 	db	32
   332  0006A4  20                 	db	32
   333  0006A5  20                 	db	32
   334  0006A6  20                 	db	32
   335  0006A7  00                 	db	0
   336  0006A8                     STR_5:
   337  0006A8  20                 	db	32
   338  0006A9  BA                 	db	-70
   339  0006AA  43                 	db	67	;'C'
   340  0006AB  20                 	db	32
   341  0006AC  20                 	db	32
   342  0006AD  20                 	db	32
   343  0006AE  20                 	db	32
   344  0006AF  20                 	db	32
   345  0006B0  00                 	db	0
   346  0006B1                     STR_10:
   347  0006B1  20                 	db	32
   348  0006B2  62                 	db	98	;'b'
   349  0006B3  61                 	db	97	;'a'
   350  0006B4  72                 	db	114	;'r'
   351  0006B5  20                 	db	32
   352  0006B6  20                 	db	32
   353  0006B7  20                 	db	32
   354  0006B8  20                 	db	32
   355  0006B9  00                 	db	0
   356  0006BA  00                 	db	0	; dummy byte at the end
   357  0000                     
   358                           ; #config settings
   359                           
   360                           	psect	cinit
   361  001D04                     __pcinit:
   362                           	callstack 0
   363  001D04                     start_initialization:
   364                           	callstack 0
   365  001D04                     __initialization:
   366                           	callstack 0
   367                           
   368                           ; Initialize objects allocated to COMRAM (7 bytes)
   369                           ; load TBLPTR registers with __pidataCOMRAM
   370  001D04  0E58               	movlw	low __pidataCOMRAM
   371  001D06  6EF6               	movwf	tblptrl,c
   372  001D08  0E1F               	movlw	high __pidataCOMRAM
   373  001D0A  6EF7               	movwf	tblptrh,c
   374  001D0C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   375  001D0E  6EF8               	movwf	tblptru,c
   376  001D10  EE00  F02E         	lfsr	0,__pdataCOMRAM
   377  001D14  EE10 F007          	lfsr	1,7
   378  001D18                     copy_data0:
   379  001D18  0009               	tblrd		*+
   380  001D1A  CFF5 FFEE          	movff	tablat,postinc0
   381  001D1E  50E5               	movf	postdec1,w,c
   382  001D20  50E1               	movf	fsr1l,w,c
   383  001D22  E1FA               	bnz	copy_data0
   384                           
   385                           ; Clear objects allocated to COMRAM (19 bytes)
   386  001D24  EE00  F01B         	lfsr	0,__pbssCOMRAM
   387  001D28  0E13               	movlw	19
   388  001D2A                     clear_0:
   389  001D2A  6AEE               	clrf	postinc0,c
   390  001D2C  06E8               	decf	wreg,f,c
   391  001D2E  E1FD               	bnz	clear_0
   392  001D30                     end_of_initialization:
   393                           	callstack 0
   394  001D30                     __end_of__initialization:
   395                           	callstack 0
   396  001D30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   397  001D32  6EF8               	movwf	tblptru,c
   398  001D34  0100               	movlb	0
   399  001D36  EF86  F006         	goto	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMRAM
   402  00001B                     __pbssCOMRAM:
   403                           	callstack 0
   404  00001B                     _aux2:
   405                           	callstack 0
   406  00001B                     	ds	2
   407  00001D                     _aux:
   408                           	callstack 0
   409  00001D                     	ds	2
   410  00001F                     kpDebounce@oldRead:
   411                           	callstack 0
   412  00001F                     	ds	2
   413  000021                     kpDebounce@newRead:
   414                           	callstack 0
   415  000021                     	ds	2
   416  000023                     _keys:
   417                           	callstack 0
   418  000023                     	ds	2
   419  000025                     _v3:
   420                           	callstack 0
   421  000025                     	ds	1
   422  000026                     _v2:
   423                           	callstack 0
   424  000026                     	ds	1
   425  000027                     _v1:
   426                           	callstack 0
   427  000027                     	ds	1
   428  000028                     _v0:
   429                           	callstack 0
   430  000028                     	ds	1
   431  000029                     _display:
   432                           	callstack 0
   433  000029                     	ds	1
   434  00002A                     _flag:
   435                           	callstack 0
   436  00002A                     	ds	1
   437  00002B                     _ctrl:
   438                           	callstack 0
   439  00002B                     	ds	1
   440  00002C                     _count:
   441                           	callstack 0
   442  00002C                     	ds	1
   443  00002D                     kpDebounce@tempo:
   444                           	callstack 0
   445  00002D                     	ds	1
   446                           
   447                           	psect	dataCOMRAM
   448  00002E                     __pdataCOMRAM:
   449                           	callstack 0
   450  00002E                     _temp:
   451                           	callstack 0
   452  00002E                     	ds	2
   453  000030                     _pres:
   454                           	callstack 0
   455  000030                     	ds	2
   456  000032                     _lev:
   457                           	callstack 0
   458  000032                     	ds	1
   459  000033                     _subMenu:
   460                           	callstack 0
   461  000033                     	ds	1
   462  000034                     _menuNum:
   463                           	callstack 0
   464  000034                     	ds	1
   465                           
   466                           	psect	cstackCOMRAM
   467  000001                     __pcstackCOMRAM:
   468                           	callstack 0
   469  000001                     ??_kpReadKey:
   470  000001                     ?_digitalRead:
   471                           	callstack 0
   472  000001                     ?_kpRead:
   473                           	callstack 0
   474  000001                     ?___wmul:
   475                           	callstack 0
   476  000001                     ?___awdiv:
   477                           	callstack 0
   478  000001                     ?___lwdiv:
   479                           	callstack 0
   480  000001                     ?___aldiv:
   481                           	callstack 0
   482  000001                     tempo@tempX:
   483                           	callstack 0
   484  000001                     serialSend@c:
   485                           	callstack 0
   486  000001                     serialRead@resp:
   487                           	callstack 0
   488  000001                     digitalWrite@pin:
   489                           	callstack 0
   490  000001                     digitalRead@pin:
   491                           	callstack 0
   492  000001                     pinMode@pin:
   493                           	callstack 0
   494  000001                     delayMicro@a:
   495                           	callstack 0
   496  000001                     delayMili@a:
   497                           	callstack 0
   498  000001                     timerReset@tempo:
   499                           	callstack 0
   500  000001                     ___wmul@multiplier:
   501                           	callstack 0
   502  000001                     ___awdiv@dividend:
   503                           	callstack 0
   504  000001                     ___lwdiv@dividend:
   505                           	callstack 0
   506  000001                     ___aldiv@dividend:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x0
   510  000001                     	ds	1
   511  000002                     ??_InfBoiler:
   512  000002                     tempo@aux:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x1
   516  000002                     	ds	1
   517  000003                     ??_digitalRead:
   518  000003                     ??_delayMili:
   519  000003                     tempo@i:
   520                           	callstack 0
   521  000003                     digitalWrite@value:
   522                           	callstack 0
   523  000003                     pinMode@type:
   524                           	callstack 0
   525  000003                     timerReset@ciclos:
   526                           	callstack 0
   527  000003                     ___wmul@multiplicand:
   528                           	callstack 0
   529  000003                     ___awdiv@divisor:
   530                           	callstack 0
   531  000003                     ___lwdiv@divisor:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2
   535  000003                     	ds	1
   536  000004                     tempo@j:
   537                           	callstack 0
   538  000004                     InfBoiler@cmd:
   539                           	callstack 0
   540  000004                     kpReadKey@i:
   541                           	callstack 0
   542  000004                     delayMili@i:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x3
   546  000004                     	ds	1
   547  000005                     ??_digitalWrite:
   548  000005                     ??_pinMode:
   549  000005                     tempo@k:
   550                           	callstack 0
   551  000005                     ___awdiv@counter:
   552                           	callstack 0
   553  000005                     ___wmul@product:
   554                           	callstack 0
   555  000005                     ___lwdiv@quotient:
   556                           	callstack 0
   557  000005                     ___aldiv@divisor:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x4
   561  000005                     	ds	1
   562  000006                     menuCtrl@subMenu:
   563                           	callstack 0
   564  000006                     ___awdiv@sign:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x5
   568  000006                     	ds	1
   569  000007                     ??_menuCtrl:
   570  000007                     ___lwdiv@counter:
   571                           	callstack 0
   572  000007                     soWrite@value:
   573                           	callstack 0
   574  000007                     ___awdiv@quotient:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x6
   578  000007                     	ds	1
   579  000008                     ??_pwmSet:
   580                           
   581                           ; 1 bytes @ 0x7
   582  000008                     	ds	1
   583  000009                     ?___awmod:
   584                           	callstack 0
   585  000009                     soWrite@i:
   586                           	callstack 0
   587  000009                     menuCtrl@menuNum:
   588                           	callstack 0
   589  000009                     ___aldiv@counter:
   590                           	callstack 0
   591  000009                     ___awmod@dividend:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x8
   595  000009                     	ds	1
   596  00000A                     ??_kpDebounce:
   597  00000A                     pwmSet@porcento:
   598                           	callstack 0
   599  00000A                     ___aldiv@sign:
   600                           	callstack 0
   601  00000A                     pushNibble@rs:
   602                           	callstack 0
   603  00000A                     pushByte@rs:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x9
   607  00000A                     	ds	1
   608  00000B                     pwmSet@val:
   609                           	callstack 0
   610  00000B                     ___awmod@divisor:
   611                           	callstack 0
   612  00000B                     ___aldiv@quotient:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0xA
   616  00000B                     	ds	1
   617  00000C                     ??_pushByte:
   618  00000C                     pushNibble@value:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0xB
   622  00000C                     	ds	1
   623  00000D                     pushByte@value:
   624                           	callstack 0
   625  00000D                     ___awmod@counter:
   626                           	callstack 0
   627  00000D                     kpDebounce@i:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xC
   631  00000D                     	ds	1
   632  00000E                     lcdCommand@value:
   633                           	callstack 0
   634  00000E                     lcdChar@value:
   635                           	callstack 0
   636  00000E                     ___awmod@sign:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0xD
   640  00000E                     	ds	1
   641  00000F                     ssdDigit@pos:
   642                           	callstack 0
   643  00000F                     lcdString@msg:
   644                           	callstack 0
   645  00000F                     lcdNumber@value:
   646                           	callstack 0
   647  00000F                     pwmFrequency@freq:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0xE
   651  00000F                     	ds	1
   652  000010                     ssdDigit@val:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0xF
   656  000010                     	ds	1
   657  000011                     ??_lcdString:
   658  000011                     lcdNumber@i:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x10
   662  000011                     	ds	2
   663  000013                     lcdString@i:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x12
   667  000013                     	ds	2
   668  000015                     ??_menu1:
   669  000015                     ??_menu2:
   670  000015                     ??_menu3:
   671                           
   672                           ; 1 bytes @ 0x14
   673  000015                     	ds	2
   674  000017                     menu1@subMenu:
   675                           	callstack 0
   676  000017                     menu2@subMenu:
   677                           	callstack 0
   678  000017                     menu3@subMenu:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x16
   682  000017                     	ds	1
   683  000018                     ??_main:
   684                           
   685                           ; 1 bytes @ 0x17
   686  000018                     	ds	2
   687  00001A                     main@slot:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x19
   691  00001A                     	ds	1
   692                           
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 97 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  slot            1   25[COMRAM] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   712 ;;      Params:         0       0       0       0       0       0       0
   713 ;;      Locals:         1       0       0       0       0       0       0
   714 ;;      Temps:          2       0       0       0       0       0       0
   715 ;;      Totals:         3       0       0       0       0       0       0
   716 ;;Total ram usage:        3 bytes
   717 ;; Hardware stack levels required when called: 7
   718 ;; This function calls:
   719 ;;		_InfBoiler
   720 ;;		_digitalWrite
   721 ;;		_kpDebounce
   722 ;;		_kpInit
   723 ;;		_lcdCommand
   724 ;;		_lcdInit
   725 ;;		_lcdString
   726 ;;		_leituraMenu
   727 ;;		_menu1
   728 ;;		_menu2
   729 ;;		_menu3
   730 ;;		_menuCtrl
   731 ;;		_pwmInit
   732 ;;		_pwmSet
   733 ;;		_serialInit
   734 ;;		_ssdInit
   735 ;;		_status
   736 ;;		_tempo
   737 ;;		_timerInit
   738 ;;		_timerReset
   739 ;;		_timerWait
   740 ;;		_vap
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text0
   747  000D0C                     __ptext0:
   748                           	callstack 0
   749  000D0C                     _main:
   750                           	callstack 24
   751  000D0C                     
   752                           ;main.c: 99:     TRISD = 0x00;
   753  000D0C  0E00               	movlw	0
   754  000D0E  6E95               	movwf	149,c	;volatile
   755                           
   756                           ;main.c: 100:     char slot = 0;
   757  000D10  0E00               	movlw	0
   758  000D12  6E1A               	movwf	main@slot^0,c
   759  000D14                     
   760                           ;main.c: 102:     lcdInit();
   761  000D14  EC05  F00A         	call	_lcdInit	;wreg free
   762  000D18                     
   763                           ;main.c: 103:     kpInit();
   764  000D18  EC9D  F00E         	call	_kpInit	;wreg free
   765  000D1C                     
   766                           ;main.c: 104:     serialInit();
   767  000D1C  EC76  F00F         	call	_serialInit	;wreg free
   768  000D20                     
   769                           ;main.c: 105:     pwmInit();
   770  000D20  EC83  F00F         	call	_pwmInit	;wreg free
   771  000D24                     
   772                           ;main.c: 106:     timerInit();
   773  000D24  ECA8  F00F         	call	_timerInit	;wreg free
   774  000D28                     
   775                           ;main.c: 107:     ssdInit();
   776  000D28  EC9C  F00D         	call	_ssdInit	;wreg free
   777  000D2C                     
   778                           ;main.c: 110:     pwmSet(0);
   779  000D2C  0E00               	movlw	0
   780  000D2E  ECDD  F00C         	call	_pwmSet
   781  000D32                     
   782                           ;main.c: 111:     lcdString("Iniciando...");
   783  000D32  0E92               	movlw	low STR_16
   784  000D34  6E0F               	movwf	lcdString@msg^0,c
   785  000D36  0E06               	movlw	high STR_16
   786  000D38  6E10               	movwf	(lcdString@msg+1)^0,c
   787  000D3A  ECC7  F00D         	call	_lcdString	;wreg free
   788  000D3E                     
   789                           ;main.c: 112:     tempo(10);
   790  000D3E  0E0A               	movlw	10
   791  000D40  ECF0  F00B         	call	_tempo
   792  000D44                     
   793                           ;main.c: 114:     lcdCommand(0x01);
   794  000D44  0E01               	movlw	1
   795  000D46  EC67  F00F         	call	_lcdCommand
   796  000D4A                     l2882:
   797                           
   798                           ;main.c: 118:         digitalWrite(PIN_D0, 0);
   799  000D4A  0E00               	movlw	0
   800  000D4C  6E02               	movwf	(digitalWrite@pin+1)^0,c
   801  000D4E  0E18               	movlw	24
   802  000D50  6E01               	movwf	digitalWrite@pin^0,c
   803  000D52  0E00               	movlw	0
   804  000D54  6E04               	movwf	(digitalWrite@value+1)^0,c
   805  000D56  0E00               	movlw	0
   806  000D58  6E03               	movwf	digitalWrite@value^0,c
   807  000D5A  EC85  F004         	call	_digitalWrite	;wreg free
   808  000D5E                     
   809                           ;main.c: 119:         digitalWrite(PIN_D1, 0);
   810  000D5E  0E00               	movlw	0
   811  000D60  6E02               	movwf	(digitalWrite@pin+1)^0,c
   812  000D62  0E19               	movlw	25
   813  000D64  6E01               	movwf	digitalWrite@pin^0,c
   814  000D66  0E00               	movlw	0
   815  000D68  6E04               	movwf	(digitalWrite@value+1)^0,c
   816  000D6A  0E00               	movlw	0
   817  000D6C  6E03               	movwf	digitalWrite@value^0,c
   818  000D6E  EC85  F004         	call	_digitalWrite	;wreg free
   819  000D72                     
   820                           ;main.c: 120:         digitalWrite(PIN_D2, 0);
   821  000D72  0E00               	movlw	0
   822  000D74  6E02               	movwf	(digitalWrite@pin+1)^0,c
   823  000D76  0E1A               	movlw	26
   824  000D78  6E01               	movwf	digitalWrite@pin^0,c
   825  000D7A  0E00               	movlw	0
   826  000D7C  6E04               	movwf	(digitalWrite@value+1)^0,c
   827  000D7E  0E00               	movlw	0
   828  000D80  6E03               	movwf	digitalWrite@value^0,c
   829  000D82  EC85  F004         	call	_digitalWrite	;wreg free
   830  000D86                     
   831                           ;main.c: 121:         digitalWrite(PIN_D3, 0);
   832  000D86  0E00               	movlw	0
   833  000D88  6E02               	movwf	(digitalWrite@pin+1)^0,c
   834  000D8A  0E1B               	movlw	27
   835  000D8C  6E01               	movwf	digitalWrite@pin^0,c
   836  000D8E  0E00               	movlw	0
   837  000D90  6E04               	movwf	(digitalWrite@value+1)^0,c
   838  000D92  0E00               	movlw	0
   839  000D94  6E03               	movwf	digitalWrite@value^0,c
   840  000D96  EC85  F004         	call	_digitalWrite	;wreg free
   841  000D9A                     
   842                           ;main.c: 123:         timerReset(6500);
   843  000D9A  0E19               	movlw	25
   844  000D9C  6E02               	movwf	(timerReset@tempo+1)^0,c
   845  000D9E  0E64               	movlw	100
   846  000DA0  6E01               	movwf	timerReset@tempo^0,c
   847  000DA2  EC47  F00F         	call	_timerReset	;wreg free
   848                           
   849                           ;main.c: 124:         switch (slot) {
   850  000DA6  EF2A  F007         	goto	l2924
   851  000DAA                     l2892:
   852                           
   853                           ;main.c: 126:                 leituraMenu();
   854  000DAA  EC27  F009         	call	_leituraMenu	;wreg free
   855                           
   856                           ;main.c: 127:                 switch (menuNum) {
   857  000DAE  EFF7  F006         	goto	l2902
   858  000DB2                     l2894:
   859                           
   860                           ;main.c: 129:                         menu1(subMenu);
   861  000DB2  5033               	movf	_subMenu^0,w,c
   862  000DB4  EC57  F00B         	call	_menu1
   863                           
   864                           ;main.c: 130:                         menuCtrl(menuNum, subMenu);
   865  000DB8  C033  F006         	movff	_subMenu,menuCtrl@subMenu
   866  000DBC  5034               	movf	_menuNum^0,w,c
   867  000DBE  ECAC  F005         	call	_menuCtrl
   868                           
   869                           ;main.c: 131:                         break;
   870  000DC2  EF10  F007         	goto	l2904
   871  000DC6                     l2896:
   872                           
   873                           ;main.c: 134:                         menu2(subMenu);
   874  000DC6  5033               	movf	_subMenu^0,w,c
   875  000DC8  EC0A  F00B         	call	_menu2
   876                           
   877                           ;main.c: 135:                         menuCtrl(menuNum, subMenu);
   878  000DCC  C033  F006         	movff	_subMenu,menuCtrl@subMenu
   879  000DD0  5034               	movf	_menuNum^0,w,c
   880  000DD2  ECAC  F005         	call	_menuCtrl
   881                           
   882                           ;main.c: 136:                         break;
   883  000DD6  EF10  F007         	goto	l2904
   884  000DDA                     l2898:
   885                           
   886                           ;main.c: 139:                         menu3(subMenu);
   887  000DDA  5033               	movf	_subMenu^0,w,c
   888  000DDC  ECA4  F00B         	call	_menu3
   889                           
   890                           ;main.c: 140:                         menuCtrl(menuNum, subMenu);
   891  000DE0  C033  F006         	movff	_subMenu,menuCtrl@subMenu
   892  000DE4  5034               	movf	_menuNum^0,w,c
   893  000DE6  ECAC  F005         	call	_menuCtrl
   894                           
   895                           ;main.c: 141:                         break;
   896  000DEA  EF10  F007         	goto	l2904
   897  000DEE                     l2902:
   898  000DEE  5034               	movf	_menuNum^0,w,c
   899  000DF0  6E18               	movwf	??_main^0,c
   900  000DF2  6A19               	clrf	(??_main+1)^0,c
   901                           
   902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 1, Range of values is 0 to 0
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte            4     3 (average)
   908                           ;	Chosen strategy is simple_byte
   909  000DF4  5019               	movf	(??_main+1)^0,w,c
   910  000DF6  0A00               	xorlw	0	; case 0
   911  000DF8  B4D8               	btfsc	status,2,c
   912  000DFA  EF01  F007         	goto	l3008
   913  000DFE  EF10  F007         	goto	l2904
   914  000E02                     l3008:
   915                           
   916                           ; Switch size 1, requested type "simple"
   917                           ; Number of cases is 3, Range of values is 1 to 3
   918                           ; switch strategies available:
   919                           ; Name         Instructions Cycles
   920                           ; simple_byte           10     6 (average)
   921                           ;	Chosen strategy is simple_byte
   922  000E02  5018               	movf	??_main^0,w,c
   923  000E04  0A01               	xorlw	1	; case 1
   924  000E06  B4D8               	btfsc	status,2,c
   925  000E08  EFD9  F006         	goto	l2894
   926  000E0C  0A03               	xorlw	3	; case 2
   927  000E0E  B4D8               	btfsc	status,2,c
   928  000E10  EFE3  F006         	goto	l2896
   929  000E14  0A01               	xorlw	1	; case 3
   930  000E16  B4D8               	btfsc	status,2,c
   931  000E18  EFED  F006         	goto	l2898
   932  000E1C  EF10  F007         	goto	l2904
   933  000E20                     l2904:
   934                           
   935                           ;main.c: 144:                 slot = 1;
   936  000E20  0E01               	movlw	1
   937  000E22  6E1A               	movwf	main@slot^0,c
   938                           
   939                           ;main.c: 145:                 break;
   940  000E24  EF4B  F007         	goto	l2926
   941  000E28                     l2906:
   942                           
   943                           ;main.c: 148:                 kpDebounce();
   944  000E28  EC06  F008         	call	_kpDebounce	;wreg free
   945  000E2C                     
   946                           ;main.c: 149:                 slot = 2;
   947  000E2C  0E02               	movlw	2
   948  000E2E  6E1A               	movwf	main@slot^0,c
   949                           
   950                           ;main.c: 150:                 break;
   951  000E30  EF4B  F007         	goto	l2926
   952  000E34                     l2910:
   953                           
   954                           ;main.c: 153:                 InfBoiler();
   955  000E34  ECB7  F00A         	call	_InfBoiler	;wreg free
   956  000E38                     
   957                           ;main.c: 154:                 slot = 3;
   958  000E38  0E03               	movlw	3
   959  000E3A  6E1A               	movwf	main@slot^0,c
   960                           
   961                           ;main.c: 155:                 break;
   962  000E3C  EF4B  F007         	goto	l2926
   963  000E40                     l2914:
   964                           
   965                           ;main.c: 158:                 status();
   966  000E40  EC13  F00D         	call	_status	;wreg free
   967  000E44                     
   968                           ;main.c: 159:                 slot = 4;
   969  000E44  0E04               	movlw	4
   970  000E46  6E1A               	movwf	main@slot^0,c
   971                           
   972                           ;main.c: 160:                 break;
   973  000E48  EF4B  F007         	goto	l2926
   974  000E4C                     l2920:
   975                           
   976                           ;main.c: 166:                 slot = 0;
   977  000E4C  0E00               	movlw	0
   978  000E4E  6E1A               	movwf	main@slot^0,c
   979                           
   980                           ;main.c: 167:                 break;
   981  000E50  EF4B  F007         	goto	l2926
   982  000E54                     l2924:
   983  000E54  501A               	movf	main@slot^0,w,c
   984  000E56  6E18               	movwf	??_main^0,c
   985  000E58  6A19               	clrf	(??_main+1)^0,c
   986                           
   987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 1, Range of values is 0 to 0
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            4     3 (average)
   993                           ;	Chosen strategy is simple_byte
   994  000E5A  5019               	movf	(??_main+1)^0,w,c
   995  000E5C  0A00               	xorlw	0	; case 0
   996  000E5E  B4D8               	btfsc	status,2,c
   997  000E60  EF34  F007         	goto	l3010
   998  000E64  EF4B  F007         	goto	l2926
   999  000E68                     l3010:
  1000                           
  1001                           ; Switch size 1, requested type "simple"
  1002                           ; Number of cases is 5, Range of values is 0 to 4
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte           16     9 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  000E68  5018               	movf	??_main^0,w,c
  1008  000E6A  0A00               	xorlw	0	; case 0
  1009  000E6C  B4D8               	btfsc	status,2,c
  1010  000E6E  EFD5  F006         	goto	l2892
  1011  000E72  0A01               	xorlw	1	; case 1
  1012  000E74  B4D8               	btfsc	status,2,c
  1013  000E76  EF14  F007         	goto	l2906
  1014  000E7A  0A03               	xorlw	3	; case 2
  1015  000E7C  B4D8               	btfsc	status,2,c
  1016  000E7E  EF1A  F007         	goto	l2910
  1017  000E82  0A01               	xorlw	1	; case 3
  1018  000E84  B4D8               	btfsc	status,2,c
  1019  000E86  EF20  F007         	goto	l2914
  1020  000E8A  0A07               	xorlw	7	; case 4
  1021  000E8C  B4D8               	btfsc	status,2,c
  1022  000E8E  EF26  F007         	goto	l2920
  1023  000E92  EF4B  F007         	goto	l2926
  1024  000E96                     l2926:
  1025                           
  1026                           ;main.c: 173:         timerWait();
  1027  000E96  EC9B  F00F         	call	_timerWait	;wreg free
  1028                           
  1029                           ;main.c: 175:     }
  1030  000E9A  EFA5  F006         	goto	l2882
  1031  000E9E  EF00  F000         	goto	start
  1032  000EA2                     __end_of_main:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function _vap *****************
  1036 ;; Defined at:
  1037 ;;		line 89 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  v               2    0        int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         0       0       0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 1
  1058 ;; This function calls:
  1059 ;;		___awdiv
  1060 ;;		___awmod
  1061 ;;		_ssdDigit
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text1
  1068  001BE4                     __ptext1:
  1069                           	callstack 0
  1070  001BE4                     _vap:
  1071                           	callstack 29
  1072  001BE4                     
  1073                           ;main.c: 93:     ssdDigit((v / 10) % 10, 2);
  1074  001BE4  0E02               	movlw	2
  1075  001BE6  6E0F               	movwf	ssdDigit@pos^0,c
  1076  001BE8  0E00               	movlw	0
  1077  001BEA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1078  001BEC  0E0A               	movlw	10
  1079  001BEE  6E03               	movwf	___awdiv@divisor^0,c
  1080  001BF0  0E00               	movlw	0
  1081  001BF2  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1082  001BF4  0E0F               	movlw	15
  1083  001BF6  6E01               	movwf	___awdiv@dividend^0,c
  1084  001BF8  ECA3  F009         	call	___awdiv	;wreg free
  1085  001BFC  C001  F009         	movff	?___awdiv,___awmod@dividend
  1086  001C00  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1087  001C04  0E00               	movlw	0
  1088  001C06  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1089  001C08  0E0A               	movlw	10
  1090  001C0A  6E0B               	movwf	___awmod@divisor^0,c
  1091  001C0C  EC5F  F00A         	call	___awmod	;wreg free
  1092  001C10  5009               	movf	?___awmod^0,w,c
  1093  001C12  EC70  F00D         	call	_ssdDigit
  1094  001C16                     
  1095                           ;main.c: 94:     ssdDigit((v / 1) % 10, 3);
  1096  001C16  0E03               	movlw	3
  1097  001C18  6E0F               	movwf	ssdDigit@pos^0,c
  1098  001C1A  0E00               	movlw	0
  1099  001C1C  6E0A               	movwf	(___awmod@dividend+1)^0,c
  1100  001C1E  0E0F               	movlw	15
  1101  001C20  6E09               	movwf	___awmod@dividend^0,c
  1102  001C22  0E00               	movlw	0
  1103  001C24  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1104  001C26  0E0A               	movlw	10
  1105  001C28  6E0B               	movwf	___awmod@divisor^0,c
  1106  001C2A  EC5F  F00A         	call	___awmod	;wreg free
  1107  001C2E  5009               	movf	?___awmod^0,w,c
  1108  001C30  EC70  F00D         	call	_ssdDigit
  1109  001C34  0012               	return		;funcret
  1110  001C36                     __end_of_vap:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _timerWait *****************
  1114 ;; Defined at:
  1115 ;;		line 31 in file "timer.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		None
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1129 ;;      Params:         0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text2
  1143  001F36                     __ptext2:
  1144                           	callstack 0
  1145  001F36                     _timerWait:
  1146                           	callstack 30
  1147  001F36                     l502:
  1148  001F36  A4F2               	btfss	242,2,c	;volatile
  1149  001F38  EFA0  F00F         	goto	u1301
  1150  001F3C  EFA2  F00F         	goto	u1300
  1151  001F40                     u1301:
  1152  001F40  EF9B  F00F         	goto	l502
  1153  001F44                     u1300:
  1154  001F44  0012               	return		;funcret
  1155  001F46                     __end_of_timerWait:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _timerReset *****************
  1159 ;; Defined at:
  1160 ;;		line 37 in file "timer.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  tempo           2    0[COMRAM] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  ciclos          2    2[COMRAM] unsigned int 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1174 ;;      Params:         2       0       0       0       0       0       0
  1175 ;;      Locals:         2       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0
  1177 ;;      Totals:         4       0       0       0       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text3
  1188  001E8E                     __ptext3:
  1189                           	callstack 0
  1190  001E8E                     _timerReset:
  1191                           	callstack 30
  1192  001E8E                     
  1193                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1194  001E8E  90D8               	bcf	status,0,c
  1195  001E90  3401               	rlcf	timerReset@tempo^0,w,c
  1196  001E92  6E03               	movwf	timerReset@ciclos^0,c
  1197  001E94  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1198  001E96  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1199  001E98                     
  1200                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1201  001E98  1E03               	comf	timerReset@ciclos^0,f,c
  1202  001E9A  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1203  001E9C                     
  1204                           ;timer.c: 47:     ciclos -=50;
  1205  001E9C  0E32               	movlw	50
  1206  001E9E  5E03               	subwf	timerReset@ciclos^0,f,c
  1207  001EA0  0E00               	movlw	0
  1208  001EA2  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1209  001EA4                     
  1210                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1211  001EA4  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1212  001EA6  6ED7               	movwf	215,c	;volatile
  1213  001EA8                     
  1214                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1215  001EA8  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1216  001EAC                     
  1217                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1218  001EAC  94F2               	bcf	242,2,c	;volatile
  1219  001EAE  0012               	return		;funcret
  1220  001EB0                     __end_of_timerReset:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _timerInit *****************
  1224 ;; Defined at:
  1225 ;;		line 55 in file "timer.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text4
  1253  001F50                     __ptext4:
  1254                           	callstack 0
  1255  001F50                     _timerInit:
  1256                           	callstack 30
  1257  001F50                     
  1258                           ;timer.c: 57:  T0CON = 0b00001000;
  1259  001F50  0E08               	movlw	8
  1260  001F52  6ED5               	movwf	213,c	;volatile
  1261  001F54                     
  1262                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1263  001F54  8ED5               	bsf	213,7,c	;volatile
  1264  001F56  0012               	return		;funcret
  1265  001F58                     __end_of_timerInit:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _tempo *****************
  1269 ;; Defined at:
  1270 ;;		line 4 in file "delay.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  tempX           1    wreg     unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  tempX           1    0[COMRAM] unsigned char 
  1275 ;;  k               1    4[COMRAM] volatile unsigned char 
  1276 ;;  j               1    3[COMRAM] volatile unsigned char 
  1277 ;;  i               1    2[COMRAM] volatile unsigned char 
  1278 ;;  aux             1    1[COMRAM] volatile unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1288 ;;      Params:         0       0       0       0       0       0       0
  1289 ;;      Locals:         5       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0
  1291 ;;      Totals:         5       0       0       0       0       0       0
  1292 ;;Total ram usage:        5 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text5
  1302  0017E0                     __ptext5:
  1303                           	callstack 0
  1304  0017E0                     _tempo:
  1305                           	callstack 30
  1306                           
  1307                           ;incstack = 0
  1308                           ;tempo@tempX stored from wreg
  1309  0017E0  6E01               	movwf	tempo@tempX^0,c
  1310  0017E2                     
  1311                           ;delay.c: 5:     volatile unsigned char i, j, k, aux;;delay.c: 7:     for(aux= 0; aux < 
      +                          tempX; aux++){
  1312  0017E2  0E00               	movlw	0
  1313  0017E4  6E02               	movwf	tempo@aux^0,c	;volatile
  1314  0017E6  EF23  F00C         	goto	l1660
  1315  0017EA                     l1628:
  1316                           
  1317                           ;delay.c: 8:         for(i = 0; i < 100; i++) {
  1318  0017EA  0E00               	movlw	0
  1319  0017EC  6E03               	movwf	tempo@i^0,c	;volatile
  1320  0017EE                     l1630:
  1321  0017EE  0E63               	movlw	99
  1322  0017F0  6403               	cpfsgt	tempo@i^0,c	;volatile
  1323  0017F2  EFFD  F00B         	goto	u861
  1324  0017F6  EFFF  F00B         	goto	u860
  1325  0017FA                     u861:
  1326  0017FA  EF01  F00C         	goto	l1634
  1327  0017FE                     u860:
  1328  0017FE  EF22  F00C         	goto	l1658
  1329  001802                     l1634:
  1330                           
  1331                           ;delay.c: 9:             for(j = 0; j < 41; j++) {
  1332  001802  0E00               	movlw	0
  1333  001804  6E04               	movwf	tempo@j^0,c	;volatile
  1334  001806                     l1636:
  1335  001806  0E28               	movlw	40
  1336  001808  6404               	cpfsgt	tempo@j^0,c	;volatile
  1337  00180A  EF09  F00C         	goto	u871
  1338  00180E  EF0B  F00C         	goto	u870
  1339  001812                     u871:
  1340  001812  EF0D  F00C         	goto	l1640
  1341  001816                     u870:
  1342  001816  EF1F  F00C         	goto	l1654
  1343  00181A                     l1640:
  1344                           
  1345                           ;delay.c: 10:                 for(k = 0; k < 3; k++);
  1346  00181A  0E00               	movlw	0
  1347  00181C  6E05               	movwf	tempo@k^0,c	;volatile
  1348  00181E                     l1642:
  1349  00181E  0E02               	movlw	2
  1350  001820  6405               	cpfsgt	tempo@k^0,c	;volatile
  1351  001822  EF15  F00C         	goto	u881
  1352  001826  EF17  F00C         	goto	u880
  1353  00182A                     u881:
  1354  00182A  EF19  F00C         	goto	l1646
  1355  00182E                     u880:
  1356  00182E  EF1C  F00C         	goto	l1650
  1357  001832                     l1646:
  1358  001832  2A05               	incf	tempo@k^0,f,c	;volatile
  1359  001834  EF0F  F00C         	goto	l1642
  1360  001838                     l1650:
  1361                           
  1362                           ;delay.c: 11:             }
  1363  001838  2A04               	incf	tempo@j^0,f,c	;volatile
  1364  00183A  EF03  F00C         	goto	l1636
  1365  00183E                     l1654:
  1366                           
  1367                           ;delay.c: 12:         }
  1368  00183E  2A03               	incf	tempo@i^0,f,c	;volatile
  1369  001840  EFF7  F00B         	goto	l1630
  1370  001844                     l1658:
  1371                           
  1372                           ;delay.c: 13:     }
  1373  001844  2A02               	incf	tempo@aux^0,f,c	;volatile
  1374  001846                     l1660:
  1375  001846  5001               	movf	tempo@tempX^0,w,c
  1376  001848  5C02               	subwf	tempo@aux^0,w,c	;volatile
  1377  00184A  A0D8               	btfss	status,0,c
  1378  00184C  EF2A  F00C         	goto	u891
  1379  001850  EF2C  F00C         	goto	u890
  1380  001854                     u891:
  1381  001854  EFF5  F00B         	goto	l1628
  1382  001858                     u890:
  1383  001858  0012               	return		;funcret
  1384  00185A                     __end_of_tempo:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _status *****************
  1388 ;; Defined at:
  1389 ;;		line 76 in file "main.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1403 ;;      Params:         0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 2
  1410 ;; This function calls:
  1411 ;;		_digitalWrite
  1412 ;;		_pwmSet
  1413 ;;		_ssdDigit
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text6
  1420  001A26                     __ptext6:
  1421                           	callstack 0
  1422  001A26                     _status:
  1423                           	callstack 28
  1424  001A26                     
  1425                           ;main.c: 77:     if (pres > 20 || temp > 300) {
  1426  001A26  5031               	movf	(_pres+1)^0,w,c
  1427  001A28  E107               	bnz	u2601
  1428  001A2A  0E15               	movlw	21
  1429  001A2C  5C30               	subwf	_pres^0,w,c
  1430  001A2E  B0D8               	btfsc	status,0,c
  1431  001A30  EF1C  F00D         	goto	u2601
  1432  001A34  EF1E  F00D         	goto	u2600
  1433  001A38                     u2601:
  1434  001A38  EF29  F00D         	goto	l2770
  1435  001A3C                     u2600:
  1436  001A3C  0E2D               	movlw	45
  1437  001A3E  5C2E               	subwf	_temp^0,w,c
  1438  001A40  0E01               	movlw	1
  1439  001A42  582F               	subwfb	(_temp+1)^0,w,c
  1440  001A44  A0D8               	btfss	status,0,c
  1441  001A46  EF27  F00D         	goto	u2611
  1442  001A4A  EF29  F00D         	goto	u2610
  1443  001A4E                     u2611:
  1444  001A4E  EF3D  F00D         	goto	l2774
  1445  001A52                     u2610:
  1446  001A52                     l2770:
  1447                           
  1448                           ;main.c: 79:         digitalWrite(PIN_D0,1);
  1449  001A52  0E00               	movlw	0
  1450  001A54  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1451  001A56  0E18               	movlw	24
  1452  001A58  6E01               	movwf	digitalWrite@pin^0,c
  1453  001A5A  0E00               	movlw	0
  1454  001A5C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1455  001A5E  0E01               	movlw	1
  1456  001A60  6E03               	movwf	digitalWrite@value^0,c
  1457  001A62  EC85  F004         	call	_digitalWrite	;wreg free
  1458                           
  1459                           ;main.c: 80:         ssdDigit(84, 0);
  1460  001A66  0E00               	movlw	0
  1461  001A68  6E0F               	movwf	ssdDigit@pos^0,c
  1462  001A6A  0E54               	movlw	84
  1463  001A6C  EC70  F00D         	call	_ssdDigit
  1464  001A70                     
  1465                           ;main.c: 81:         pwmSet(100);
  1466  001A70  0E64               	movlw	100
  1467  001A72  ECDD  F00C         	call	_pwmSet
  1468                           
  1469                           ;main.c: 82:     } else {
  1470  001A76  EF42  F00D         	goto	l424
  1471  001A7A                     l2774:
  1472                           
  1473                           ;main.c: 83:         pwmSet(0);
  1474  001A7A  0E00               	movlw	0
  1475  001A7C  ECDD  F00C         	call	_pwmSet
  1476  001A80                     
  1477                           ;main.c: 85:         PORTD = 0b00000010;
  1478  001A80  0E02               	movlw	2
  1479  001A82  6E83               	movwf	131,c	;volatile
  1480  001A84                     l424:
  1481  001A84  0012               	return		;funcret
  1482  001A86                     __end_of_status:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _ssdDigit *****************
  1486 ;; Defined at:
  1487 ;;		line 34 in file "ssd.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  val             1    wreg     unsigned char 
  1490 ;;  pos             1   14[COMRAM] unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  val             1   15[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1502 ;;      Params:         1       0       0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_status
  1512 ;;		_vap
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text7
  1517  001AE0                     __ptext7:
  1518                           	callstack 0
  1519  001AE0                     _ssdDigit:
  1520                           	callstack 29
  1521                           
  1522                           ;incstack = 0
  1523                           ;ssdDigit@val stored from wreg
  1524  001AE0  6E10               	movwf	ssdDigit@val^0,c
  1525  001AE2                     
  1526                           ;ssd.c: 35:     if (pos == 0) {
  1527  001AE2  500F               	movf	ssdDigit@pos^0,w,c
  1528  001AE4  A4D8               	btfss	status,2,c
  1529  001AE6  EF77  F00D         	goto	u2191
  1530  001AEA  EF79  F00D         	goto	u2190
  1531  001AEE                     u2191:
  1532  001AEE  EF7B  F00D         	goto	l2522
  1533  001AF2                     u2190:
  1534  001AF2                     
  1535                           ;ssd.c: 36:         v0 = val;
  1536  001AF2  C010  F028         	movff	ssdDigit@val,_v0
  1537  001AF6                     l2522:
  1538                           
  1539                           ;ssd.c: 38:     if (pos == 1) {
  1540  001AF6  040F               	decf	ssdDigit@pos^0,w,c
  1541  001AF8  A4D8               	btfss	status,2,c
  1542  001AFA  EF81  F00D         	goto	u2201
  1543  001AFE  EF83  F00D         	goto	u2200
  1544  001B02                     u2201:
  1545  001B02  EF85  F00D         	goto	l2526
  1546  001B06                     u2200:
  1547  001B06                     
  1548                           ;ssd.c: 39:         v1 = val;
  1549  001B06  C010  F027         	movff	ssdDigit@val,_v1
  1550  001B0A                     l2526:
  1551                           
  1552                           ;ssd.c: 41:     if (pos == 2) {
  1553  001B0A  0E02               	movlw	2
  1554  001B0C  180F               	xorwf	ssdDigit@pos^0,w,c
  1555  001B0E  A4D8               	btfss	status,2,c
  1556  001B10  EF8C  F00D         	goto	u2211
  1557  001B14  EF8E  F00D         	goto	u2210
  1558  001B18                     u2211:
  1559  001B18  EF90  F00D         	goto	l2530
  1560  001B1C                     u2210:
  1561  001B1C                     
  1562                           ;ssd.c: 42:         v2 = val;
  1563  001B1C  C010  F026         	movff	ssdDigit@val,_v2
  1564  001B20                     l2530:
  1565                           
  1566                           ;ssd.c: 44:     if (pos == 3) {
  1567  001B20  0E03               	movlw	3
  1568  001B22  180F               	xorwf	ssdDigit@pos^0,w,c
  1569  001B24  A4D8               	btfss	status,2,c
  1570  001B26  EF97  F00D         	goto	u2221
  1571  001B2A  EF99  F00D         	goto	u2220
  1572  001B2E                     u2221:
  1573  001B2E  EF9B  F00D         	goto	l475
  1574  001B32                     u2220:
  1575  001B32                     
  1576                           ;ssd.c: 45:         v3 = val;
  1577  001B32  C010  F025         	movff	ssdDigit@val,_v3
  1578  001B36                     l475:
  1579  001B36  0012               	return		;funcret
  1580  001B38                     __end_of_ssdDigit:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _pwmSet *****************
  1584 ;; Defined at:
  1585 ;;		line 24 in file "pwm.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  porcento        1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  porcento        1    9[COMRAM] unsigned char 
  1590 ;;  val             2   10[COMRAM] unsigned int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1600 ;;      Params:         0       0       0       0       0       0       0
  1601 ;;      Locals:         3       0       0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0       0       0
  1603 ;;      Totals:         5       0       0       0       0       0       0
  1604 ;;Total ram usage:        5 bytes
  1605 ;; Hardware stack levels used: 1
  1606 ;; Hardware stack levels required when called: 1
  1607 ;; This function calls:
  1608 ;;		___lwdiv
  1609 ;;		___wmul
  1610 ;; This function is called by:
  1611 ;;		_status
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text8
  1617  0019BA                     __ptext8:
  1618                           	callstack 0
  1619  0019BA                     _pwmSet:
  1620                           	callstack 28
  1621                           
  1622                           ;incstack = 0
  1623                           ;pwmSet@porcento stored from wreg
  1624  0019BA  6E0A               	movwf	pwmSet@porcento^0,c
  1625  0019BC                     
  1626                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1627  0019BC  0E01               	movlw	1
  1628  0019BE  24CB               	addwf	203,w,c	;volatile
  1629  0019C0  6E01               	movwf	___wmul@multiplier^0,c
  1630  0019C2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1631  0019C4  0E00               	movlw	0
  1632  0019C6  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1633  0019C8  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1634  0019CC  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1635  0019CE  EC0E  F00F         	call	___wmul	;wreg free
  1636  0019D2  C001  F00B         	movff	?___wmul,pwmSet@val
  1637  0019D6  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1638  0019DA                     
  1639                           ;pwm.c: 33:     val = val / 25;
  1640  0019DA  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1641  0019DE  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1642  0019E2  0E00               	movlw	0
  1643  0019E4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1644  0019E6  0E19               	movlw	25
  1645  0019E8  6E03               	movwf	___lwdiv@divisor^0,c
  1646  0019EA  EC69  F00C         	call	___lwdiv	;wreg free
  1647  0019EE  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1648  0019F2  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1649  0019F6                     
  1650                           ;pwm.c: 35:  val &= 0x03ff;
  1651  0019F6  0EFF               	movlw	255
  1652  0019F8  160B               	andwf	pwmSet@val^0,f,c
  1653  0019FA  0E03               	movlw	3
  1654  0019FC  160C               	andwf	(pwmSet@val+1)^0,f,c
  1655  0019FE                     
  1656                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1657  0019FE  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1658  001A02  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1659  001A06  90D8               	bcf	status,0,c
  1660  001A08  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1661  001A0A  3208               	rrcf	??_pwmSet^0,f,c
  1662  001A0C  90D8               	bcf	status,0,c
  1663  001A0E  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1664  001A10  3208               	rrcf	??_pwmSet^0,f,c
  1665  001A12  5008               	movf	??_pwmSet^0,w,c
  1666  001A14  6EBB               	movwf	187,c	;volatile
  1667  001A16                     
  1668                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1669  001A16  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1670  001A1A  0E03               	movlw	3
  1671  001A1C  1608               	andwf	??_pwmSet^0,f,c
  1672  001A1E  3808               	swapf	??_pwmSet^0,w,c
  1673  001A20  0BF0               	andlw	240
  1674  001A22  12BA               	iorwf	186,f,c	;volatile
  1675  001A24  0012               	return		;funcret
  1676  001A26                     __end_of_pwmSet:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function ___wmul *****************
  1680 ;; Defined at:
  1681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  multiplier      2    0[COMRAM] unsigned int 
  1684 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  product         2    4[COMRAM] unsigned int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMRAM] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, prodl, prodh
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         4       0       0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_pwmSet
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text9
  1710  001E1C                     __ptext9:
  1711                           	callstack 0
  1712  001E1C                     ___wmul:
  1713                           	callstack 28
  1714  001E1C  5001               	movf	___wmul@multiplier^0,w,c
  1715  001E1E  0203               	mulwf	___wmul@multiplicand^0,c
  1716  001E20  CFF3 F005          	movff	prodl,___wmul@product
  1717  001E24  CFF4 F006          	movff	prodh,___wmul@product+1
  1718  001E28  5001               	movf	___wmul@multiplier^0,w,c
  1719  001E2A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1720  001E2C  50F3               	movf	243,w,c
  1721  001E2E  2606               	addwf	(___wmul@product+1)^0,f,c
  1722  001E30  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1723  001E32  0203               	mulwf	___wmul@multiplicand^0,c
  1724  001E34  50F3               	movf	243,w,c
  1725  001E36  2606               	addwf	(___wmul@product+1)^0,f,c
  1726  001E38  C005  F001         	movff	___wmul@product,?___wmul
  1727  001E3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1728  001E40  0012               	return		;funcret
  1729  001E42                     __end_of___wmul:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function ___lwdiv *****************
  1733 ;; Defined at:
  1734 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  dividend        2    0[COMRAM] unsigned int 
  1737 ;;  divisor         2    2[COMRAM] unsigned int 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  quotient        2    4[COMRAM] unsigned int 
  1740 ;;  counter         1    6[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2    0[COMRAM] unsigned int 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         4       0       0       0       0       0       0
  1751 ;;      Locals:         3       0       0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0
  1753 ;;      Totals:         7       0       0       0       0       0       0
  1754 ;;Total ram usage:        7 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_pwmSet
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text10
  1764  0018D2                     __ptext10:
  1765                           	callstack 0
  1766  0018D2                     ___lwdiv:
  1767                           	callstack 28
  1768  0018D2  0E00               	movlw	0
  1769  0018D4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1770  0018D6  0E00               	movlw	0
  1771  0018D8  6E05               	movwf	___lwdiv@quotient^0,c
  1772  0018DA  5003               	movf	___lwdiv@divisor^0,w,c
  1773  0018DC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1774  0018DE  B4D8               	btfsc	status,2,c
  1775  0018E0  EF74  F00C         	goto	u2041
  1776  0018E4  EF76  F00C         	goto	u2040
  1777  0018E8                     u2041:
  1778  0018E8  EF9E  F00C         	goto	l1046
  1779  0018EC                     u2040:
  1780  0018EC  0E01               	movlw	1
  1781  0018EE  6E07               	movwf	___lwdiv@counter^0,c
  1782  0018F0  EF7E  F00C         	goto	l2444
  1783  0018F4                     l2442:
  1784  0018F4  90D8               	bcf	status,0,c
  1785  0018F6  3603               	rlcf	___lwdiv@divisor^0,f,c
  1786  0018F8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1787  0018FA  2A07               	incf	___lwdiv@counter^0,f,c
  1788  0018FC                     l2444:
  1789  0018FC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1790  0018FE  EF83  F00C         	goto	u2051
  1791  001902  EF85  F00C         	goto	u2050
  1792  001906                     u2051:
  1793  001906  EF7A  F00C         	goto	l2442
  1794  00190A                     u2050:
  1795  00190A                     l2446:
  1796  00190A  90D8               	bcf	status,0,c
  1797  00190C  3605               	rlcf	___lwdiv@quotient^0,f,c
  1798  00190E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1799  001910  5003               	movf	___lwdiv@divisor^0,w,c
  1800  001912  5C01               	subwf	___lwdiv@dividend^0,w,c
  1801  001914  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1802  001916  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1803  001918  A0D8               	btfss	status,0,c
  1804  00191A  EF91  F00C         	goto	u2061
  1805  00191E  EF93  F00C         	goto	u2060
  1806  001922                     u2061:
  1807  001922  EF98  F00C         	goto	l2454
  1808  001926                     u2060:
  1809  001926  5003               	movf	___lwdiv@divisor^0,w,c
  1810  001928  5E01               	subwf	___lwdiv@dividend^0,f,c
  1811  00192A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1812  00192C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1813  00192E  8005               	bsf	___lwdiv@quotient^0,0,c
  1814  001930                     l2454:
  1815  001930  90D8               	bcf	status,0,c
  1816  001932  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1817  001934  3203               	rrcf	___lwdiv@divisor^0,f,c
  1818  001936  2E07               	decfsz	___lwdiv@counter^0,f,c
  1819  001938  EF85  F00C         	goto	l2446
  1820  00193C                     l1046:
  1821  00193C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1822  001940  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1823  001944  0012               	return		;funcret
  1824  001946                     __end_of___lwdiv:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _ssdInit *****************
  1828 ;; Defined at:
  1829 ;;		line 94 in file "ssd.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1843 ;;      Params:         0       0       0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 2
  1850 ;; This function calls:
  1851 ;;		_pinMode
  1852 ;;		_soInit
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text11
  1859  001B38                     __ptext11:
  1860                           	callstack 0
  1861  001B38                     _ssdInit:
  1862                           	callstack 28
  1863  001B38                     
  1864                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1865  001B38  0E00               	movlw	0
  1866  001B3A  6E02               	movwf	(pinMode@pin+1)^0,c
  1867  001B3C  0E18               	movlw	24
  1868  001B3E  6E01               	movwf	pinMode@pin^0,c
  1869  001B40  0E00               	movlw	0
  1870  001B42  6E04               	movwf	(pinMode@type+1)^0,c
  1871  001B44  0E00               	movlw	0
  1872  001B46  6E03               	movwf	pinMode@type^0,c
  1873  001B48  EC5E  F003         	call	_pinMode	;wreg free
  1874                           
  1875                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1876  001B4C  0E00               	movlw	0
  1877  001B4E  6E02               	movwf	(pinMode@pin+1)^0,c
  1878  001B50  0E19               	movlw	25
  1879  001B52  6E01               	movwf	pinMode@pin^0,c
  1880  001B54  0E00               	movlw	0
  1881  001B56  6E04               	movwf	(pinMode@type+1)^0,c
  1882  001B58  0E00               	movlw	0
  1883  001B5A  6E03               	movwf	pinMode@type^0,c
  1884  001B5C  EC5E  F003         	call	_pinMode	;wreg free
  1885                           
  1886                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1887  001B60  0E00               	movlw	0
  1888  001B62  6E02               	movwf	(pinMode@pin+1)^0,c
  1889  001B64  0E1A               	movlw	26
  1890  001B66  6E01               	movwf	pinMode@pin^0,c
  1891  001B68  0E00               	movlw	0
  1892  001B6A  6E04               	movwf	(pinMode@type+1)^0,c
  1893  001B6C  0E00               	movlw	0
  1894  001B6E  6E03               	movwf	pinMode@type^0,c
  1895  001B70  EC5E  F003         	call	_pinMode	;wreg free
  1896                           
  1897                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1898  001B74  0E00               	movlw	0
  1899  001B76  6E02               	movwf	(pinMode@pin+1)^0,c
  1900  001B78  0E1B               	movlw	27
  1901  001B7A  6E01               	movwf	pinMode@pin^0,c
  1902  001B7C  0E00               	movlw	0
  1903  001B7E  6E04               	movwf	(pinMode@type+1)^0,c
  1904  001B80  0E00               	movlw	0
  1905  001B82  6E03               	movwf	pinMode@type^0,c
  1906  001B84  EC5E  F003         	call	_pinMode	;wreg free
  1907                           
  1908                           ;ssd.c: 102:     soInit();
  1909  001B88  EC63  F00E         	call	_soInit	;wreg free
  1910  001B8C  0012               	return		;funcret
  1911  001B8E                     __end_of_ssdInit:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _serialInit *****************
  1915 ;; Defined at:
  1916 ;;		line 48 in file "serial.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1930 ;;      Params:         0       0       0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0
  1933 ;;      Totals:         0       0       0       0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text12
  1944  001EEC                     __ptext12:
  1945                           	callstack 0
  1946  001EEC                     _serialInit:
  1947                           	callstack 30
  1948  001EEC                     
  1949                           ;serial.c: 49:     TXSTA = 0b00101100;
  1950  001EEC  0E2C               	movlw	44
  1951  001EEE  6EAC               	movwf	172,c	;volatile
  1952                           
  1953                           ;serial.c: 50:     RCSTA = 0b10010000;
  1954  001EF0  0E90               	movlw	144
  1955  001EF2  6EAB               	movwf	171,c	;volatile
  1956                           
  1957                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1958  001EF4  0E08               	movlw	8
  1959  001EF6  6EB8               	movwf	184,c	;volatile
  1960                           
  1961                           ;serial.c: 52:     SPBRGH = 0;
  1962  001EF8  0E00               	movlw	0
  1963  001EFA  6EB0               	movwf	176,c	;volatile
  1964                           
  1965                           ;serial.c: 53:     SPBRG = 34;
  1966  001EFC  0E22               	movlw	34
  1967  001EFE  6EAF               	movwf	175,c	;volatile
  1968  001F00                     
  1969                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1970  001F00  8C94               	bsf	148,6,c	;volatile
  1971  001F02                     
  1972                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1973  001F02  8E94               	bsf	148,7,c	;volatile
  1974  001F04  0012               	return		;funcret
  1975  001F06                     __end_of_serialInit:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _pwmInit *****************
  1979 ;; Defined at:
  1980 ;;		line 51 in file "pwm.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 2
  2001 ;; This function calls:
  2002 ;;		_pwmFrequency
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text13
  2009  001F06                     __ptext13:
  2010                           	callstack 0
  2011  001F06                     _pwmInit:
  2012                           	callstack 28
  2013  001F06                     
  2014                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2015  001F06  9294               	bcf	148,1,c	;volatile
  2016  001F08                     
  2017                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2018  001F08  0E03               	movlw	3
  2019  001F0A  12CA               	iorwf	202,f,c	;volatile
  2020  001F0C                     
  2021                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2022  001F0C  84CA               	bsf	202,2,c	;volatile
  2023  001F0E                     
  2024                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2025  001F0E  0E0C               	movlw	12
  2026  001F10  6EBA               	movwf	186,c	;volatile
  2027  001F12                     
  2028                           ;pwm.c: 60:     pwmFrequency(100);
  2029  001F12  0E00               	movlw	0
  2030  001F14  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2031  001F16  0E64               	movlw	100
  2032  001F18  6E0F               	movwf	pwmFrequency@freq^0,c
  2033  001F1A  EC21  F00F         	call	_pwmFrequency	;wreg free
  2034  001F1E  0012               	return		;funcret
  2035  001F20                     __end_of_pwmInit:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _pwmFrequency *****************
  2039 ;; Defined at:
  2040 ;;		line 44 in file "pwm.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  freq            2   14[COMRAM] unsigned int 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         2       0       0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0
  2057 ;;      Totals:         2       0       0       0       0       0       0
  2058 ;;Total ram usage:        2 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 1
  2061 ;; This function calls:
  2062 ;;		___aldiv
  2063 ;; This function is called by:
  2064 ;;		_pwmInit
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text14
  2069  001E42                     __ptext14:
  2070                           	callstack 0
  2071  001E42                     _pwmFrequency:
  2072                           	callstack 28
  2073  001E42                     
  2074                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2075  001E42  0E48               	movlw	72
  2076  001E44  6E01               	movwf	___aldiv@dividend^0,c
  2077  001E46  0EE8               	movlw	232
  2078  001E48  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2079  001E4A  0E01               	movlw	1
  2080  001E4C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2081  001E4E  0E00               	movlw	0
  2082  001E50  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2083  001E52  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2084  001E56  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2085  001E5A  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2086  001E5C  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2087  001E5E  ECA1  F008         	call	___aldiv	;wreg free
  2088  001E62  0401               	decf	?___aldiv^0,w,c
  2089  001E64  6ECB               	movwf	203,c	;volatile
  2090  001E66  0012               	return		;funcret
  2091  001E68                     __end_of_pwmFrequency:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function ___aldiv *****************
  2095 ;; Defined at:
  2096 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  dividend        4    0[COMRAM] long 
  2099 ;;  divisor         4    4[COMRAM] long 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  quotient        4   10[COMRAM] long 
  2102 ;;  sign            1    9[COMRAM] unsigned char 
  2103 ;;  counter         1    8[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  4    0[COMRAM] long 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         8       0       0       0       0       0       0
  2114 ;;      Locals:         6       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0
  2116 ;;      Totals:        14       0       0       0       0       0       0
  2117 ;;Total ram usage:       14 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_pwmFrequency
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text15
  2127  001142                     __ptext15:
  2128                           	callstack 0
  2129  001142                     ___aldiv:
  2130                           	callstack 28
  2131  001142  0E00               	movlw	0
  2132  001144  6E0A               	movwf	___aldiv@sign^0,c
  2133  001146  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2134  001148  EFAA  F008         	goto	u1860
  2135  00114C  EFA8  F008         	goto	u1861
  2136  001150                     u1861:
  2137  001150  EFB4  F008         	goto	l2320
  2138  001154                     u1860:
  2139  001154  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2140  001156  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2141  001158  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2142  00115A  6C05               	negf	___aldiv@divisor^0,c
  2143  00115C  0E00               	movlw	0
  2144  00115E  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2145  001160  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2146  001162  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2147  001164  0E01               	movlw	1
  2148  001166  6E0A               	movwf	___aldiv@sign^0,c
  2149  001168                     l2320:
  2150  001168  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2151  00116A  EFBB  F008         	goto	u1870
  2152  00116E  EFB9  F008         	goto	u1871
  2153  001172                     u1871:
  2154  001172  EFC5  F008         	goto	l2326
  2155  001176                     u1870:
  2156  001176  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2157  001178  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2158  00117A  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2159  00117C  6C01               	negf	___aldiv@dividend^0,c
  2160  00117E  0E00               	movlw	0
  2161  001180  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2162  001182  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2163  001184  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2164  001186  0E01               	movlw	1
  2165  001188  1A0A               	xorwf	___aldiv@sign^0,f,c
  2166  00118A                     l2326:
  2167  00118A  0E00               	movlw	0
  2168  00118C  6E0B               	movwf	___aldiv@quotient^0,c
  2169  00118E  0E00               	movlw	0
  2170  001190  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2171  001192  0E00               	movlw	0
  2172  001194  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2173  001196  0E00               	movlw	0
  2174  001198  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2175  00119A  5005               	movf	___aldiv@divisor^0,w,c
  2176  00119C  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2177  00119E  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2178  0011A0  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2179  0011A2  B4D8               	btfsc	status,2,c
  2180  0011A4  EFD6  F008         	goto	u1881
  2181  0011A8  EFD8  F008         	goto	u1880
  2182  0011AC                     u1881:
  2183  0011AC  EF0E  F009         	goto	l2348
  2184  0011B0                     u1880:
  2185  0011B0  0E01               	movlw	1
  2186  0011B2  6E09               	movwf	___aldiv@counter^0,c
  2187  0011B4  EFE2  F008         	goto	l2334
  2188  0011B8                     l2332:
  2189  0011B8  90D8               	bcf	status,0,c
  2190  0011BA  3605               	rlcf	___aldiv@divisor^0,f,c
  2191  0011BC  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2192  0011BE  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2193  0011C0  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2194  0011C2  2A09               	incf	___aldiv@counter^0,f,c
  2195  0011C4                     l2334:
  2196  0011C4  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2197  0011C6  EFE7  F008         	goto	u1891
  2198  0011CA  EFE9  F008         	goto	u1890
  2199  0011CE                     u1891:
  2200  0011CE  EFDC  F008         	goto	l2332
  2201  0011D2                     u1890:
  2202  0011D2                     l2336:
  2203  0011D2  90D8               	bcf	status,0,c
  2204  0011D4  360B               	rlcf	___aldiv@quotient^0,f,c
  2205  0011D6  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2206  0011D8  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2207  0011DA  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2208  0011DC  5005               	movf	___aldiv@divisor^0,w,c
  2209  0011DE  5C01               	subwf	___aldiv@dividend^0,w,c
  2210  0011E0  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2211  0011E2  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2212  0011E4  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2213  0011E6  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2214  0011E8  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2215  0011EA  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2216  0011EC  A0D8               	btfss	status,0,c
  2217  0011EE  EFFB  F008         	goto	u1901
  2218  0011F2  EFFD  F008         	goto	u1900
  2219  0011F6                     u1901:
  2220  0011F6  EF06  F009         	goto	l2344
  2221  0011FA                     u1900:
  2222  0011FA  5005               	movf	___aldiv@divisor^0,w,c
  2223  0011FC  5E01               	subwf	___aldiv@dividend^0,f,c
  2224  0011FE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2225  001200  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2226  001202  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2227  001204  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2228  001206  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2229  001208  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2230  00120A  800B               	bsf	___aldiv@quotient^0,0,c
  2231  00120C                     l2344:
  2232  00120C  90D8               	bcf	status,0,c
  2233  00120E  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2234  001210  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2235  001212  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2236  001214  3205               	rrcf	___aldiv@divisor^0,f,c
  2237  001216  2E09               	decfsz	___aldiv@counter^0,f,c
  2238  001218  EFE9  F008         	goto	l2336
  2239  00121C                     l2348:
  2240  00121C  500A               	movf	___aldiv@sign^0,w,c
  2241  00121E  B4D8               	btfsc	status,2,c
  2242  001220  EF14  F009         	goto	u1911
  2243  001224  EF16  F009         	goto	u1910
  2244  001228                     u1911:
  2245  001228  EF1E  F009         	goto	l2352
  2246  00122C                     u1910:
  2247  00122C  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2248  00122E  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2249  001230  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2250  001232  6C0B               	negf	___aldiv@quotient^0,c
  2251  001234  0E00               	movlw	0
  2252  001236  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2253  001238  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2254  00123A  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2255  00123C                     l2352:
  2256  00123C  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2257  001240  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2258  001244  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2259  001248  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2260  00124C  0012               	return		;funcret
  2261  00124E                     __end_of___aldiv:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _menuCtrl *****************
  2265 ;; Defined at:
  2266 ;;		line 111 in file "menu.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  menuNum         1    wreg     unsigned char 
  2269 ;;  subMenu         1    5[COMRAM] unsigned char 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  menuNum         1    8[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         1       0       0       0       0       0       0
  2282 ;;      Locals:         1       0       0       0       0       0       0
  2283 ;;      Temps:          2       0       0       0       0       0       0
  2284 ;;      Totals:         4       0       0       0       0       0       0
  2285 ;;Total ram usage:        4 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 1
  2288 ;; This function calls:
  2289 ;;		_kpRead
  2290 ;;		_kpReadKey
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text16
  2297  000B58                     __ptext16:
  2298                           	callstack 0
  2299  000B58                     _menuCtrl:
  2300                           	callstack 29
  2301                           
  2302                           ;incstack = 0
  2303                           ;menuCtrl@menuNum stored from wreg
  2304  000B58  6E09               	movwf	menuCtrl@menuNum^0,c
  2305  000B5A                     
  2306                           ;menu.c: 112:     if (kpRead() != aux2) {
  2307  000B5A  ECA3  F00F         	call	_kpRead	;wreg free
  2308  000B5E  501B               	movf	_aux2^0,w,c
  2309  000B60  1801               	xorwf	?_kpRead^0,w,c
  2310  000B62  E109               	bnz	u2430
  2311  000B64  501C               	movf	(_aux2+1)^0,w,c
  2312  000B66  1802               	xorwf	(?_kpRead+1)^0,w,c
  2313  000B68  B4D8               	btfsc	status,2,c
  2314  000B6A  EFB9  F005         	goto	u2431
  2315  000B6E  EFBB  F005         	goto	u2430
  2316  000B72                     u2431:
  2317  000B72  EF85  F006         	goto	l342
  2318  000B76                     u2430:
  2319  000B76                     
  2320                           ;menu.c: 113:         aux2 = kpRead();
  2321  000B76  ECA3  F00F         	call	_kpRead	;wreg free
  2322  000B7A  C001  F01B         	movff	?_kpRead,_aux2
  2323  000B7E  C002  F01C         	movff	?_kpRead+1,_aux2+1
  2324  000B82                     
  2325                           ;menu.c: 114:         if (kpReadKey() != 0) {
  2326  000B82  EC2D  F00C         	call	_kpReadKey	;wreg free
  2327  000B86  0900               	iorlw	0
  2328  000B88  B4D8               	btfsc	status,2,c
  2329  000B8A  EFC9  F005         	goto	u2441
  2330  000B8E  EFCB  F005         	goto	u2440
  2331  000B92                     u2441:
  2332  000B92  EF85  F006         	goto	l342
  2333  000B96                     u2440:
  2334  000B96                     
  2335                           ;menu.c: 115:             ctrl = kpReadKey();
  2336  000B96  EC2D  F00C         	call	_kpReadKey	;wreg free
  2337  000B9A  6E2B               	movwf	_ctrl^0,c
  2338                           
  2339                           ;menu.c: 117:             switch (ctrl) {
  2340  000B9C  EF70  F006         	goto	l2760
  2341  000BA0                     l2716:
  2342                           
  2343                           ;menu.c: 119:                     if ((subMenu == 2)&&(menuNum == 1)&&(temp<280)) {
  2344  000BA0  0E02               	movlw	2
  2345  000BA2  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2346  000BA4  A4D8               	btfss	status,2,c
  2347  000BA6  EFD7  F005         	goto	u2451
  2348  000BAA  EFD9  F005         	goto	u2450
  2349  000BAE                     u2451:
  2350  000BAE  EFF0  F005         	goto	l2724
  2351  000BB2                     u2450:
  2352  000BB2  0409               	decf	menuCtrl@menuNum^0,w,c
  2353  000BB4  A4D8               	btfss	status,2,c
  2354  000BB6  EFDF  F005         	goto	u2461
  2355  000BBA  EFE1  F005         	goto	u2460
  2356  000BBE                     u2461:
  2357  000BBE  EFF0  F005         	goto	l2724
  2358  000BC2                     u2460:
  2359  000BC2  0E18               	movlw	24
  2360  000BC4  5C2E               	subwf	_temp^0,w,c
  2361  000BC6  0E01               	movlw	1
  2362  000BC8  582F               	subwfb	(_temp+1)^0,w,c
  2363  000BCA  B0D8               	btfsc	status,0,c
  2364  000BCC  EFEA  F005         	goto	u2471
  2365  000BD0  EFEC  F005         	goto	u2470
  2366  000BD4                     u2471:
  2367  000BD4  EFF0  F005         	goto	l2724
  2368  000BD8                     u2470:
  2369  000BD8                     
  2370                           ;menu.c: 120:                         temp++;
  2371  000BD8  4A2E               	infsnz	_temp^0,f,c
  2372  000BDA  2A2F               	incf	(_temp+1)^0,f,c
  2373                           
  2374                           ;menu.c: 121:                     }
  2375  000BDC  EF85  F006         	goto	l342
  2376  000BE0                     l2724:
  2377                           
  2378                           ;menu.c: 123:                         if ((subMenu == 2)&&(menuNum == 2)&&(pres<20)) {
  2379  000BE0  0E02               	movlw	2
  2380  000BE2  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2381  000BE4  A4D8               	btfss	status,2,c
  2382  000BE6  EFF7  F005         	goto	u2481
  2383  000BEA  EFF9  F005         	goto	u2480
  2384  000BEE                     u2481:
  2385  000BEE  EF11  F006         	goto	l2732
  2386  000BF2                     u2480:
  2387  000BF2  0E02               	movlw	2
  2388  000BF4  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2389  000BF6  A4D8               	btfss	status,2,c
  2390  000BF8  EF00  F006         	goto	u2491
  2391  000BFC  EF02  F006         	goto	u2490
  2392  000C00                     u2491:
  2393  000C00  EF11  F006         	goto	l2732
  2394  000C04                     u2490:
  2395  000C04  5031               	movf	(_pres+1)^0,w,c
  2396  000C06  E107               	bnz	u2501
  2397  000C08  0E14               	movlw	20
  2398  000C0A  5C30               	subwf	_pres^0,w,c
  2399  000C0C  B0D8               	btfsc	status,0,c
  2400  000C0E  EF0B  F006         	goto	u2501
  2401  000C12  EF0D  F006         	goto	u2500
  2402  000C16                     u2501:
  2403  000C16  EF11  F006         	goto	l2732
  2404  000C1A                     u2500:
  2405  000C1A                     
  2406                           ;menu.c: 124:                             pres++;
  2407  000C1A  4A30               	infsnz	_pres^0,f,c
  2408  000C1C  2A31               	incf	(_pres+1)^0,f,c
  2409                           
  2410                           ;menu.c: 125:                         } else {
  2411  000C1E  EF85  F006         	goto	l342
  2412  000C22                     l2732:
  2413                           
  2414                           ;menu.c: 126:                             if ((subMenu == 2)&&(menuNum == 3)&&(lev<=100)
      +                          ) {
  2415  000C22  0E02               	movlw	2
  2416  000C24  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2417  000C26  A4D8               	btfss	status,2,c
  2418  000C28  EF18  F006         	goto	u2511
  2419  000C2C  EF1A  F006         	goto	u2510
  2420  000C30                     u2511:
  2421  000C30  EF85  F006         	goto	l334
  2422  000C34                     u2510:
  2423  000C34  0E03               	movlw	3
  2424  000C36  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2425  000C38  A4D8               	btfss	status,2,c
  2426  000C3A  EF21  F006         	goto	u2521
  2427  000C3E  EF23  F006         	goto	u2520
  2428  000C42                     u2521:
  2429  000C42  EF85  F006         	goto	l334
  2430  000C46                     u2520:
  2431  000C46  0E65               	movlw	101
  2432  000C48  6032               	cpfslt	_lev^0,c
  2433  000C4A  EF29  F006         	goto	u2531
  2434  000C4E  EF2B  F006         	goto	u2530
  2435  000C52                     u2531:
  2436  000C52  EF85  F006         	goto	l334
  2437  000C56                     u2530:
  2438  000C56                     
  2439                           ;menu.c: 127:                                 lev++;
  2440  000C56  2A32               	incf	_lev^0,f,c
  2441  000C58  EF85  F006         	goto	l342
  2442  000C5C                     l2740:
  2443                           
  2444                           ;menu.c: 134:                     if ((subMenu == 2)&&(menuNum == 1)&&(temp >= 0)) {
  2445  000C5C  0E02               	movlw	2
  2446  000C5E  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2447  000C60  A4D8               	btfss	status,2,c
  2448  000C62  EF35  F006         	goto	u2541
  2449  000C66  EF37  F006         	goto	u2540
  2450  000C6A                     u2541:
  2451  000C6A  EF44  F006         	goto	l2746
  2452  000C6E                     u2540:
  2453  000C6E  0409               	decf	menuCtrl@menuNum^0,w,c
  2454  000C70  A4D8               	btfss	status,2,c
  2455  000C72  EF3D  F006         	goto	u2551
  2456  000C76  EF3F  F006         	goto	u2550
  2457  000C7A                     u2551:
  2458  000C7A  EF44  F006         	goto	l2746
  2459  000C7E                     u2550:
  2460  000C7E                     
  2461                           ;menu.c: 135:                         temp--;
  2462  000C7E  062E               	decf	_temp^0,f,c
  2463  000C80  A0D8               	btfss	status,0,c
  2464  000C82  062F               	decf	(_temp+1)^0,f,c
  2465                           
  2466                           ;menu.c: 136:                     } else {
  2467  000C84  EF85  F006         	goto	l342
  2468  000C88                     l2746:
  2469                           
  2470                           ;menu.c: 137:                         if ((subMenu == 2)&&(menuNum == 2)&&(pres >= 0)) {
  2471  000C88  0E02               	movlw	2
  2472  000C8A  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2473  000C8C  A4D8               	btfss	status,2,c
  2474  000C8E  EF4B  F006         	goto	u2561
  2475  000C92  EF4D  F006         	goto	u2560
  2476  000C96                     u2561:
  2477  000C96  EF5B  F006         	goto	l2752
  2478  000C9A                     u2560:
  2479  000C9A  0E02               	movlw	2
  2480  000C9C  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2481  000C9E  A4D8               	btfss	status,2,c
  2482  000CA0  EF54  F006         	goto	u2571
  2483  000CA4  EF56  F006         	goto	u2570
  2484  000CA8                     u2571:
  2485  000CA8  EF5B  F006         	goto	l2752
  2486  000CAC                     u2570:
  2487  000CAC                     
  2488                           ;menu.c: 138:                             pres--;
  2489  000CAC  0630               	decf	_pres^0,f,c
  2490  000CAE  A0D8               	btfss	status,0,c
  2491  000CB0  0631               	decf	(_pres+1)^0,f,c
  2492                           
  2493                           ;menu.c: 139:                         } else {
  2494  000CB2  EF85  F006         	goto	l342
  2495  000CB6                     l2752:
  2496                           
  2497                           ;menu.c: 140:                             if ((subMenu == 2)&&(menuNum == 3)&&(lev >= 0)
      +                          ) {
  2498  000CB6  0E02               	movlw	2
  2499  000CB8  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2500  000CBA  A4D8               	btfss	status,2,c
  2501  000CBC  EF62  F006         	goto	u2581
  2502  000CC0  EF64  F006         	goto	u2580
  2503  000CC4                     u2581:
  2504  000CC4  EF85  F006         	goto	l334
  2505  000CC8                     u2580:
  2506  000CC8  0E03               	movlw	3
  2507  000CCA  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2508  000CCC  A4D8               	btfss	status,2,c
  2509  000CCE  EF6B  F006         	goto	u2591
  2510  000CD2  EF6D  F006         	goto	u2590
  2511  000CD6                     u2591:
  2512  000CD6  EF85  F006         	goto	l334
  2513  000CDA                     u2590:
  2514  000CDA                     
  2515                           ;menu.c: 141:                                 lev--;
  2516  000CDA  0632               	decf	_lev^0,f,c
  2517  000CDC  EF85  F006         	goto	l342
  2518  000CE0                     l2760:
  2519  000CE0  502B               	movf	_ctrl^0,w,c
  2520  000CE2  6E07               	movwf	??_menuCtrl^0,c
  2521  000CE4  6A08               	clrf	(??_menuCtrl+1)^0,c
  2522                           
  2523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2524                           ; Switch size 1, requested type "simple"
  2525                           ; Number of cases is 1, Range of values is 0 to 0
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte            4     3 (average)
  2529                           ;	Chosen strategy is simple_byte
  2530  000CE6  5008               	movf	(??_menuCtrl+1)^0,w,c
  2531  000CE8  0A00               	xorlw	0	; case 0
  2532  000CEA  B4D8               	btfsc	status,2,c
  2533  000CEC  EF7A  F006         	goto	l3012
  2534  000CF0  EF85  F006         	goto	l334
  2535  000CF4                     l3012:
  2536                           
  2537                           ; Switch size 1, requested type "simple"
  2538                           ; Number of cases is 2, Range of values is 68 to 85
  2539                           ; switch strategies available:
  2540                           ; Name         Instructions Cycles
  2541                           ; simple_byte            7     4 (average)
  2542                           ;	Chosen strategy is simple_byte
  2543  000CF4  5007               	movf	??_menuCtrl^0,w,c
  2544  000CF6  0A44               	xorlw	68	; case 68
  2545  000CF8  B4D8               	btfsc	status,2,c
  2546  000CFA  EF2E  F006         	goto	l2740
  2547  000CFE  0A11               	xorlw	17	; case 85
  2548  000D00  B4D8               	btfsc	status,2,c
  2549  000D02  EFD0  F005         	goto	l2716
  2550  000D06  EF85  F006         	goto	l334
  2551  000D0A                     l334:
  2552  000D0A                     l342:
  2553  000D0A  0012               	return		;funcret
  2554  000D0C                     __end_of_menuCtrl:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _menu3 *****************
  2558 ;; Defined at:
  2559 ;;		line 92 in file "menu.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  subMenu         1    wreg     unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  subMenu         1   22[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2573 ;;      Params:         0       0       0       0       0       0       0
  2574 ;;      Locals:         1       0       0       0       0       0       0
  2575 ;;      Temps:          2       0       0       0       0       0       0
  2576 ;;      Totals:         3       0       0       0       0       0       0
  2577 ;;Total ram usage:        3 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 6
  2580 ;; This function calls:
  2581 ;;		_lcdCommand
  2582 ;;		_lcdNumber
  2583 ;;		_lcdString
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text17
  2590  001748                     __ptext17:
  2591                           	callstack 0
  2592  001748                     _menu3:
  2593                           	callstack 24
  2594                           
  2595                           ;incstack = 0
  2596                           ;menu3@subMenu stored from wreg
  2597  001748  6E17               	movwf	menu3@subMenu^0,c
  2598  00174A                     
  2599                           ;menu.c: 93:     switch (subMenu) {
  2600  00174A  EFDA  F00B         	goto	l2702
  2601  00174E                     l2684:
  2602                           
  2603                           ;menu.c: 95:             lcdCommand(0x80);
  2604  00174E  0E80               	movlw	128
  2605  001750  EC67  F00F         	call	_lcdCommand
  2606  001754                     
  2607                           ;menu.c: 96:             lcdString("<  Nivel Agua   ");
  2608  001754  0E3D               	movlw	low STR_11
  2609  001756  6E0F               	movwf	lcdString@msg^0,c
  2610  001758  0E06               	movlw	high STR_11
  2611  00175A  6E10               	movwf	(lcdString@msg+1)^0,c
  2612  00175C  ECC7  F00D         	call	_lcdString	;wreg free
  2613  001760                     
  2614                           ;menu.c: 97:             lcdCommand(0xC0);
  2615  001760  0EC0               	movlw	192
  2616  001762  EC67  F00F         	call	_lcdCommand
  2617                           
  2618                           ;menu.c: 98:             lcdString("                ");
  2619  001766  0E1B               	movlw	low STR_2
  2620  001768  6E0F               	movwf	lcdString@msg^0,c
  2621  00176A  0E06               	movlw	high STR_2
  2622  00176C  6E10               	movwf	(lcdString@msg+1)^0,c
  2623  00176E  ECC7  F00D         	call	_lcdString	;wreg free
  2624                           
  2625                           ;menu.c: 99:             break;
  2626  001772  EFEF  F00B         	goto	l322
  2627  001776                     l2690:
  2628                           
  2629                           ;menu.c: 101:             lcdCommand(0x80);
  2630  001776  0E80               	movlw	128
  2631  001778  EC67  F00F         	call	_lcdCommand
  2632  00177C                     
  2633                           ;menu.c: 102:             lcdString("   Nivel Agua:  ");
  2634  00177C  0E5F               	movlw	low STR_13
  2635  00177E  6E0F               	movwf	lcdString@msg^0,c
  2636  001780  0E06               	movlw	high STR_13
  2637  001782  6E10               	movwf	(lcdString@msg+1)^0,c
  2638  001784  ECC7  F00D         	call	_lcdString	;wreg free
  2639  001788                     
  2640                           ;menu.c: 103:             lcdCommand(0xC0);
  2641  001788  0EC0               	movlw	192
  2642  00178A  EC67  F00F         	call	_lcdCommand
  2643                           
  2644                           ;menu.c: 104:             lcdString("    ");
  2645  00178E  0E27               	movlw	low (STR_2+12)
  2646  001790  6E0F               	movwf	lcdString@msg^0,c
  2647  001792  0E06               	movlw	high (STR_2+12)
  2648  001794  6E10               	movwf	(lcdString@msg+1)^0,c
  2649  001796  ECC7  F00D         	call	_lcdString	;wreg free
  2650  00179A                     
  2651                           ;menu.c: 105:             lcdNumber(lev);
  2652  00179A  C032  F00F         	movff	_lev,lcdNumber@value
  2653  00179E  6A10               	clrf	(lcdNumber@value+1)^0,c
  2654  0017A0  ECA3  F00C         	call	_lcdNumber	;wreg free
  2655  0017A4                     
  2656                           ;menu.c: 106:             lcdString(" %      ");
  2657  0017A4  0E9F               	movlw	low STR_15
  2658  0017A6  6E0F               	movwf	lcdString@msg^0,c
  2659  0017A8  0E06               	movlw	high STR_15
  2660  0017AA  6E10               	movwf	(lcdString@msg+1)^0,c
  2661  0017AC  ECC7  F00D         	call	_lcdString	;wreg free
  2662                           
  2663                           ;menu.c: 107:             break;
  2664  0017B0  EFEF  F00B         	goto	l322
  2665  0017B4                     l2702:
  2666  0017B4  5017               	movf	menu3@subMenu^0,w,c
  2667  0017B6  6E15               	movwf	??_menu3^0,c
  2668  0017B8  6A16               	clrf	(??_menu3+1)^0,c
  2669                           
  2670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2671                           ; Switch size 1, requested type "simple"
  2672                           ; Number of cases is 1, Range of values is 0 to 0
  2673                           ; switch strategies available:
  2674                           ; Name         Instructions Cycles
  2675                           ; simple_byte            4     3 (average)
  2676                           ;	Chosen strategy is simple_byte
  2677  0017BA  5016               	movf	(??_menu3+1)^0,w,c
  2678  0017BC  0A00               	xorlw	0	; case 0
  2679  0017BE  B4D8               	btfsc	status,2,c
  2680  0017C0  EFE4  F00B         	goto	l3014
  2681  0017C4  EFEF  F00B         	goto	l322
  2682  0017C8                     l3014:
  2683                           
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 2, Range of values is 1 to 2
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte            7     4 (average)
  2689                           ;	Chosen strategy is simple_byte
  2690  0017C8  5015               	movf	??_menu3^0,w,c
  2691  0017CA  0A01               	xorlw	1	; case 1
  2692  0017CC  B4D8               	btfsc	status,2,c
  2693  0017CE  EFA7  F00B         	goto	l2684
  2694  0017D2  0A03               	xorlw	3	; case 2
  2695  0017D4  B4D8               	btfsc	status,2,c
  2696  0017D6  EFBB  F00B         	goto	l2690
  2697  0017DA  EFEF  F00B         	goto	l322
  2698  0017DE                     l322:
  2699  0017DE  0012               	return		;funcret
  2700  0017E0                     __end_of_menu3:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _menu2 *****************
  2704 ;; Defined at:
  2705 ;;		line 72 in file "menu.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  subMenu         1    wreg     unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  subMenu         1   22[COMRAM] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2719 ;;      Params:         0       0       0       0       0       0       0
  2720 ;;      Locals:         1       0       0       0       0       0       0
  2721 ;;      Temps:          2       0       0       0       0       0       0
  2722 ;;      Totals:         3       0       0       0       0       0       0
  2723 ;;Total ram usage:        3 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 6
  2726 ;; This function calls:
  2727 ;;		_lcdCommand
  2728 ;;		_lcdNumber
  2729 ;;		_lcdString
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text18
  2736  001614                     __ptext18:
  2737                           	callstack 0
  2738  001614                     _menu2:
  2739                           	callstack 24
  2740                           
  2741                           ;incstack = 0
  2742                           ;menu2@subMenu stored from wreg
  2743  001614  6E17               	movwf	menu2@subMenu^0,c
  2744  001616                     
  2745                           ;menu.c: 73:     switch (subMenu) {
  2746  001616  EF41  F00B         	goto	l2676
  2747  00161A                     l2658:
  2748                           
  2749                           ;menu.c: 75:             lcdCommand(0x80);
  2750  00161A  0E80               	movlw	128
  2751  00161C  EC67  F00F         	call	_lcdCommand
  2752  001620                     
  2753                           ;menu.c: 76:             lcdString("<    Pressao   >");
  2754  001620  0E70               	movlw	low STR_6
  2755  001622  6E0F               	movwf	lcdString@msg^0,c
  2756  001624  0E06               	movlw	high STR_6
  2757  001626  6E10               	movwf	(lcdString@msg+1)^0,c
  2758  001628  ECC7  F00D         	call	_lcdString	;wreg free
  2759  00162C                     
  2760                           ;menu.c: 77:             lcdCommand(0xC0);
  2761  00162C  0EC0               	movlw	192
  2762  00162E  EC67  F00F         	call	_lcdCommand
  2763                           
  2764                           ;menu.c: 78:             lcdString("                ");
  2765  001632  0E1B               	movlw	low STR_2
  2766  001634  6E0F               	movwf	lcdString@msg^0,c
  2767  001636  0E06               	movlw	high STR_2
  2768  001638  6E10               	movwf	(lcdString@msg+1)^0,c
  2769  00163A  ECC7  F00D         	call	_lcdString	;wreg free
  2770                           
  2771                           ;menu.c: 79:             break;
  2772  00163E  EF56  F00B         	goto	l315
  2773  001642                     l2664:
  2774                           
  2775                           ;menu.c: 81:             lcdCommand(0x80);
  2776  001642  0E80               	movlw	128
  2777  001644  EC67  F00F         	call	_lcdCommand
  2778  001648                     
  2779                           ;menu.c: 82:             lcdString("    Pressao:    ");
  2780  001648  0E2C               	movlw	low STR_8
  2781  00164A  6E0F               	movwf	lcdString@msg^0,c
  2782  00164C  0E06               	movlw	high STR_8
  2783  00164E  6E10               	movwf	(lcdString@msg+1)^0,c
  2784  001650  ECC7  F00D         	call	_lcdString	;wreg free
  2785  001654                     
  2786                           ;menu.c: 84:             lcdCommand(0xC0);
  2787  001654  0EC0               	movlw	192
  2788  001656  EC67  F00F         	call	_lcdCommand
  2789                           
  2790                           ;menu.c: 85:             lcdString("    ");
  2791  00165A  0E27               	movlw	low (STR_2+12)
  2792  00165C  6E0F               	movwf	lcdString@msg^0,c
  2793  00165E  0E06               	movlw	high (STR_2+12)
  2794  001660  6E10               	movwf	(lcdString@msg+1)^0,c
  2795  001662  ECC7  F00D         	call	_lcdString	;wreg free
  2796  001666                     
  2797                           ;menu.c: 86:             lcdNumber(pres);
  2798  001666  C030  F00F         	movff	_pres,lcdNumber@value
  2799  00166A  C031  F010         	movff	_pres+1,lcdNumber@value+1
  2800  00166E  ECA3  F00C         	call	_lcdNumber	;wreg free
  2801  001672                     
  2802                           ;menu.c: 87:             lcdString(" bar    ");
  2803  001672  0EB1               	movlw	low STR_10
  2804  001674  6E0F               	movwf	lcdString@msg^0,c
  2805  001676  0E06               	movlw	high STR_10
  2806  001678  6E10               	movwf	(lcdString@msg+1)^0,c
  2807  00167A  ECC7  F00D         	call	_lcdString	;wreg free
  2808                           
  2809                           ;menu.c: 88:             break;
  2810  00167E  EF56  F00B         	goto	l315
  2811  001682                     l2676:
  2812  001682  5017               	movf	menu2@subMenu^0,w,c
  2813  001684  6E15               	movwf	??_menu2^0,c
  2814  001686  6A16               	clrf	(??_menu2+1)^0,c
  2815                           
  2816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2817                           ; Switch size 1, requested type "simple"
  2818                           ; Number of cases is 1, Range of values is 0 to 0
  2819                           ; switch strategies available:
  2820                           ; Name         Instructions Cycles
  2821                           ; simple_byte            4     3 (average)
  2822                           ;	Chosen strategy is simple_byte
  2823  001688  5016               	movf	(??_menu2+1)^0,w,c
  2824  00168A  0A00               	xorlw	0	; case 0
  2825  00168C  B4D8               	btfsc	status,2,c
  2826  00168E  EF4B  F00B         	goto	l3016
  2827  001692  EF56  F00B         	goto	l315
  2828  001696                     l3016:
  2829                           
  2830                           ; Switch size 1, requested type "simple"
  2831                           ; Number of cases is 2, Range of values is 1 to 2
  2832                           ; switch strategies available:
  2833                           ; Name         Instructions Cycles
  2834                           ; simple_byte            7     4 (average)
  2835                           ;	Chosen strategy is simple_byte
  2836  001696  5015               	movf	??_menu2^0,w,c
  2837  001698  0A01               	xorlw	1	; case 1
  2838  00169A  B4D8               	btfsc	status,2,c
  2839  00169C  EF0D  F00B         	goto	l2658
  2840  0016A0  0A03               	xorlw	3	; case 2
  2841  0016A2  B4D8               	btfsc	status,2,c
  2842  0016A4  EF21  F00B         	goto	l2664
  2843  0016A8  EF56  F00B         	goto	l315
  2844  0016AC                     l315:
  2845  0016AC  0012               	return		;funcret
  2846  0016AE                     __end_of_menu2:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _menu1 *****************
  2850 ;; Defined at:
  2851 ;;		line 53 in file "menu.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  subMenu         1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  subMenu         1   22[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2865 ;;      Params:         0       0       0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0       0       0
  2867 ;;      Temps:          2       0       0       0       0       0       0
  2868 ;;      Totals:         3       0       0       0       0       0       0
  2869 ;;Total ram usage:        3 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 6
  2872 ;; This function calls:
  2873 ;;		_lcdCommand
  2874 ;;		_lcdNumber
  2875 ;;		_lcdString
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text19
  2882  0016AE                     __ptext19:
  2883                           	callstack 0
  2884  0016AE                     _menu1:
  2885                           	callstack 24
  2886                           
  2887                           ;incstack = 0
  2888                           ;menu1@subMenu stored from wreg
  2889  0016AE  6E17               	movwf	menu1@subMenu^0,c
  2890  0016B0                     
  2891                           ;menu.c: 54:     switch (subMenu) {
  2892  0016B0  EF8E  F00B         	goto	l2650
  2893  0016B4                     l2632:
  2894                           
  2895                           ;menu.c: 56:             lcdCommand(0x80);
  2896  0016B4  0E80               	movlw	128
  2897  0016B6  EC67  F00F         	call	_lcdCommand
  2898  0016BA                     
  2899                           ;menu.c: 57:             lcdString("  Temperatura  >");
  2900  0016BA  0E81               	movlw	low STR_1
  2901  0016BC  6E0F               	movwf	lcdString@msg^0,c
  2902  0016BE  0E06               	movlw	high STR_1
  2903  0016C0  6E10               	movwf	(lcdString@msg+1)^0,c
  2904  0016C2  ECC7  F00D         	call	_lcdString	;wreg free
  2905  0016C6                     
  2906                           ;menu.c: 58:             lcdCommand(0xC0);
  2907  0016C6  0EC0               	movlw	192
  2908  0016C8  EC67  F00F         	call	_lcdCommand
  2909                           
  2910                           ;menu.c: 59:             lcdString("                ");
  2911  0016CC  0E1B               	movlw	low STR_2
  2912  0016CE  6E0F               	movwf	lcdString@msg^0,c
  2913  0016D0  0E06               	movlw	high STR_2
  2914  0016D2  6E10               	movwf	(lcdString@msg+1)^0,c
  2915  0016D4  ECC7  F00D         	call	_lcdString	;wreg free
  2916                           
  2917                           ;menu.c: 60:             break;
  2918  0016D8  EFA3  F00B         	goto	l308
  2919  0016DC                     l2638:
  2920                           
  2921                           ;menu.c: 62:             lcdCommand(0x80);
  2922  0016DC  0E80               	movlw	128
  2923  0016DE  EC67  F00F         	call	_lcdCommand
  2924  0016E2                     
  2925                           ;menu.c: 63:             lcdString("  Temperatura:  ");
  2926  0016E2  0E4E               	movlw	low STR_3
  2927  0016E4  6E0F               	movwf	lcdString@msg^0,c
  2928  0016E6  0E06               	movlw	high STR_3
  2929  0016E8  6E10               	movwf	(lcdString@msg+1)^0,c
  2930  0016EA  ECC7  F00D         	call	_lcdString	;wreg free
  2931  0016EE                     
  2932                           ;menu.c: 64:             lcdCommand(0xC0);
  2933  0016EE  0EC0               	movlw	192
  2934  0016F0  EC67  F00F         	call	_lcdCommand
  2935                           
  2936                           ;menu.c: 65:             lcdString("    ");
  2937  0016F4  0E27               	movlw	low (STR_2+12)
  2938  0016F6  6E0F               	movwf	lcdString@msg^0,c
  2939  0016F8  0E06               	movlw	high (STR_2+12)
  2940  0016FA  6E10               	movwf	(lcdString@msg+1)^0,c
  2941  0016FC  ECC7  F00D         	call	_lcdString	;wreg free
  2942  001700                     
  2943                           ;menu.c: 66:             lcdNumber(temp);
  2944  001700  C02E  F00F         	movff	_temp,lcdNumber@value
  2945  001704  C02F  F010         	movff	_temp+1,lcdNumber@value+1
  2946  001708  ECA3  F00C         	call	_lcdNumber	;wreg free
  2947  00170C                     
  2948                           ;menu.c: 67:             lcdString(" ºC     ");
  2949  00170C  0EA8               	movlw	low STR_5
  2950  00170E  6E0F               	movwf	lcdString@msg^0,c
  2951  001710  0E06               	movlw	high STR_5
  2952  001712  6E10               	movwf	(lcdString@msg+1)^0,c
  2953  001714  ECC7  F00D         	call	_lcdString	;wreg free
  2954                           
  2955                           ;menu.c: 68:             break;
  2956  001718  EFA3  F00B         	goto	l308
  2957  00171C                     l2650:
  2958  00171C  5017               	movf	menu1@subMenu^0,w,c
  2959  00171E  6E15               	movwf	??_menu1^0,c
  2960  001720  6A16               	clrf	(??_menu1+1)^0,c
  2961                           
  2962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2963                           ; Switch size 1, requested type "simple"
  2964                           ; Number of cases is 1, Range of values is 0 to 0
  2965                           ; switch strategies available:
  2966                           ; Name         Instructions Cycles
  2967                           ; simple_byte            4     3 (average)
  2968                           ;	Chosen strategy is simple_byte
  2969  001722  5016               	movf	(??_menu1+1)^0,w,c
  2970  001724  0A00               	xorlw	0	; case 0
  2971  001726  B4D8               	btfsc	status,2,c
  2972  001728  EF98  F00B         	goto	l3018
  2973  00172C  EFA3  F00B         	goto	l308
  2974  001730                     l3018:
  2975                           
  2976                           ; Switch size 1, requested type "simple"
  2977                           ; Number of cases is 2, Range of values is 1 to 2
  2978                           ; switch strategies available:
  2979                           ; Name         Instructions Cycles
  2980                           ; simple_byte            7     4 (average)
  2981                           ;	Chosen strategy is simple_byte
  2982  001730  5015               	movf	??_menu1^0,w,c
  2983  001732  0A01               	xorlw	1	; case 1
  2984  001734  B4D8               	btfsc	status,2,c
  2985  001736  EF5A  F00B         	goto	l2632
  2986  00173A  0A03               	xorlw	3	; case 2
  2987  00173C  B4D8               	btfsc	status,2,c
  2988  00173E  EF6E  F00B         	goto	l2638
  2989  001742  EFA3  F00B         	goto	l308
  2990  001746                     l308:
  2991  001746  0012               	return		;funcret
  2992  001748                     __end_of_menu1:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _lcdString *****************
  2996 ;; Defined at:
  2997 ;;		line 57 in file "lcd.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3000 ;;		 -> STR_16(13), STR_15(9), STR_14(5), STR_13(17), 
  3001 ;;		 -> STR_12(17), STR_11(17), STR_10(9), STR_9(5), 
  3002 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(9), 
  3003 ;;		 -> STR_4(5), STR_3(17), STR_2(17), STR_1(17), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  i               2   18[COMRAM] int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         2       0       0       0       0       0       0
  3016 ;;      Locals:         2       0       0       0       0       0       0
  3017 ;;      Temps:          2       0       0       0       0       0       0
  3018 ;;      Totals:         6       0       0       0       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 5
  3022 ;; This function calls:
  3023 ;;		_lcdChar
  3024 ;; This function is called by:
  3025 ;;		_menu1
  3026 ;;		_menu2
  3027 ;;		_menu3
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text20
  3033  001B8E                     __ptext20:
  3034                           	callstack 0
  3035  001B8E                     _lcdString:
  3036                           	callstack 24
  3037  001B8E                     
  3038                           ;lcd.c: 58:  int i = 0;
  3039  001B8E  0E00               	movlw	0
  3040  001B90  6E14               	movwf	(lcdString@i+1)^0,c
  3041  001B92  0E00               	movlw	0
  3042  001B94  6E13               	movwf	lcdString@i^0,c
  3043                           
  3044                           ;lcd.c: 59:  while (msg[i] != 0) {
  3045  001B96  EFDD  F00D         	goto	l2510
  3046  001B9A                     l2506:
  3047                           
  3048                           ;lcd.c: 60:   lcdChar(msg[i]);
  3049  001B9A  5013               	movf	lcdString@i^0,w,c
  3050  001B9C  240F               	addwf	lcdString@msg^0,w,c
  3051  001B9E  6E11               	movwf	??_lcdString^0,c
  3052  001BA0  5014               	movf	(lcdString@i+1)^0,w,c
  3053  001BA2  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3054  001BA4  6E12               	movwf	(??_lcdString+1)^0,c
  3055  001BA6  C011  FFF6         	movff	??_lcdString,tblptrl
  3056  001BAA  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3057  001BAE                     	if	0	;tblptru may be non-zero
  3058  001BAE                     	endif
  3059  001BAE                     	if	0	;tblptru may be non-zero
  3060  001BAE                     	endif
  3061  001BAE  0008               	tblrd		*
  3062  001BB0  50F5               	movf	tablat,w,c
  3063  001BB2  EC58  F00F         	call	_lcdChar
  3064  001BB6                     
  3065                           ;lcd.c: 61:   i++;
  3066  001BB6  4A13               	infsnz	lcdString@i^0,f,c
  3067  001BB8  2A14               	incf	(lcdString@i+1)^0,f,c
  3068  001BBA                     l2510:
  3069                           
  3070                           ;lcd.c: 59:  while (msg[i] != 0) {
  3071  001BBA  5013               	movf	lcdString@i^0,w,c
  3072  001BBC  240F               	addwf	lcdString@msg^0,w,c
  3073  001BBE  6E11               	movwf	??_lcdString^0,c
  3074  001BC0  5014               	movf	(lcdString@i+1)^0,w,c
  3075  001BC2  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3076  001BC4  6E12               	movwf	(??_lcdString+1)^0,c
  3077  001BC6  C011  FFF6         	movff	??_lcdString,tblptrl
  3078  001BCA  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3079  001BCE                     	if	0	;tblptru may be non-zero
  3080  001BCE                     	endif
  3081  001BCE                     	if	0	;tblptru may be non-zero
  3082  001BCE                     	endif
  3083  001BCE  0008               	tblrd		*
  3084  001BD0  50F5               	movf	tablat,w,c
  3085  001BD2  0900               	iorlw	0
  3086  001BD4  A4D8               	btfss	status,2,c
  3087  001BD6  EFEF  F00D         	goto	u2171
  3088  001BDA  EFF1  F00D         	goto	u2170
  3089  001BDE                     u2171:
  3090  001BDE  EFCD  F00D         	goto	l2506
  3091  001BE2                     u2170:
  3092  001BE2  0012               	return		;funcret
  3093  001BE4                     __end_of_lcdString:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _lcdNumber *****************
  3097 ;; Defined at:
  3098 ;;		line 64 in file "lcd.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  value           2   14[COMRAM] int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  i               2   16[COMRAM] int 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         2       0       0       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0
  3115 ;;      Totals:         4       0       0       0       0       0       0
  3116 ;;Total ram usage:        4 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 5
  3119 ;; This function calls:
  3120 ;;		___awdiv
  3121 ;;		___awmod
  3122 ;;		_lcdChar
  3123 ;; This function is called by:
  3124 ;;		_menu1
  3125 ;;		_menu2
  3126 ;;		_menu3
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131  001946                     __ptext21:
  3132                           	callstack 0
  3133  001946                     _lcdNumber:
  3134                           	callstack 24
  3135  001946                     
  3136                           ;lcd.c: 65:  int i = 1000;
  3137  001946  0E03               	movlw	3
  3138  001948  6E12               	movwf	(lcdNumber@i+1)^0,c
  3139  00194A  0EE8               	movlw	232
  3140  00194C  6E11               	movwf	lcdNumber@i^0,c
  3141                           
  3142                           ;lcd.c: 66:  while (i > 0) {
  3143  00194E  EFCF  F00C         	goto	l2516
  3144  001952                     l2514:
  3145                           
  3146                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  3147  001952  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  3148  001956  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  3149  00195A  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  3150  00195E  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  3151  001962  ECA3  F009         	call	___awdiv	;wreg free
  3152  001966  C001  F009         	movff	?___awdiv,___awmod@dividend
  3153  00196A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3154  00196E  0E00               	movlw	0
  3155  001970  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3156  001972  0E0A               	movlw	10
  3157  001974  6E0B               	movwf	___awmod@divisor^0,c
  3158  001976  EC5F  F00A         	call	___awmod	;wreg free
  3159  00197A  5009               	movf	?___awmod^0,w,c
  3160  00197C  0F30               	addlw	48
  3161  00197E  EC58  F00F         	call	_lcdChar
  3162                           
  3163                           ;lcd.c: 68:   i /= 10;
  3164  001982  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  3165  001986  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  3166  00198A  0E00               	movlw	0
  3167  00198C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3168  00198E  0E0A               	movlw	10
  3169  001990  6E03               	movwf	___awdiv@divisor^0,c
  3170  001992  ECA3  F009         	call	___awdiv	;wreg free
  3171  001996  C001  F011         	movff	?___awdiv,lcdNumber@i
  3172  00199A  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  3173  00199E                     l2516:
  3174                           
  3175                           ;lcd.c: 66:  while (i > 0) {
  3176  00199E  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  3177  0019A0  EFDC  F00C         	goto	u2180
  3178  0019A4  5012               	movf	(lcdNumber@i+1)^0,w,c
  3179  0019A6  E106               	bnz	u2181
  3180  0019A8  0411               	decf	lcdNumber@i^0,w,c
  3181  0019AA  B0D8               	btfsc	status,0,c
  3182  0019AC  EFDA  F00C         	goto	u2181
  3183  0019B0  EFDC  F00C         	goto	u2180
  3184  0019B4                     u2181:
  3185  0019B4  EFA9  F00C         	goto	l2514
  3186  0019B8                     u2180:
  3187  0019B8  0012               	return		;funcret
  3188  0019BA                     __end_of_lcdNumber:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _lcdChar *****************
  3192 ;; Defined at:
  3193 ;;		line 52 in file "lcd.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  value           1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  value           1   13[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3207 ;;      Params:         0       0       0       0       0       0       0
  3208 ;;      Locals:         1       0       0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0
  3210 ;;      Totals:         1       0       0       0       0       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 4
  3214 ;; This function calls:
  3215 ;;		_delayMicro
  3216 ;;		_pushByte
  3217 ;; This function is called by:
  3218 ;;		_lcdString
  3219 ;;		_lcdNumber
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text22
  3224  001EB0                     __ptext22:
  3225                           	callstack 0
  3226  001EB0                     _lcdChar:
  3227                           	callstack 24
  3228                           
  3229                           ;incstack = 0
  3230                           ;lcdChar@value stored from wreg
  3231  001EB0  6E0E               	movwf	lcdChar@value^0,c
  3232  001EB2                     
  3233                           ;lcd.c: 53:  pushByte(value, 1);
  3234  001EB2  0E00               	movlw	0
  3235  001EB4  6E0B               	movwf	(pushByte@rs+1)^0,c
  3236  001EB6  0E01               	movlw	1
  3237  001EB8  6E0A               	movwf	pushByte@rs^0,c
  3238  001EBA  500E               	movf	lcdChar@value^0,w,c
  3239  001EBC  EC43  F00D         	call	_pushByte
  3240  001EC0                     
  3241                           ;lcd.c: 54:  delayMicro(80);
  3242  001EC0  0E00               	movlw	0
  3243  001EC2  6E02               	movwf	(delayMicro@a+1)^0,c
  3244  001EC4  0E50               	movlw	80
  3245  001EC6  6E01               	movwf	delayMicro@a^0,c
  3246  001EC8  ECB0  F00F         	call	_delayMicro	;wreg free
  3247  001ECC  0012               	return		;funcret
  3248  001ECE                     __end_of_lcdChar:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function ___awmod *****************
  3252 ;; Defined at:
  3253 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  dividend        2    8[COMRAM] int 
  3256 ;;  divisor         2   10[COMRAM] int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  sign            1   13[COMRAM] unsigned char 
  3259 ;;  counter         1   12[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  2    8[COMRAM] int 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3269 ;;      Params:         4       0       0       0       0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0
  3272 ;;      Totals:         6       0       0       0       0       0       0
  3273 ;;Total ram usage:        6 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_lcdNumber
  3279 ;;		_vap
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text23
  3284  0014BE                     __ptext23:
  3285                           	callstack 0
  3286  0014BE                     ___awmod:
  3287                           	callstack 29
  3288  0014BE  0E00               	movlw	0
  3289  0014C0  6E0E               	movwf	___awmod@sign^0,c
  3290  0014C2  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  3291  0014C4  EF68  F00A         	goto	u1980
  3292  0014C8  EF66  F00A         	goto	u1981
  3293  0014CC                     u1981:
  3294  0014CC  EF6E  F00A         	goto	l2408
  3295  0014D0                     u1980:
  3296  0014D0  6C09               	negf	___awmod@dividend^0,c
  3297  0014D2  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3298  0014D4  B0D8               	btfsc	status,0,c
  3299  0014D6  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3300  0014D8  0E01               	movlw	1
  3301  0014DA  6E0E               	movwf	___awmod@sign^0,c
  3302  0014DC                     l2408:
  3303  0014DC  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  3304  0014DE  EF75  F00A         	goto	u1990
  3305  0014E2  EF73  F00A         	goto	u1991
  3306  0014E6                     u1991:
  3307  0014E6  EF79  F00A         	goto	l2412
  3308  0014EA                     u1990:
  3309  0014EA  6C0B               	negf	___awmod@divisor^0,c
  3310  0014EC  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  3311  0014EE  B0D8               	btfsc	status,0,c
  3312  0014F0  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  3313  0014F2                     l2412:
  3314  0014F2  500B               	movf	___awmod@divisor^0,w,c
  3315  0014F4  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  3316  0014F6  B4D8               	btfsc	status,2,c
  3317  0014F8  EF80  F00A         	goto	u2001
  3318  0014FC  EF82  F00A         	goto	u2000
  3319  001500                     u2001:
  3320  001500  EFA6  F00A         	goto	l2428
  3321  001504                     u2000:
  3322  001504  0E01               	movlw	1
  3323  001506  6E0D               	movwf	___awmod@counter^0,c
  3324  001508  EF8A  F00A         	goto	l2418
  3325  00150C                     l2416:
  3326  00150C  90D8               	bcf	status,0,c
  3327  00150E  360B               	rlcf	___awmod@divisor^0,f,c
  3328  001510  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  3329  001512  2A0D               	incf	___awmod@counter^0,f,c
  3330  001514                     l2418:
  3331  001514  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  3332  001516  EF8F  F00A         	goto	u2011
  3333  00151A  EF91  F00A         	goto	u2010
  3334  00151E                     u2011:
  3335  00151E  EF86  F00A         	goto	l2416
  3336  001522                     u2010:
  3337  001522                     l2420:
  3338  001522  500B               	movf	___awmod@divisor^0,w,c
  3339  001524  5C09               	subwf	___awmod@dividend^0,w,c
  3340  001526  500C               	movf	(___awmod@divisor+1)^0,w,c
  3341  001528  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  3342  00152A  A0D8               	btfss	status,0,c
  3343  00152C  EF9A  F00A         	goto	u2021
  3344  001530  EF9C  F00A         	goto	u2020
  3345  001534                     u2021:
  3346  001534  EFA0  F00A         	goto	l2424
  3347  001538                     u2020:
  3348  001538  500B               	movf	___awmod@divisor^0,w,c
  3349  00153A  5E09               	subwf	___awmod@dividend^0,f,c
  3350  00153C  500C               	movf	(___awmod@divisor+1)^0,w,c
  3351  00153E  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  3352  001540                     l2424:
  3353  001540  90D8               	bcf	status,0,c
  3354  001542  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  3355  001544  320B               	rrcf	___awmod@divisor^0,f,c
  3356  001546  2E0D               	decfsz	___awmod@counter^0,f,c
  3357  001548  EF91  F00A         	goto	l2420
  3358  00154C                     l2428:
  3359  00154C  500E               	movf	___awmod@sign^0,w,c
  3360  00154E  B4D8               	btfsc	status,2,c
  3361  001550  EFAC  F00A         	goto	u2031
  3362  001554  EFAE  F00A         	goto	u2030
  3363  001558                     u2031:
  3364  001558  EFB2  F00A         	goto	l2432
  3365  00155C                     u2030:
  3366  00155C  6C09               	negf	___awmod@dividend^0,c
  3367  00155E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3368  001560  B0D8               	btfsc	status,0,c
  3369  001562  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3370  001564                     l2432:
  3371  001564  C009  F009         	movff	___awmod@dividend,?___awmod
  3372  001568  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3373  00156C  0012               	return		;funcret
  3374  00156E                     __end_of___awmod:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function ___awdiv *****************
  3378 ;; Defined at:
  3379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  dividend        2    0[COMRAM] int 
  3382 ;;  divisor         2    2[COMRAM] int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  quotient        2    6[COMRAM] int 
  3385 ;;  sign            1    5[COMRAM] unsigned char 
  3386 ;;  counter         1    4[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2    0[COMRAM] int 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3396 ;;      Params:         4       0       0       0       0       0       0
  3397 ;;      Locals:         4       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0
  3399 ;;      Totals:         8       0       0       0       0       0       0
  3400 ;;Total ram usage:        8 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_lcdNumber
  3406 ;;		_vap
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text24
  3411  001346                     __ptext24:
  3412                           	callstack 0
  3413  001346                     ___awdiv:
  3414                           	callstack 29
  3415  001346  0E00               	movlw	0
  3416  001348  6E06               	movwf	___awdiv@sign^0,c
  3417  00134A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3418  00134C  EFAC  F009         	goto	u1920
  3419  001350  EFAA  F009         	goto	u1921
  3420  001354                     u1921:
  3421  001354  EFB2  F009         	goto	l2364
  3422  001358                     u1920:
  3423  001358  6C03               	negf	___awdiv@divisor^0,c
  3424  00135A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3425  00135C  B0D8               	btfsc	status,0,c
  3426  00135E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3427  001360  0E01               	movlw	1
  3428  001362  6E06               	movwf	___awdiv@sign^0,c
  3429  001364                     l2364:
  3430  001364  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3431  001366  EFB9  F009         	goto	u1930
  3432  00136A  EFB7  F009         	goto	u1931
  3433  00136E                     u1931:
  3434  00136E  EFBF  F009         	goto	l2370
  3435  001372                     u1930:
  3436  001372  6C01               	negf	___awdiv@dividend^0,c
  3437  001374  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3438  001376  B0D8               	btfsc	status,0,c
  3439  001378  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3440  00137A  0E01               	movlw	1
  3441  00137C  1A06               	xorwf	___awdiv@sign^0,f,c
  3442  00137E                     l2370:
  3443  00137E  0E00               	movlw	0
  3444  001380  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3445  001382  0E00               	movlw	0
  3446  001384  6E07               	movwf	___awdiv@quotient^0,c
  3447  001386  5003               	movf	___awdiv@divisor^0,w,c
  3448  001388  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3449  00138A  B4D8               	btfsc	status,2,c
  3450  00138C  EFCA  F009         	goto	u1941
  3451  001390  EFCC  F009         	goto	u1940
  3452  001394                     u1941:
  3453  001394  EFF4  F009         	goto	l2392
  3454  001398                     u1940:
  3455  001398  0E01               	movlw	1
  3456  00139A  6E05               	movwf	___awdiv@counter^0,c
  3457  00139C  EFD4  F009         	goto	l2378
  3458  0013A0                     l2376:
  3459  0013A0  90D8               	bcf	status,0,c
  3460  0013A2  3603               	rlcf	___awdiv@divisor^0,f,c
  3461  0013A4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3462  0013A6  2A05               	incf	___awdiv@counter^0,f,c
  3463  0013A8                     l2378:
  3464  0013A8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3465  0013AA  EFD9  F009         	goto	u1951
  3466  0013AE  EFDB  F009         	goto	u1950
  3467  0013B2                     u1951:
  3468  0013B2  EFD0  F009         	goto	l2376
  3469  0013B6                     u1950:
  3470  0013B6                     l2380:
  3471  0013B6  90D8               	bcf	status,0,c
  3472  0013B8  3607               	rlcf	___awdiv@quotient^0,f,c
  3473  0013BA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3474  0013BC  5003               	movf	___awdiv@divisor^0,w,c
  3475  0013BE  5C01               	subwf	___awdiv@dividend^0,w,c
  3476  0013C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3477  0013C2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3478  0013C4  A0D8               	btfss	status,0,c
  3479  0013C6  EFE7  F009         	goto	u1961
  3480  0013CA  EFE9  F009         	goto	u1960
  3481  0013CE                     u1961:
  3482  0013CE  EFEE  F009         	goto	l2388
  3483  0013D2                     u1960:
  3484  0013D2  5003               	movf	___awdiv@divisor^0,w,c
  3485  0013D4  5E01               	subwf	___awdiv@dividend^0,f,c
  3486  0013D6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3487  0013D8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3488  0013DA  8007               	bsf	___awdiv@quotient^0,0,c
  3489  0013DC                     l2388:
  3490  0013DC  90D8               	bcf	status,0,c
  3491  0013DE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3492  0013E0  3203               	rrcf	___awdiv@divisor^0,f,c
  3493  0013E2  2E05               	decfsz	___awdiv@counter^0,f,c
  3494  0013E4  EFDB  F009         	goto	l2380
  3495  0013E8                     l2392:
  3496  0013E8  5006               	movf	___awdiv@sign^0,w,c
  3497  0013EA  B4D8               	btfsc	status,2,c
  3498  0013EC  EFFA  F009         	goto	u1971
  3499  0013F0  EFFC  F009         	goto	u1970
  3500  0013F4                     u1971:
  3501  0013F4  EF00  F00A         	goto	l2396
  3502  0013F8                     u1970:
  3503  0013F8  6C07               	negf	___awdiv@quotient^0,c
  3504  0013FA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3505  0013FC  B0D8               	btfsc	status,0,c
  3506  0013FE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3507  001400                     l2396:
  3508  001400  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3509  001404  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3510  001408  0012               	return		;funcret
  3511  00140A                     __end_of___awdiv:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function _leituraMenu *****************
  3515 ;; Defined at:
  3516 ;;		line 23 in file "menu.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3530 ;;      Params:         0       0       0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 1
  3537 ;; This function calls:
  3538 ;;		_kpRead
  3539 ;;		_kpReadKey
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text25
  3546  00124E                     __ptext25:
  3547                           	callstack 0
  3548  00124E                     _leituraMenu:
  3549                           	callstack 29
  3550  00124E                     
  3551                           ;menu.c: 24:     if (kpRead() != aux) {
  3552  00124E  ECA3  F00F         	call	_kpRead	;wreg free
  3553  001252  501D               	movf	_aux^0,w,c
  3554  001254  1801               	xorwf	?_kpRead^0,w,c
  3555  001256  E109               	bnz	u2310
  3556  001258  501E               	movf	(_aux+1)^0,w,c
  3557  00125A  1802               	xorwf	(?_kpRead+1)^0,w,c
  3558  00125C  B4D8               	btfsc	status,2,c
  3559  00125E  EF33  F009         	goto	u2311
  3560  001262  EF35  F009         	goto	u2310
  3561  001266                     u2311:
  3562  001266  EFA2  F009         	goto	l301
  3563  00126A                     u2310:
  3564  00126A                     
  3565                           ;menu.c: 25:         aux = kpRead();
  3566  00126A  ECA3  F00F         	call	_kpRead	;wreg free
  3567  00126E  C001  F01D         	movff	?_kpRead,_aux
  3568  001272  C002  F01E         	movff	?_kpRead+1,_aux+1
  3569  001276                     
  3570                           ;menu.c: 26:         if (kpReadKey() != 0) {
  3571  001276  EC2D  F00C         	call	_kpReadKey	;wreg free
  3572  00127A  0900               	iorlw	0
  3573  00127C  B4D8               	btfsc	status,2,c
  3574  00127E  EF43  F009         	goto	u2321
  3575  001282  EF45  F009         	goto	u2320
  3576  001286                     u2321:
  3577  001286  EFA2  F009         	goto	l301
  3578  00128A                     u2320:
  3579  00128A                     
  3580                           ;menu.c: 27:             count = kpReadKey();
  3581  00128A  EC2D  F00C         	call	_kpReadKey	;wreg free
  3582  00128E  6E2C               	movwf	_count^0,c
  3583  001290                     
  3584                           ;menu.c: 29:             if ((count == 'R')&&(subMenu == 1)) {
  3585  001290  0E52               	movlw	82
  3586  001292  182C               	xorwf	_count^0,w,c
  3587  001294  A4D8               	btfss	status,2,c
  3588  001296  EF4F  F009         	goto	u2331
  3589  00129A  EF51  F009         	goto	u2330
  3590  00129E                     u2331:
  3591  00129E  EF62  F009         	goto	l2610
  3592  0012A2                     u2330:
  3593  0012A2  0433               	decf	_subMenu^0,w,c
  3594  0012A4  A4D8               	btfss	status,2,c
  3595  0012A6  EF57  F009         	goto	u2341
  3596  0012AA  EF59  F009         	goto	u2340
  3597  0012AE                     u2341:
  3598  0012AE  EF62  F009         	goto	l2610
  3599  0012B2                     u2340:
  3600  0012B2                     
  3601                           ;menu.c: 30:                 if (menuNum <= 3) {
  3602  0012B2  0E04               	movlw	4
  3603  0012B4  6034               	cpfslt	_menuNum^0,c
  3604  0012B6  EF5F  F009         	goto	u2351
  3605  0012BA  EF61  F009         	goto	u2350
  3606  0012BE                     u2351:
  3607  0012BE  EF62  F009         	goto	l2610
  3608  0012C2                     u2350:
  3609  0012C2                     
  3610                           ;menu.c: 31:                     menuNum += 1;
  3611  0012C2  2A34               	incf	_menuNum^0,f,c
  3612  0012C4                     l2610:
  3613                           
  3614                           ;menu.c: 34:             if ((count == 'L')&&(subMenu == 1)) {
  3615  0012C4  0E4C               	movlw	76
  3616  0012C6  182C               	xorwf	_count^0,w,c
  3617  0012C8  A4D8               	btfss	status,2,c
  3618  0012CA  EF69  F009         	goto	u2361
  3619  0012CE  EF6B  F009         	goto	u2360
  3620  0012D2                     u2361:
  3621  0012D2  EF7C  F009         	goto	l2618
  3622  0012D6                     u2360:
  3623  0012D6  0433               	decf	_subMenu^0,w,c
  3624  0012D8  A4D8               	btfss	status,2,c
  3625  0012DA  EF71  F009         	goto	u2371
  3626  0012DE  EF73  F009         	goto	u2370
  3627  0012E2                     u2371:
  3628  0012E2  EF7C  F009         	goto	l2618
  3629  0012E6                     u2370:
  3630  0012E6                     
  3631                           ;menu.c: 35:                 if (menuNum > 0) {
  3632  0012E6  5034               	movf	_menuNum^0,w,c
  3633  0012E8  B4D8               	btfsc	status,2,c
  3634  0012EA  EF79  F009         	goto	u2381
  3635  0012EE  EF7B  F009         	goto	u2380
  3636  0012F2                     u2381:
  3637  0012F2  EF7C  F009         	goto	l2618
  3638  0012F6                     u2380:
  3639  0012F6                     
  3640                           ;menu.c: 36:                     menuNum -= 1;
  3641  0012F6  0634               	decf	_menuNum^0,f,c
  3642  0012F8                     l2618:
  3643                           
  3644                           ;menu.c: 39:             if (count == 's') {
  3645  0012F8  0E73               	movlw	115
  3646  0012FA  182C               	xorwf	_count^0,w,c
  3647  0012FC  A4D8               	btfss	status,2,c
  3648  0012FE  EF83  F009         	goto	u2391
  3649  001302  EF85  F009         	goto	u2390
  3650  001306                     u2391:
  3651  001306  EF8E  F009         	goto	l2624
  3652  00130A                     u2390:
  3653  00130A                     
  3654                           ;menu.c: 40:                 if (subMenu <= 2) {
  3655  00130A  0E03               	movlw	3
  3656  00130C  6033               	cpfslt	_subMenu^0,c
  3657  00130E  EF8B  F009         	goto	u2401
  3658  001312  EF8D  F009         	goto	u2400
  3659  001316                     u2401:
  3660  001316  EF8E  F009         	goto	l2624
  3661  00131A                     u2400:
  3662  00131A                     
  3663                           ;menu.c: 41:                     subMenu += 1;
  3664  00131A  2A33               	incf	_subMenu^0,f,c
  3665  00131C                     l2624:
  3666                           
  3667                           ;menu.c: 44:             if (count == 'S') {
  3668  00131C  0E53               	movlw	83
  3669  00131E  182C               	xorwf	_count^0,w,c
  3670  001320  A4D8               	btfss	status,2,c
  3671  001322  EF95  F009         	goto	u2411
  3672  001326  EF97  F009         	goto	u2410
  3673  00132A                     u2411:
  3674  00132A  EFA2  F009         	goto	l301
  3675  00132E                     u2410:
  3676  00132E                     
  3677                           ;menu.c: 45:                 if (subMenu > 0) {
  3678  00132E  5033               	movf	_subMenu^0,w,c
  3679  001330  B4D8               	btfsc	status,2,c
  3680  001332  EF9D  F009         	goto	u2421
  3681  001336  EF9F  F009         	goto	u2420
  3682  00133A                     u2421:
  3683  00133A  EFA2  F009         	goto	l292
  3684  00133E                     u2420:
  3685  00133E                     
  3686                           ;menu.c: 46:                     subMenu -= 1;
  3687  00133E  0633               	decf	_subMenu^0,f,c
  3688  001340  EFA2  F009         	goto	l301
  3689  001344                     l292:
  3690  001344                     l301:
  3691  001344  0012               	return		;funcret
  3692  001346                     __end_of_leituraMenu:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _kpReadKey *****************
  3696 ;; Defined at:
  3697 ;;		line 17 in file "keypad.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  i               2    3[COMRAM] int 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3711 ;;      Params:         0       0       0       0       0       0       0
  3712 ;;      Locals:         2       0       0       0       0       0       0
  3713 ;;      Temps:          3       0       0       0       0       0       0
  3714 ;;      Totals:         5       0       0       0       0       0       0
  3715 ;;Total ram usage:        5 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_leituraMenu
  3721 ;;		_menuCtrl
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text26
  3726  00185A                     __ptext26:
  3727                           	callstack 0
  3728  00185A                     _kpReadKey:
  3729                           	callstack 29
  3730  00185A                     
  3731                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3732  00185A  0E00               	movlw	0
  3733  00185C  6E05               	movwf	(kpReadKey@i+1)^0,c
  3734  00185E  0E00               	movlw	0
  3735  001860  6E04               	movwf	kpReadKey@i^0,c
  3736  001862                     l1546:
  3737                           
  3738                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3739  001862  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  3740  001866  0E01               	movlw	1
  3741  001868  6E02               	movwf	(??_kpReadKey+1)^0,c
  3742  00186A  0E00               	movlw	0
  3743  00186C  6E03               	movwf	(??_kpReadKey+2)^0,c
  3744  00186E  2A01               	incf	??_kpReadKey^0,f,c
  3745  001870  EF3D  F00C         	goto	u744
  3746  001874                     u745:
  3747  001874  90D8               	bcf	status,0,c
  3748  001876  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  3749  001878  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  3750  00187A                     u744:
  3751  00187A  2E01               	decfsz	??_kpReadKey^0,f,c
  3752  00187C  EF3A  F00C         	goto	u745
  3753  001880  5023               	movf	_keys^0,w,c
  3754  001882  1602               	andwf	(??_kpReadKey+1)^0,f,c
  3755  001884  5024               	movf	(_keys+1)^0,w,c
  3756  001886  1603               	andwf	(??_kpReadKey+2)^0,f,c
  3757  001888  5002               	movf	(??_kpReadKey+1)^0,w,c
  3758  00188A  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  3759  00188C  B4D8               	btfsc	status,2,c
  3760  00188E  EF4B  F00C         	goto	u751
  3761  001892  EF4D  F00C         	goto	u750
  3762  001896                     u751:
  3763  001896  EF57  F00C         	goto	l1552
  3764  00189A                     u750:
  3765  00189A                     
  3766                           ;keypad.c: 21:    return charKey[i];
  3767  00189A  0E11               	movlw	low _charKey
  3768  00189C  2404               	addwf	kpReadKey@i^0,w,c
  3769  00189E  6EF6               	movwf	tblptrl,c
  3770  0018A0  0E06               	movlw	high _charKey
  3771  0018A2  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  3772  0018A4  6EF7               	movwf	tblptrh,c
  3773  0018A6                     	if	0	;There are less than 3 active tblptr bytes
  3774  0018A6                     	endif
  3775  0018A6  0008               	tblrd		*
  3776  0018A8  50F5               	movf	tablat,w,c
  3777  0018AA  EF68  F00C         	goto	l111
  3778  0018AE                     l1552:
  3779                           
  3780                           ;keypad.c: 23:  }
  3781  0018AE  4A04               	infsnz	kpReadKey@i^0,f,c
  3782  0018B0  2A05               	incf	(kpReadKey@i+1)^0,f,c
  3783  0018B2  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  3784  0018B4  EF65  F00C         	goto	u761
  3785  0018B8  5005               	movf	(kpReadKey@i+1)^0,w,c
  3786  0018BA  E109               	bnz	u760
  3787  0018BC  0E0A               	movlw	10
  3788  0018BE  5C04               	subwf	kpReadKey@i^0,w,c
  3789  0018C0  A0D8               	btfss	status,0,c
  3790  0018C2  EF65  F00C         	goto	u761
  3791  0018C6  EF67  F00C         	goto	u760
  3792  0018CA                     u761:
  3793  0018CA  EF31  F00C         	goto	l1546
  3794  0018CE                     u760:
  3795  0018CE                     
  3796                           ;keypad.c: 25:  return 0;
  3797  0018CE  0E00               	movlw	0
  3798  0018D0                     l111:
  3799  0018D0  0012               	return		;funcret
  3800  0018D2                     __end_of_kpReadKey:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _kpRead *****************
  3804 ;; Defined at:
  3805 ;;		line 14 in file "keypad.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2    0[COMRAM] unsigned int 
  3812 ;; Registers used:
  3813 ;;		None
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3819 ;;      Params:         2       0       0       0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0
  3822 ;;      Totals:         2       0       0       0       0       0       0
  3823 ;;Total ram usage:        2 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_leituraMenu
  3829 ;;		_menuCtrl
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text27
  3834  001F46                     __ptext27:
  3835                           	callstack 0
  3836  001F46                     _kpRead:
  3837                           	callstack 29
  3838  001F46                     
  3839                           ;keypad.c: 15:     return keys;
  3840  001F46  C023  F001         	movff	_keys,?_kpRead
  3841  001F4A  C024  F002         	movff	_keys+1,?_kpRead+1
  3842  001F4E  0012               	return		;funcret
  3843  001F50                     __end_of_kpRead:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _lcdInit *****************
  3847 ;; Defined at:
  3848 ;;		line 72 in file "lcd.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 5
  3869 ;; This function calls:
  3870 ;;		_delayMicro
  3871 ;;		_delayMili
  3872 ;;		_lcdCommand
  3873 ;;		_pinMode
  3874 ;;		_pushNibble
  3875 ;;		_soInit
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text28
  3882  00140A                     __ptext28:
  3883                           	callstack 0
  3884  00140A                     _lcdInit:
  3885                           	callstack 25
  3886  00140A                     
  3887                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3888  00140A  0E00               	movlw	0
  3889  00140C  6E02               	movwf	(pinMode@pin+1)^0,c
  3890  00140E  0E1C               	movlw	28
  3891  001410  6E01               	movwf	pinMode@pin^0,c
  3892  001412  0E00               	movlw	0
  3893  001414  6E04               	movwf	(pinMode@type+1)^0,c
  3894  001416  0E00               	movlw	0
  3895  001418  6E03               	movwf	pinMode@type^0,c
  3896  00141A  EC5E  F003         	call	_pinMode	;wreg free
  3897                           
  3898                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3899  00141E  0E00               	movlw	0
  3900  001420  6E02               	movwf	(pinMode@pin+1)^0,c
  3901  001422  0E1D               	movlw	29
  3902  001424  6E01               	movwf	pinMode@pin^0,c
  3903  001426  0E00               	movlw	0
  3904  001428  6E04               	movwf	(pinMode@type+1)^0,c
  3905  00142A  0E00               	movlw	0
  3906  00142C  6E03               	movwf	pinMode@type^0,c
  3907  00142E  EC5E  F003         	call	_pinMode	;wreg free
  3908                           
  3909                           ;lcd.c: 75:  soInit();
  3910  001432  EC63  F00E         	call	_soInit	;wreg free
  3911                           
  3912                           ;lcd.c: 76:  delayMili(15);
  3913  001436  0E00               	movlw	0
  3914  001438  6E02               	movwf	(delayMili@a+1)^0,c
  3915  00143A  0E0F               	movlw	15
  3916  00143C  6E01               	movwf	delayMili@a^0,c
  3917  00143E  ECB6  F00E         	call	_delayMili	;wreg free
  3918                           
  3919                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3920  001442  0E00               	movlw	0
  3921  001444  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3922  001446  0E00               	movlw	0
  3923  001448  6E0A               	movwf	pushNibble@rs^0,c
  3924  00144A  0E03               	movlw	3
  3925  00144C  EC34  F00F         	call	_pushNibble
  3926                           
  3927                           ;lcd.c: 79:  delayMili(5);
  3928  001450  0E00               	movlw	0
  3929  001452  6E02               	movwf	(delayMili@a+1)^0,c
  3930  001454  0E05               	movlw	5
  3931  001456  6E01               	movwf	delayMili@a^0,c
  3932  001458  ECB6  F00E         	call	_delayMili	;wreg free
  3933                           
  3934                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3935  00145C  0E00               	movlw	0
  3936  00145E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3937  001460  0E00               	movlw	0
  3938  001462  6E0A               	movwf	pushNibble@rs^0,c
  3939  001464  0E03               	movlw	3
  3940  001466  EC34  F00F         	call	_pushNibble
  3941  00146A                     
  3942                           ;lcd.c: 81:  delayMicro(160);
  3943  00146A  0E00               	movlw	0
  3944  00146C  6E02               	movwf	(delayMicro@a+1)^0,c
  3945  00146E  0EA0               	movlw	160
  3946  001470  6E01               	movwf	delayMicro@a^0,c
  3947  001472  ECB0  F00F         	call	_delayMicro	;wreg free
  3948  001476                     
  3949                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3950  001476  0E00               	movlw	0
  3951  001478  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3952  00147A  0E00               	movlw	0
  3953  00147C  6E0A               	movwf	pushNibble@rs^0,c
  3954  00147E  0E03               	movlw	3
  3955  001480  EC34  F00F         	call	_pushNibble
  3956                           
  3957                           ;lcd.c: 83:  delayMicro(160);
  3958  001484  0E00               	movlw	0
  3959  001486  6E02               	movwf	(delayMicro@a+1)^0,c
  3960  001488  0EA0               	movlw	160
  3961  00148A  6E01               	movwf	delayMicro@a^0,c
  3962  00148C  ECB0  F00F         	call	_delayMicro	;wreg free
  3963  001490                     
  3964                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3965  001490  0E00               	movlw	0
  3966  001492  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3967  001494  0E00               	movlw	0
  3968  001496  6E0A               	movwf	pushNibble@rs^0,c
  3969  001498  0E02               	movlw	2
  3970  00149A  EC34  F00F         	call	_pushNibble
  3971  00149E                     
  3972                           ;lcd.c: 86:  delayMili(10);
  3973  00149E  0E00               	movlw	0
  3974  0014A0  6E02               	movwf	(delayMili@a+1)^0,c
  3975  0014A2  0E0A               	movlw	10
  3976  0014A4  6E01               	movwf	delayMili@a^0,c
  3977  0014A6  ECB6  F00E         	call	_delayMili	;wreg free
  3978  0014AA                     
  3979                           ;lcd.c: 88:  lcdCommand(0x28);
  3980  0014AA  0E28               	movlw	40
  3981  0014AC  EC67  F00F         	call	_lcdCommand
  3982  0014B0                     
  3983                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3984  0014B0  0E0C               	movlw	12
  3985  0014B2  EC67  F00F         	call	_lcdCommand
  3986  0014B6                     
  3987                           ;lcd.c: 90:  lcdCommand(0x01);
  3988  0014B6  0E01               	movlw	1
  3989  0014B8  EC67  F00F         	call	_lcdCommand
  3990  0014BC  0012               	return		;funcret
  3991  0014BE                     __end_of_lcdInit:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _pushNibble *****************
  3995 ;; Defined at:
  3996 ;;		line 25 in file "lcd.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  value           1    wreg     unsigned char 
  3999 ;;  rs              2    9[COMRAM] int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  value           1   11[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         2       0       0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0
  4014 ;;      Totals:         3       0       0       0       0       0       0
  4015 ;;Total ram usage:        3 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 3
  4018 ;; This function calls:
  4019 ;;		_digitalWrite
  4020 ;;		_pulseEnablePin
  4021 ;;		_soWrite
  4022 ;; This function is called by:
  4023 ;;		_lcdInit
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text29
  4028  001E68                     __ptext29:
  4029                           	callstack 0
  4030  001E68                     _pushNibble:
  4031                           	callstack 26
  4032                           
  4033                           ;incstack = 0
  4034                           ;pushNibble@value stored from wreg
  4035  001E68  6E0C               	movwf	pushNibble@value^0,c
  4036  001E6A                     
  4037                           ;lcd.c: 26:  soWrite(value);
  4038  001E6A  C00C  F007         	movff	pushNibble@value,soWrite@value
  4039  001E6E  6A08               	clrf	(soWrite@value+1)^0,c
  4040  001E70  EC1B  F00E         	call	_soWrite	;wreg free
  4041                           
  4042                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  4043  001E74  0E00               	movlw	0
  4044  001E76  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4045  001E78  0E1D               	movlw	29
  4046  001E7A  6E01               	movwf	digitalWrite@pin^0,c
  4047  001E7C  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  4048  001E80  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  4049  001E84  EC85  F004         	call	_digitalWrite	;wreg free
  4050                           
  4051                           ;lcd.c: 28:  pulseEnablePin();
  4052  001E88  EC42  F00E         	call	_pulseEnablePin	;wreg free
  4053  001E8C  0012               	return		;funcret
  4054  001E8E                     __end_of_pushNibble:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _lcdCommand *****************
  4058 ;; Defined at:
  4059 ;;		line 40 in file "lcd.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  value           1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  value           1   13[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4073 ;;      Params:         0       0       0       0       0       0       0
  4074 ;;      Locals:         1       0       0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0
  4076 ;;      Totals:         1       0       0       0       0       0       0
  4077 ;;Total ram usage:        1 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 4
  4080 ;; This function calls:
  4081 ;;		_delayMili
  4082 ;;		_pushByte
  4083 ;; This function is called by:
  4084 ;;		_lcdInit
  4085 ;;		_menu1
  4086 ;;		_menu2
  4087 ;;		_menu3
  4088 ;;		_main
  4089 ;;		_lcdPosition
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text30
  4094  001ECE                     __ptext30:
  4095                           	callstack 0
  4096  001ECE                     _lcdCommand:
  4097                           	callstack 25
  4098                           
  4099                           ;incstack = 0
  4100                           ;lcdCommand@value stored from wreg
  4101  001ECE  6E0E               	movwf	lcdCommand@value^0,c
  4102  001ED0                     
  4103                           ;lcd.c: 41:  pushByte(value, 0);
  4104  001ED0  0E00               	movlw	0
  4105  001ED2  6E0B               	movwf	(pushByte@rs+1)^0,c
  4106  001ED4  0E00               	movlw	0
  4107  001ED6  6E0A               	movwf	pushByte@rs^0,c
  4108  001ED8  500E               	movf	lcdCommand@value^0,w,c
  4109  001EDA  EC43  F00D         	call	_pushByte
  4110                           
  4111                           ;lcd.c: 42:  delayMili(2);
  4112  001EDE  0E00               	movlw	0
  4113  001EE0  6E02               	movwf	(delayMili@a+1)^0,c
  4114  001EE2  0E02               	movlw	2
  4115  001EE4  6E01               	movwf	delayMili@a^0,c
  4116  001EE6  ECB6  F00E         	call	_delayMili	;wreg free
  4117  001EEA  0012               	return		;funcret
  4118  001EEC                     __end_of_lcdCommand:
  4119                           	callstack 0
  4120                           
  4121 ;; *************** function _pushByte *****************
  4122 ;; Defined at:
  4123 ;;		line 31 in file "lcd.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  value           1    wreg     unsigned char 
  4126 ;;  rs              2    9[COMRAM] int 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  value           1   12[COMRAM] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         2       0       0       0       0       0       0
  4139 ;;      Locals:         1       0       0       0       0       0       0
  4140 ;;      Temps:          1       0       0       0       0       0       0
  4141 ;;      Totals:         4       0       0       0       0       0       0
  4142 ;;Total ram usage:        4 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; Hardware stack levels required when called: 3
  4145 ;; This function calls:
  4146 ;;		_digitalWrite
  4147 ;;		_pulseEnablePin
  4148 ;;		_soWrite
  4149 ;; This function is called by:
  4150 ;;		_lcdCommand
  4151 ;;		_lcdChar
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text31
  4156  001A86                     __ptext31:
  4157                           	callstack 0
  4158  001A86                     _pushByte:
  4159                           	callstack 24
  4160                           
  4161                           ;incstack = 0
  4162                           ;pushByte@value stored from wreg
  4163  001A86  6E0D               	movwf	pushByte@value^0,c
  4164  001A88                     
  4165                           ;lcd.c: 32:  soWrite(value >> 4);
  4166  001A88  C00D  F00C         	movff	pushByte@value,??_pushByte
  4167  001A8C  3A0C               	swapf	??_pushByte^0,f,c
  4168  001A8E  0E0F               	movlw	15
  4169  001A90  160C               	andwf	??_pushByte^0,f,c
  4170  001A92  500C               	movf	??_pushByte^0,w,c
  4171  001A94  6E07               	movwf	soWrite@value^0,c
  4172  001A96  6A08               	clrf	(soWrite@value+1)^0,c
  4173  001A98  EC1B  F00E         	call	_soWrite	;wreg free
  4174                           
  4175                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  4176  001A9C  0E00               	movlw	0
  4177  001A9E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4178  001AA0  0E1D               	movlw	29
  4179  001AA2  6E01               	movwf	digitalWrite@pin^0,c
  4180  001AA4  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4181  001AA8  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4182  001AAC  EC85  F004         	call	_digitalWrite	;wreg free
  4183                           
  4184                           ;lcd.c: 34:  pulseEnablePin();
  4185  001AB0  EC42  F00E         	call	_pulseEnablePin	;wreg free
  4186                           
  4187                           ;lcd.c: 36:  soWrite(value & 0x0F);
  4188  001AB4  C00D  F00C         	movff	pushByte@value,??_pushByte
  4189  001AB8  0E0F               	movlw	15
  4190  001ABA  160C               	andwf	??_pushByte^0,f,c
  4191  001ABC  500C               	movf	??_pushByte^0,w,c
  4192  001ABE  6E07               	movwf	soWrite@value^0,c
  4193  001AC0  6A08               	clrf	(soWrite@value+1)^0,c
  4194  001AC2  EC1B  F00E         	call	_soWrite	;wreg free
  4195                           
  4196                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  4197  001AC6  0E00               	movlw	0
  4198  001AC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4199  001ACA  0E1D               	movlw	29
  4200  001ACC  6E01               	movwf	digitalWrite@pin^0,c
  4201  001ACE  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4202  001AD2  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4203  001AD6  EC85  F004         	call	_digitalWrite	;wreg free
  4204                           
  4205                           ;lcd.c: 38:  pulseEnablePin();
  4206  001ADA  EC42  F00E         	call	_pulseEnablePin	;wreg free
  4207  001ADE  0012               	return		;funcret
  4208  001AE0                     __end_of_pushByte:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _pulseEnablePin *****************
  4212 ;; Defined at:
  4213 ;;		line 18 in file "lcd.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4227 ;;      Params:         0       0       0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0
  4230 ;;      Totals:         0       0       0       0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 1
  4234 ;; This function calls:
  4235 ;;		_delayMicro
  4236 ;;		_digitalWrite
  4237 ;; This function is called by:
  4238 ;;		_pushNibble
  4239 ;;		_pushByte
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text32
  4244  001C84                     __ptext32:
  4245                           	callstack 0
  4246  001C84                     _pulseEnablePin:
  4247                           	callstack 25
  4248  001C84                     
  4249                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4250  001C84  0E00               	movlw	0
  4251  001C86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4252  001C88  0E1C               	movlw	28
  4253  001C8A  6E01               	movwf	digitalWrite@pin^0,c
  4254  001C8C  0E00               	movlw	0
  4255  001C8E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4256  001C90  0E01               	movlw	1
  4257  001C92  6E03               	movwf	digitalWrite@value^0,c
  4258  001C94  EC85  F004         	call	_digitalWrite	;wreg free
  4259  001C98                     
  4260                           ;lcd.c: 20:  delayMicro(5);
  4261  001C98  0E00               	movlw	0
  4262  001C9A  6E02               	movwf	(delayMicro@a+1)^0,c
  4263  001C9C  0E05               	movlw	5
  4264  001C9E  6E01               	movwf	delayMicro@a^0,c
  4265  001CA0  ECB0  F00F         	call	_delayMicro	;wreg free
  4266  001CA4                     
  4267                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4268  001CA4  0E00               	movlw	0
  4269  001CA6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4270  001CA8  0E1C               	movlw	28
  4271  001CAA  6E01               	movwf	digitalWrite@pin^0,c
  4272  001CAC  0E00               	movlw	0
  4273  001CAE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4274  001CB0  0E00               	movlw	0
  4275  001CB2  6E03               	movwf	digitalWrite@value^0,c
  4276  001CB4  EC85  F004         	call	_digitalWrite	;wreg free
  4277                           
  4278                           ;lcd.c: 22:  delayMicro(5);
  4279  001CB8  0E00               	movlw	0
  4280  001CBA  6E02               	movwf	(delayMicro@a+1)^0,c
  4281  001CBC  0E05               	movlw	5
  4282  001CBE  6E01               	movwf	delayMicro@a^0,c
  4283  001CC0  ECB0  F00F         	call	_delayMicro	;wreg free
  4284  001CC4  0012               	return		;funcret
  4285  001CC6                     __end_of_pulseEnablePin:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _delayMicro *****************
  4289 ;; Defined at:
  4290 ;;		line 5 in file "lcd.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  a               2    0[COMRAM] int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  i               2    0        volatile int 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         2       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0
  4307 ;;      Totals:         2       0       0       0       0       0       0
  4308 ;;Total ram usage:        2 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_pulseEnablePin
  4314 ;;		_lcdChar
  4315 ;;		_lcdInit
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text33
  4320  001F60                     __ptext33:
  4321                           	callstack 0
  4322  001F60                     _delayMicro:
  4323                           	callstack 25
  4324  001F60  0012               	return		;funcret
  4325  001F62                     __end_of_delayMicro:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _delayMili *****************
  4329 ;; Defined at:
  4330 ;;		line 10 in file "lcd.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  a               2    0[COMRAM] int 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  i               2    3[COMRAM] volatile int 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4344 ;;      Params:         2       0       0       0       0       0       0
  4345 ;;      Locals:         2       0       0       0       0       0       0
  4346 ;;      Temps:          1       0       0       0       0       0       0
  4347 ;;      Totals:         5       0       0       0       0       0       0
  4348 ;;Total ram usage:        5 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_lcdCommand
  4354 ;;		_lcdInit
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text34
  4359  001D6C                     __ptext34:
  4360                           	callstack 0
  4361  001D6C                     _delayMili:
  4362                           	callstack 28
  4363  001D6C                     
  4364                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4365  001D6C  0E00               	movlw	0
  4366  001D6E  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4367  001D70  0E00               	movlw	0
  4368  001D72  6E04               	movwf	delayMili@i^0,c	;volatile
  4369  001D74  EFBE  F00E         	goto	l2300
  4370  001D78                     l2298:
  4371                           
  4372                           ;lcd.c: 15:  }
  4373  001D78  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4374  001D7A  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4375  001D7C                     l2300:
  4376  001D7C  5001               	movf	delayMili@a^0,w,c
  4377  001D7E  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4378  001D80  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4379  001D82  0A80               	xorlw	128
  4380  001D84  6E03               	movwf	??_delayMili^0,c
  4381  001D86  5002               	movf	(delayMili@a+1)^0,w,c
  4382  001D88  0A80               	xorlw	128
  4383  001D8A  5803               	subwfb	??_delayMili^0,w,c
  4384  001D8C  A0D8               	btfss	status,0,c
  4385  001D8E  EFCB  F00E         	goto	u1851
  4386  001D92  EFCD  F00E         	goto	u1850
  4387  001D96                     u1851:
  4388  001D96  EFBC  F00E         	goto	l2298
  4389  001D9A                     u1850:
  4390  001D9A  0012               	return		;funcret
  4391  001D9C                     __end_of_delayMili:
  4392                           	callstack 0
  4393                           
  4394 ;; *************** function _kpInit *****************
  4395 ;; Defined at:
  4396 ;;		line 54 in file "keypad.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4410 ;;      Params:         0       0       0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 2
  4417 ;; This function calls:
  4418 ;;		_pinMode
  4419 ;;		_soInit
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text35
  4426  001D3A                     __ptext35:
  4427                           	callstack 0
  4428  001D3A                     _kpInit:
  4429                           	callstack 28
  4430  001D3A                     
  4431                           ;keypad.c: 55:   soInit();
  4432  001D3A  EC63  F00E         	call	_soInit	;wreg free
  4433                           
  4434                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  4435  001D3E  0E00               	movlw	0
  4436  001D40  6E02               	movwf	(pinMode@pin+1)^0,c
  4437  001D42  0E0A               	movlw	10
  4438  001D44  6E01               	movwf	pinMode@pin^0,c
  4439  001D46  0E00               	movlw	0
  4440  001D48  6E04               	movwf	(pinMode@type+1)^0,c
  4441  001D4A  0E01               	movlw	1
  4442  001D4C  6E03               	movwf	pinMode@type^0,c
  4443  001D4E  EC5E  F003         	call	_pinMode	;wreg free
  4444                           
  4445                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  4446  001D52  0E00               	movlw	0
  4447  001D54  6E02               	movwf	(pinMode@pin+1)^0,c
  4448  001D56  0E09               	movlw	9
  4449  001D58  6E01               	movwf	pinMode@pin^0,c
  4450  001D5A  0E00               	movlw	0
  4451  001D5C  6E04               	movwf	(pinMode@type+1)^0,c
  4452  001D5E  0E01               	movlw	1
  4453  001D60  6E03               	movwf	pinMode@type^0,c
  4454  001D62  EC5E  F003         	call	_pinMode	;wreg free
  4455  001D66                     
  4456                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  4457  001D66  0E0C               	movlw	12
  4458  001D68  6EC1               	movwf	193,c	;volatile
  4459  001D6A  0012               	return		;funcret
  4460  001D6C                     __end_of_kpInit:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _soInit *****************
  4464 ;; Defined at:
  4465 ;;		line 3 in file "so.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4479 ;;      Params:         0       0       0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 1
  4486 ;; This function calls:
  4487 ;;		_pinMode
  4488 ;; This function is called by:
  4489 ;;		_kpInit
  4490 ;;		_lcdInit
  4491 ;;		_ssdInit
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text36
  4496  001CC6                     __ptext36:
  4497                           	callstack 0
  4498  001CC6                     _soInit:
  4499                           	callstack 28
  4500  001CC6                     
  4501                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4502  001CC6  0E00               	movlw	0
  4503  001CC8  6E02               	movwf	(pinMode@pin+1)^0,c
  4504  001CCA  0E1F               	movlw	31
  4505  001CCC  6E01               	movwf	pinMode@pin^0,c
  4506  001CCE  0E00               	movlw	0
  4507  001CD0  6E04               	movwf	(pinMode@type+1)^0,c
  4508  001CD2  0E00               	movlw	0
  4509  001CD4  6E03               	movwf	pinMode@type^0,c
  4510  001CD6  EC5E  F003         	call	_pinMode	;wreg free
  4511                           
  4512                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4513  001CDA  0E00               	movlw	0
  4514  001CDC  6E02               	movwf	(pinMode@pin+1)^0,c
  4515  001CDE  0E08               	movlw	8
  4516  001CE0  6E01               	movwf	pinMode@pin^0,c
  4517  001CE2  0E00               	movlw	0
  4518  001CE4  6E04               	movwf	(pinMode@type+1)^0,c
  4519  001CE6  0E00               	movlw	0
  4520  001CE8  6E03               	movwf	pinMode@type^0,c
  4521  001CEA  EC5E  F003         	call	_pinMode	;wreg free
  4522                           
  4523                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4524  001CEE  0E00               	movlw	0
  4525  001CF0  6E02               	movwf	(pinMode@pin+1)^0,c
  4526  001CF2  0E1E               	movlw	30
  4527  001CF4  6E01               	movwf	pinMode@pin^0,c
  4528  001CF6  0E00               	movlw	0
  4529  001CF8  6E04               	movwf	(pinMode@type+1)^0,c
  4530  001CFA  0E00               	movlw	0
  4531  001CFC  6E03               	movwf	pinMode@type^0,c
  4532  001CFE  EC5E  F003         	call	_pinMode	;wreg free
  4533  001D02  0012               	return		;funcret
  4534  001D04                     __end_of_soInit:
  4535                           	callstack 0
  4536                           
  4537 ;; *************** function _pinMode *****************
  4538 ;; Defined at:
  4539 ;;		line 54 in file "io.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  pin             2    0[COMRAM] int 
  4542 ;;  type            2    2[COMRAM] int 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4554 ;;      Params:         4       0       0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0
  4556 ;;      Temps:          2       0       0       0       0       0       0
  4557 ;;      Totals:         6       0       0       0       0       0       0
  4558 ;;Total ram usage:        6 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_kpInit
  4564 ;;		_lcdInit
  4565 ;;		_soInit
  4566 ;;		_ssdInit
  4567 ;;		_rgbInit
  4568 ;;		_adcInit
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text37
  4573  0006BC                     __ptext37:
  4574                           	callstack 0
  4575  0006BC                     _pinMode:
  4576                           	callstack 28
  4577  0006BC                     
  4578                           ;io.c: 56:     if(pin <8){
  4579  0006BC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4580  0006BE  EF6C  F003         	goto	u1650
  4581  0006C2  5002               	movf	(pinMode@pin+1)^0,w,c
  4582  0006C4  E107               	bnz	u1651
  4583  0006C6  0E08               	movlw	8
  4584  0006C8  5C01               	subwf	pinMode@pin^0,w,c
  4585  0006CA  B0D8               	btfsc	status,0,c
  4586  0006CC  EF6A  F003         	goto	u1651
  4587  0006D0  EF6C  F003         	goto	u1650
  4588  0006D4                     u1651:
  4589  0006D4  EF96  F003         	goto	l2264
  4590  0006D8                     u1650:
  4591  0006D8                     
  4592                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4593  0006D8  5003               	movf	pinMode@type^0,w,c
  4594  0006DA  1004               	iorwf	(pinMode@type+1)^0,w,c
  4595  0006DC  B4D8               	btfsc	status,2,c
  4596  0006DE  EF73  F003         	goto	u1661
  4597  0006E2  EF75  F003         	goto	u1660
  4598  0006E6                     u1661:
  4599  0006E6  EF85  F003         	goto	l2262
  4600  0006EA                     u1660:
  4601  0006EA  C001  F005         	movff	pinMode@pin,??_pinMode
  4602  0006EE  0E01               	movlw	1
  4603  0006F0  6E06               	movwf	(??_pinMode+1)^0,c
  4604  0006F2  2A05               	incf	??_pinMode^0,f,c
  4605  0006F4  EF7E  F003         	goto	u1674
  4606  0006F8                     u1675:
  4607  0006F8  90D8               	bcf	status,0,c
  4608  0006FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4609  0006FC                     u1674:
  4610  0006FC  2E05               	decfsz	??_pinMode^0,f,c
  4611  0006FE  EF7C  F003         	goto	u1675
  4612  000702  5006               	movf	(??_pinMode+1)^0,w,c
  4613  000704  1292               	iorwf	146,f,c	;volatile
  4614  000706  EF84  F004         	goto	l88
  4615  00070A                     l2262:
  4616  00070A  C001  F005         	movff	pinMode@pin,??_pinMode
  4617  00070E  0E01               	movlw	1
  4618  000710  6E06               	movwf	(??_pinMode+1)^0,c
  4619  000712  2A05               	incf	??_pinMode^0,f,c
  4620  000714  EF8E  F003         	goto	u1684
  4621  000718                     u1685:
  4622  000718  90D8               	bcf	status,0,c
  4623  00071A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4624  00071C                     u1684:
  4625  00071C  2E05               	decfsz	??_pinMode^0,f,c
  4626  00071E  EF8C  F003         	goto	u1685
  4627  000722  5006               	movf	(??_pinMode+1)^0,w,c
  4628  000724  0AFF               	xorlw	255
  4629  000726  1692               	andwf	146,f,c	;volatile
  4630  000728  EF84  F004         	goto	l88
  4631  00072C                     l2264:
  4632  00072C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4633  00072E  EFA4  F003         	goto	u1690
  4634  000732  5002               	movf	(pinMode@pin+1)^0,w,c
  4635  000734  E107               	bnz	u1691
  4636  000736  0E10               	movlw	16
  4637  000738  5C01               	subwf	pinMode@pin^0,w,c
  4638  00073A  B0D8               	btfsc	status,0,c
  4639  00073C  EFA2  F003         	goto	u1691
  4640  000740  EFA4  F003         	goto	u1690
  4641  000744                     u1691:
  4642  000744  EFD2  F003         	goto	l2272
  4643  000748                     u1690:
  4644  000748                     
  4645                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4646  000748  5003               	movf	pinMode@type^0,w,c
  4647  00074A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4648  00074C  B4D8               	btfsc	status,2,c
  4649  00074E  EFAB  F003         	goto	u1701
  4650  000752  EFAD  F003         	goto	u1700
  4651  000756                     u1701:
  4652  000756  EFBF  F003         	goto	l2270
  4653  00075A                     u1700:
  4654  00075A  C001  F005         	movff	pinMode@pin,??_pinMode
  4655  00075E  0EF8               	movlw	-8
  4656  000760  2605               	addwf	??_pinMode^0,f,c
  4657  000762  0E01               	movlw	1
  4658  000764  6E06               	movwf	(??_pinMode+1)^0,c
  4659  000766  2A05               	incf	??_pinMode^0,f,c
  4660  000768  EFB8  F003         	goto	u1714
  4661  00076C                     u1715:
  4662  00076C  90D8               	bcf	status,0,c
  4663  00076E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4664  000770                     u1714:
  4665  000770  2E05               	decfsz	??_pinMode^0,f,c
  4666  000772  EFB6  F003         	goto	u1715
  4667  000776  5006               	movf	(??_pinMode+1)^0,w,c
  4668  000778  1293               	iorwf	147,f,c	;volatile
  4669  00077A  EF84  F004         	goto	l88
  4670  00077E                     l2270:
  4671  00077E  C001  F005         	movff	pinMode@pin,??_pinMode
  4672  000782  0EF8               	movlw	-8
  4673  000784  2605               	addwf	??_pinMode^0,f,c
  4674  000786  0E01               	movlw	1
  4675  000788  6E06               	movwf	(??_pinMode+1)^0,c
  4676  00078A  2A05               	incf	??_pinMode^0,f,c
  4677  00078C  EFCA  F003         	goto	u1724
  4678  000790                     u1725:
  4679  000790  90D8               	bcf	status,0,c
  4680  000792  3606               	rlcf	(??_pinMode+1)^0,f,c
  4681  000794                     u1724:
  4682  000794  2E05               	decfsz	??_pinMode^0,f,c
  4683  000796  EFC8  F003         	goto	u1725
  4684  00079A  5006               	movf	(??_pinMode+1)^0,w,c
  4685  00079C  0AFF               	xorlw	255
  4686  00079E  1693               	andwf	147,f,c	;volatile
  4687  0007A0  EF84  F004         	goto	l88
  4688  0007A4                     l2272:
  4689  0007A4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4690  0007A6  EFE0  F003         	goto	u1730
  4691  0007AA  5002               	movf	(pinMode@pin+1)^0,w,c
  4692  0007AC  E107               	bnz	u1731
  4693  0007AE  0E18               	movlw	24
  4694  0007B0  5C01               	subwf	pinMode@pin^0,w,c
  4695  0007B2  B0D8               	btfsc	status,0,c
  4696  0007B4  EFDE  F003         	goto	u1731
  4697  0007B8  EFE0  F003         	goto	u1730
  4698  0007BC                     u1731:
  4699  0007BC  EF0E  F004         	goto	l2280
  4700  0007C0                     u1730:
  4701  0007C0                     
  4702                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4703  0007C0  5003               	movf	pinMode@type^0,w,c
  4704  0007C2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4705  0007C4  B4D8               	btfsc	status,2,c
  4706  0007C6  EFE7  F003         	goto	u1741
  4707  0007CA  EFE9  F003         	goto	u1740
  4708  0007CE                     u1741:
  4709  0007CE  EFFB  F003         	goto	l2278
  4710  0007D2                     u1740:
  4711  0007D2  C001  F005         	movff	pinMode@pin,??_pinMode
  4712  0007D6  0EF0               	movlw	-16
  4713  0007D8  2605               	addwf	??_pinMode^0,f,c
  4714  0007DA  0E01               	movlw	1
  4715  0007DC  6E06               	movwf	(??_pinMode+1)^0,c
  4716  0007DE  2A05               	incf	??_pinMode^0,f,c
  4717  0007E0  EFF4  F003         	goto	u1754
  4718  0007E4                     u1755:
  4719  0007E4  90D8               	bcf	status,0,c
  4720  0007E6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4721  0007E8                     u1754:
  4722  0007E8  2E05               	decfsz	??_pinMode^0,f,c
  4723  0007EA  EFF2  F003         	goto	u1755
  4724  0007EE  5006               	movf	(??_pinMode+1)^0,w,c
  4725  0007F0  1294               	iorwf	148,f,c	;volatile
  4726  0007F2  EF84  F004         	goto	l88
  4727  0007F6                     l2278:
  4728  0007F6  C001  F005         	movff	pinMode@pin,??_pinMode
  4729  0007FA  0EF0               	movlw	-16
  4730  0007FC  2605               	addwf	??_pinMode^0,f,c
  4731  0007FE  0E01               	movlw	1
  4732  000800  6E06               	movwf	(??_pinMode+1)^0,c
  4733  000802  2A05               	incf	??_pinMode^0,f,c
  4734  000804  EF06  F004         	goto	u1764
  4735  000808                     u1765:
  4736  000808  90D8               	bcf	status,0,c
  4737  00080A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4738  00080C                     u1764:
  4739  00080C  2E05               	decfsz	??_pinMode^0,f,c
  4740  00080E  EF04  F004         	goto	u1765
  4741  000812  5006               	movf	(??_pinMode+1)^0,w,c
  4742  000814  0AFF               	xorlw	255
  4743  000816  1694               	andwf	148,f,c	;volatile
  4744  000818  EF84  F004         	goto	l88
  4745  00081C                     l2280:
  4746  00081C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4747  00081E  EF1C  F004         	goto	u1770
  4748  000822  5002               	movf	(pinMode@pin+1)^0,w,c
  4749  000824  E107               	bnz	u1771
  4750  000826  0E20               	movlw	32
  4751  000828  5C01               	subwf	pinMode@pin^0,w,c
  4752  00082A  B0D8               	btfsc	status,0,c
  4753  00082C  EF1A  F004         	goto	u1771
  4754  000830  EF1C  F004         	goto	u1770
  4755  000834                     u1771:
  4756  000834  EF4A  F004         	goto	l2288
  4757  000838                     u1770:
  4758  000838                     
  4759                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4760  000838  5003               	movf	pinMode@type^0,w,c
  4761  00083A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4762  00083C  B4D8               	btfsc	status,2,c
  4763  00083E  EF23  F004         	goto	u1781
  4764  000842  EF25  F004         	goto	u1780
  4765  000846                     u1781:
  4766  000846  EF37  F004         	goto	l2286
  4767  00084A                     u1780:
  4768  00084A  C001  F005         	movff	pinMode@pin,??_pinMode
  4769  00084E  0EE8               	movlw	-24
  4770  000850  2605               	addwf	??_pinMode^0,f,c
  4771  000852  0E01               	movlw	1
  4772  000854  6E06               	movwf	(??_pinMode+1)^0,c
  4773  000856  2A05               	incf	??_pinMode^0,f,c
  4774  000858  EF30  F004         	goto	u1794
  4775  00085C                     u1795:
  4776  00085C  90D8               	bcf	status,0,c
  4777  00085E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4778  000860                     u1794:
  4779  000860  2E05               	decfsz	??_pinMode^0,f,c
  4780  000862  EF2E  F004         	goto	u1795
  4781  000866  5006               	movf	(??_pinMode+1)^0,w,c
  4782  000868  1295               	iorwf	149,f,c	;volatile
  4783  00086A  EF84  F004         	goto	l88
  4784  00086E                     l2286:
  4785  00086E  C001  F005         	movff	pinMode@pin,??_pinMode
  4786  000872  0EE8               	movlw	-24
  4787  000874  2605               	addwf	??_pinMode^0,f,c
  4788  000876  0E01               	movlw	1
  4789  000878  6E06               	movwf	(??_pinMode+1)^0,c
  4790  00087A  2A05               	incf	??_pinMode^0,f,c
  4791  00087C  EF42  F004         	goto	u1804
  4792  000880                     u1805:
  4793  000880  90D8               	bcf	status,0,c
  4794  000882  3606               	rlcf	(??_pinMode+1)^0,f,c
  4795  000884                     u1804:
  4796  000884  2E05               	decfsz	??_pinMode^0,f,c
  4797  000886  EF40  F004         	goto	u1805
  4798  00088A  5006               	movf	(??_pinMode+1)^0,w,c
  4799  00088C  0AFF               	xorlw	255
  4800  00088E  1695               	andwf	149,f,c	;volatile
  4801  000890  EF84  F004         	goto	l88
  4802  000894                     l2288:
  4803  000894  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4804  000896  EF58  F004         	goto	u1810
  4805  00089A  5002               	movf	(pinMode@pin+1)^0,w,c
  4806  00089C  E107               	bnz	u1811
  4807  00089E  0E28               	movlw	40
  4808  0008A0  5C01               	subwf	pinMode@pin^0,w,c
  4809  0008A2  B0D8               	btfsc	status,0,c
  4810  0008A4  EF56  F004         	goto	u1811
  4811  0008A8  EF58  F004         	goto	u1810
  4812  0008AC                     u1811:
  4813  0008AC  EF84  F004         	goto	l88
  4814  0008B0                     u1810:
  4815  0008B0                     
  4816                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4817  0008B0  5003               	movf	pinMode@type^0,w,c
  4818  0008B2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4819  0008B4  B4D8               	btfsc	status,2,c
  4820  0008B6  EF5F  F004         	goto	u1821
  4821  0008BA  EF61  F004         	goto	u1820
  4822  0008BE                     u1821:
  4823  0008BE  EF73  F004         	goto	l2294
  4824  0008C2                     u1820:
  4825  0008C2  C001  F005         	movff	pinMode@pin,??_pinMode
  4826  0008C6  0EE0               	movlw	-32
  4827  0008C8  2605               	addwf	??_pinMode^0,f,c
  4828  0008CA  0E01               	movlw	1
  4829  0008CC  6E06               	movwf	(??_pinMode+1)^0,c
  4830  0008CE  2A05               	incf	??_pinMode^0,f,c
  4831  0008D0  EF6C  F004         	goto	u1834
  4832  0008D4                     u1835:
  4833  0008D4  90D8               	bcf	status,0,c
  4834  0008D6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4835  0008D8                     u1834:
  4836  0008D8  2E05               	decfsz	??_pinMode^0,f,c
  4837  0008DA  EF6A  F004         	goto	u1835
  4838  0008DE  5006               	movf	(??_pinMode+1)^0,w,c
  4839  0008E0  1296               	iorwf	150,f,c	;volatile
  4840  0008E2  EF84  F004         	goto	l88
  4841  0008E6                     l2294:
  4842  0008E6  C001  F005         	movff	pinMode@pin,??_pinMode
  4843  0008EA  0EE0               	movlw	-32
  4844  0008EC  2605               	addwf	??_pinMode^0,f,c
  4845  0008EE  0E01               	movlw	1
  4846  0008F0  6E06               	movwf	(??_pinMode+1)^0,c
  4847  0008F2  2A05               	incf	??_pinMode^0,f,c
  4848  0008F4  EF7E  F004         	goto	u1844
  4849  0008F8                     u1845:
  4850  0008F8  90D8               	bcf	status,0,c
  4851  0008FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4852  0008FC                     u1844:
  4853  0008FC  2E05               	decfsz	??_pinMode^0,f,c
  4854  0008FE  EF7C  F004         	goto	u1845
  4855  000902  5006               	movf	(??_pinMode+1)^0,w,c
  4856  000904  0AFF               	xorlw	255
  4857  000906  1696               	andwf	150,f,c	;volatile
  4858  000908                     l88:
  4859  000908  0012               	return		;funcret
  4860  00090A                     __end_of_pinMode:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _kpDebounce *****************
  4864 ;; Defined at:
  4865 ;;		line 27 in file "keypad.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  i               2   12[COMRAM] int 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4879 ;;      Params:         0       0       0       0       0       0       0
  4880 ;;      Locals:         2       0       0       0       0       0       0
  4881 ;;      Temps:          3       0       0       0       0       0       0
  4882 ;;      Totals:         5       0       0       0       0       0       0
  4883 ;;Total ram usage:        5 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 3
  4886 ;; This function calls:
  4887 ;;		_digitalRead
  4888 ;;		_soWrite
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text38
  4895  00100C                     __ptext38:
  4896                           	callstack 0
  4897  00100C                     _kpDebounce:
  4898                           	callstack 27
  4899  00100C                     
  4900                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4901  00100C  0E00               	movlw	0
  4902  00100E  6E22               	movwf	(kpDebounce@newRead+1)^0,c
  4903  001010  0E00               	movlw	0
  4904  001012  6E21               	movwf	kpDebounce@newRead^0,c
  4905                           
  4906                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4907  001014  0E00               	movlw	0
  4908  001016  6E0E               	movwf	(kpDebounce@i+1)^0,c
  4909  001018  0E00               	movlw	0
  4910  00101A  6E0D               	movwf	kpDebounce@i^0,c
  4911  00101C                     l2548:
  4912  00101C  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  4913  00101E  EF1A  F008         	goto	u2231
  4914  001022  500E               	movf	(kpDebounce@i+1)^0,w,c
  4915  001024  E109               	bnz	u2230
  4916  001026  0E05               	movlw	5
  4917  001028  5C0D               	subwf	kpDebounce@i^0,w,c
  4918  00102A  A0D8               	btfss	status,0,c
  4919  00102C  EF1A  F008         	goto	u2231
  4920  001030  EF1C  F008         	goto	u2230
  4921  001034                     u2231:
  4922  001034  EF1E  F008         	goto	l2552
  4923  001038                     u2230:
  4924  001038  EF7F  F008         	goto	l2564
  4925  00103C                     l2552:
  4926                           
  4927                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4928  00103C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4929  001040  0E03               	movlw	3
  4930  001042  260A               	addwf	??_kpDebounce^0,f,c
  4931  001044  0E01               	movlw	1
  4932  001046  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4933  001048  0E00               	movlw	0
  4934  00104A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4935  00104C  2A0A               	incf	??_kpDebounce^0,f,c
  4936  00104E  EF2C  F008         	goto	u2244
  4937  001052                     u2245:
  4938  001052  90D8               	bcf	status,0,c
  4939  001054  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4940  001056  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4941  001058                     u2244:
  4942  001058  2E0A               	decfsz	??_kpDebounce^0,f,c
  4943  00105A  EF29  F008         	goto	u2245
  4944  00105E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  4945  001062  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  4946  001066  EC1B  F00E         	call	_soWrite	;wreg free
  4947                           
  4948                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4949  00106A  0E00               	movlw	0
  4950  00106C  6E02               	movwf	(digitalRead@pin+1)^0,c
  4951  00106E  0E0A               	movlw	10
  4952  001070  6E01               	movwf	digitalRead@pin^0,c
  4953  001072  EC51  F007         	call	_digitalRead	;wreg free
  4954  001076  5001               	movf	?_digitalRead^0,w,c
  4955  001078  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4956  00107A  B4D8               	btfsc	status,2,c
  4957  00107C  EF42  F008         	goto	u2251
  4958  001080  EF44  F008         	goto	u2250
  4959  001084                     u2251:
  4960  001084  EF57  F008         	goto	l2556
  4961  001088                     u2250:
  4962  001088                     
  4963                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4964  001088  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4965  00108C  0E01               	movlw	1
  4966  00108E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4967  001090  0E00               	movlw	0
  4968  001092  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4969  001094  2A0A               	incf	??_kpDebounce^0,f,c
  4970  001096  EF50  F008         	goto	u2264
  4971  00109A                     u2265:
  4972  00109A  90D8               	bcf	status,0,c
  4973  00109C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4974  00109E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4975  0010A0                     u2264:
  4976  0010A0  2E0A               	decfsz	??_kpDebounce^0,f,c
  4977  0010A2  EF4D  F008         	goto	u2265
  4978  0010A6  500B               	movf	(??_kpDebounce+1)^0,w,c
  4979  0010A8  1221               	iorwf	kpDebounce@newRead^0,f,c
  4980  0010AA  500C               	movf	(??_kpDebounce+2)^0,w,c
  4981  0010AC  1222               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4982  0010AE                     l2556:
  4983                           
  4984                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4985  0010AE  0E00               	movlw	0
  4986  0010B0  6E02               	movwf	(digitalRead@pin+1)^0,c
  4987  0010B2  0E09               	movlw	9
  4988  0010B4  6E01               	movwf	digitalRead@pin^0,c
  4989  0010B6  EC51  F007         	call	_digitalRead	;wreg free
  4990  0010BA  5001               	movf	?_digitalRead^0,w,c
  4991  0010BC  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4992  0010BE  B4D8               	btfsc	status,2,c
  4993  0010C0  EF64  F008         	goto	u2271
  4994  0010C4  EF66  F008         	goto	u2270
  4995  0010C8                     u2271:
  4996  0010C8  EF7B  F008         	goto	l2560
  4997  0010CC                     u2270:
  4998  0010CC                     
  4999                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  5000  0010CC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5001  0010D0  0E05               	movlw	5
  5002  0010D2  260A               	addwf	??_kpDebounce^0,f,c
  5003  0010D4  0E01               	movlw	1
  5004  0010D6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5005  0010D8  0E00               	movlw	0
  5006  0010DA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5007  0010DC  2A0A               	incf	??_kpDebounce^0,f,c
  5008  0010DE  EF74  F008         	goto	u2284
  5009  0010E2                     u2285:
  5010  0010E2  90D8               	bcf	status,0,c
  5011  0010E4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5012  0010E6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5013  0010E8                     u2284:
  5014  0010E8  2E0A               	decfsz	??_kpDebounce^0,f,c
  5015  0010EA  EF71  F008         	goto	u2285
  5016  0010EE  500B               	movf	(??_kpDebounce+1)^0,w,c
  5017  0010F0  1221               	iorwf	kpDebounce@newRead^0,f,c
  5018  0010F2  500C               	movf	(??_kpDebounce+2)^0,w,c
  5019  0010F4  1222               	iorwf	(kpDebounce@newRead+1)^0,f,c
  5020  0010F6                     l2560:
  5021                           
  5022                           ;keypad.c: 42:     }
  5023  0010F6  4A0D               	infsnz	kpDebounce@i^0,f,c
  5024  0010F8  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  5025  0010FA  EF0E  F008         	goto	l2548
  5026  0010FE                     l2564:
  5027                           
  5028                           ;keypad.c: 43:     if (oldRead == newRead) {
  5029  0010FE  5021               	movf	kpDebounce@newRead^0,w,c
  5030  001100  181F               	xorwf	kpDebounce@oldRead^0,w,c
  5031  001102  E107               	bnz	u2291
  5032  001104  5022               	movf	(kpDebounce@newRead+1)^0,w,c
  5033  001106  1820               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  5034  001108  A4D8               	btfss	status,2,c
  5035  00110A  EF89  F008         	goto	u2291
  5036  00110E  EF8B  F008         	goto	u2290
  5037  001112                     u2291:
  5038  001112  EF8E  F008         	goto	l2568
  5039  001116                     u2290:
  5040  001116                     
  5041                           ;keypad.c: 44:         tempo--;
  5042  001116  062D               	decf	kpDebounce@tempo^0,f,c
  5043                           
  5044                           ;keypad.c: 45:     } else {
  5045  001118  EF94  F008         	goto	l125
  5046  00111C                     l2568:
  5047                           
  5048                           ;keypad.c: 46:         tempo = 1;
  5049  00111C  0E01               	movlw	1
  5050  00111E  6E2D               	movwf	kpDebounce@tempo^0,c
  5051  001120                     
  5052                           ;keypad.c: 47:         oldRead = newRead;
  5053  001120  C021  F01F         	movff	kpDebounce@newRead,kpDebounce@oldRead
  5054  001124  C022  F020         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  5055  001128                     l125:
  5056                           
  5057                           ;keypad.c: 49:     if (tempo == 0) {
  5058  001128  502D               	movf	kpDebounce@tempo^0,w,c
  5059  00112A  A4D8               	btfss	status,2,c
  5060  00112C  EF9A  F008         	goto	u2301
  5061  001130  EF9C  F008         	goto	u2300
  5062  001134                     u2301:
  5063  001134  EFA0  F008         	goto	l127
  5064  001138                     u2300:
  5065  001138                     
  5066                           ;keypad.c: 50:         keys = oldRead;
  5067  001138  C01F  F023         	movff	kpDebounce@oldRead,_keys
  5068  00113C  C020  F024         	movff	kpDebounce@oldRead+1,_keys+1
  5069  001140                     l127:
  5070  001140  0012               	return		;funcret
  5071  001142                     __end_of_kpDebounce:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _soWrite *****************
  5075 ;; Defined at:
  5076 ;;		line 18 in file "so.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  value           2    6[COMRAM] int 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  i               1    8[COMRAM] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5090 ;;      Params:         2       0       0       0       0       0       0
  5091 ;;      Locals:         1       0       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0
  5093 ;;      Totals:         3       0       0       0       0       0       0
  5094 ;;Total ram usage:        3 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 2
  5097 ;; This function calls:
  5098 ;;		_PulseClockData
  5099 ;;		_PulseEnClock
  5100 ;;		_digitalWrite
  5101 ;; This function is called by:
  5102 ;;		_kpDebounce
  5103 ;;		_pushNibble
  5104 ;;		_pushByte
  5105 ;;		_ssdUpdate
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text39
  5110  001C36                     __ptext39:
  5111                           	callstack 0
  5112  001C36                     _soWrite:
  5113                           	callstack 24
  5114  001C36                     
  5115                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5116  001C36  0E00               	movlw	0
  5117  001C38  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5118  001C3A  0E08               	movlw	8
  5119  001C3C  6E01               	movwf	digitalWrite@pin^0,c
  5120  001C3E  0E00               	movlw	0
  5121  001C40  6E04               	movwf	(digitalWrite@value+1)^0,c
  5122  001C42  0E00               	movlw	0
  5123  001C44  6E03               	movwf	digitalWrite@value^0,c
  5124  001C46  EC85  F004         	call	_digitalWrite	;wreg free
  5125  001C4A                     
  5126                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5127  001C4A  0E00               	movlw	0
  5128  001C4C  6E09               	movwf	soWrite@i^0,c
  5129  001C4E                     l2238:
  5130                           
  5131                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5132  001C4E  0E00               	movlw	0
  5133  001C50  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5134  001C52  0E1E               	movlw	30
  5135  001C54  6E01               	movwf	digitalWrite@pin^0,c
  5136  001C56  0E80               	movlw	128
  5137  001C58  1407               	andwf	soWrite@value^0,w,c
  5138  001C5A  6E03               	movwf	digitalWrite@value^0,c
  5139  001C5C  6A04               	clrf	(digitalWrite@value+1)^0,c
  5140  001C5E  EC85  F004         	call	_digitalWrite	;wreg free
  5141                           
  5142                           ;so.c: 23:   PulseClockData();
  5143  001C62  ECF9  F00E         	call	_PulseClockData	;wreg free
  5144  001C66                     
  5145                           ;so.c: 24:   value <<= 1;
  5146  001C66  90D8               	bcf	status,0,c
  5147  001C68  3607               	rlcf	soWrite@value^0,f,c
  5148  001C6A  3608               	rlcf	(soWrite@value+1)^0,f,c
  5149  001C6C                     
  5150                           ;so.c: 25:  }
  5151  001C6C  2A09               	incf	soWrite@i^0,f,c
  5152  001C6E  0E07               	movlw	7
  5153  001C70  6409               	cpfsgt	soWrite@i^0,c
  5154  001C72  EF3D  F00E         	goto	u1641
  5155  001C76  EF3F  F00E         	goto	u1640
  5156  001C7A                     u1641:
  5157  001C7A  EF27  F00E         	goto	l2238
  5158  001C7E                     u1640:
  5159  001C7E                     
  5160                           ;so.c: 26:  PulseEnClock();
  5161  001C7E  ECE4  F00E         	call	_PulseEnClock	;wreg free
  5162  001C82  0012               	return		;funcret
  5163  001C84                     __end_of_soWrite:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function _PulseEnClock *****************
  5167 ;; Defined at:
  5168 ;;		line 9 in file "so.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5182 ;;      Params:         0       0       0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 1
  5189 ;; This function calls:
  5190 ;;		_digitalWrite
  5191 ;; This function is called by:
  5192 ;;		_soWrite
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text40
  5197  001DC8                     __ptext40:
  5198                           	callstack 0
  5199  001DC8                     _PulseEnClock:
  5200                           	callstack 24
  5201  001DC8                     
  5202                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5203  001DC8  0E00               	movlw	0
  5204  001DCA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5205  001DCC  0E1F               	movlw	31
  5206  001DCE  6E01               	movwf	digitalWrite@pin^0,c
  5207  001DD0  0E00               	movlw	0
  5208  001DD2  6E04               	movwf	(digitalWrite@value+1)^0,c
  5209  001DD4  0E01               	movlw	1
  5210  001DD6  6E03               	movwf	digitalWrite@value^0,c
  5211  001DD8  EC85  F004         	call	_digitalWrite	;wreg free
  5212                           
  5213                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5214  001DDC  0E00               	movlw	0
  5215  001DDE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5216  001DE0  0E1F               	movlw	31
  5217  001DE2  6E01               	movwf	digitalWrite@pin^0,c
  5218  001DE4  0E00               	movlw	0
  5219  001DE6  6E04               	movwf	(digitalWrite@value+1)^0,c
  5220  001DE8  0E00               	movlw	0
  5221  001DEA  6E03               	movwf	digitalWrite@value^0,c
  5222  001DEC  EC85  F004         	call	_digitalWrite	;wreg free
  5223  001DF0  0012               	return		;funcret
  5224  001DF2                     __end_of_PulseEnClock:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _PulseClockData *****************
  5228 ;; Defined at:
  5229 ;;		line 14 in file "so.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;		None
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5243 ;;      Params:         0       0       0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0
  5246 ;;      Totals:         0       0       0       0       0       0       0
  5247 ;;Total ram usage:        0 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 1
  5250 ;; This function calls:
  5251 ;;		_digitalWrite
  5252 ;; This function is called by:
  5253 ;;		_soWrite
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text41
  5258  001DF2                     __ptext41:
  5259                           	callstack 0
  5260  001DF2                     _PulseClockData:
  5261                           	callstack 24
  5262  001DF2                     
  5263                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5264  001DF2  0E00               	movlw	0
  5265  001DF4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5266  001DF6  0E08               	movlw	8
  5267  001DF8  6E01               	movwf	digitalWrite@pin^0,c
  5268  001DFA  0E00               	movlw	0
  5269  001DFC  6E04               	movwf	(digitalWrite@value+1)^0,c
  5270  001DFE  0E01               	movlw	1
  5271  001E00  6E03               	movwf	digitalWrite@value^0,c
  5272  001E02  EC85  F004         	call	_digitalWrite	;wreg free
  5273                           
  5274                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5275  001E06  0E00               	movlw	0
  5276  001E08  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5277  001E0A  0E08               	movlw	8
  5278  001E0C  6E01               	movwf	digitalWrite@pin^0,c
  5279  001E0E  0E00               	movlw	0
  5280  001E10  6E04               	movwf	(digitalWrite@value+1)^0,c
  5281  001E12  0E00               	movlw	0
  5282  001E14  6E03               	movwf	digitalWrite@value^0,c
  5283  001E16  EC85  F004         	call	_digitalWrite	;wreg free
  5284  001E1A  0012               	return		;funcret
  5285  001E1C                     __end_of_PulseClockData:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _digitalWrite *****************
  5289 ;; Defined at:
  5290 ;;		line 14 in file "io.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  pin             2    0[COMRAM] int 
  5293 ;;  value           2    2[COMRAM] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5305 ;;      Params:         4       0       0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0
  5307 ;;      Temps:          2       0       0       0       0       0       0
  5308 ;;      Totals:         6       0       0       0       0       0       0
  5309 ;;Total ram usage:        6 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_pulseEnablePin
  5315 ;;		_pushNibble
  5316 ;;		_pushByte
  5317 ;;		_PulseEnClock
  5318 ;;		_PulseClockData
  5319 ;;		_soWrite
  5320 ;;		_status
  5321 ;;		_main
  5322 ;;		_rgbColor
  5323 ;;		_turnOn
  5324 ;;		_turnOff
  5325 ;;		_ssdUpdate
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text42
  5330  00090A                     __ptext42:
  5331                           	callstack 0
  5332  00090A                     _digitalWrite:
  5333                           	callstack 29
  5334  00090A                     
  5335                           ;io.c: 16:     if(pin <8){
  5336  00090A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5337  00090C  EF93  F004         	goto	u1440
  5338  000910  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5339  000912  E107               	bnz	u1441
  5340  000914  0E08               	movlw	8
  5341  000916  5C01               	subwf	digitalWrite@pin^0,w,c
  5342  000918  B0D8               	btfsc	status,0,c
  5343  00091A  EF91  F004         	goto	u1441
  5344  00091E  EF93  F004         	goto	u1440
  5345  000922                     u1441:
  5346  000922  EFBD  F004         	goto	l2194
  5347  000926                     u1440:
  5348  000926                     
  5349                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5350  000926  5003               	movf	digitalWrite@value^0,w,c
  5351  000928  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5352  00092A  B4D8               	btfsc	status,2,c
  5353  00092C  EF9A  F004         	goto	u1451
  5354  000930  EF9C  F004         	goto	u1450
  5355  000934                     u1451:
  5356  000934  EFAC  F004         	goto	l2192
  5357  000938                     u1450:
  5358  000938  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5359  00093C  0E01               	movlw	1
  5360  00093E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5361  000940  2A05               	incf	??_digitalWrite^0,f,c
  5362  000942  EFA5  F004         	goto	u1464
  5363  000946                     u1465:
  5364  000946  90D8               	bcf	status,0,c
  5365  000948  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5366  00094A                     u1464:
  5367  00094A  2E05               	decfsz	??_digitalWrite^0,f,c
  5368  00094C  EFA3  F004         	goto	u1465
  5369  000950  5006               	movf	(??_digitalWrite+1)^0,w,c
  5370  000952  1280               	iorwf	128,f,c	;volatile
  5371  000954  EFAB  F005         	goto	l54
  5372  000958                     l2192:
  5373  000958  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5374  00095C  0E01               	movlw	1
  5375  00095E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5376  000960  2A05               	incf	??_digitalWrite^0,f,c
  5377  000962  EFB5  F004         	goto	u1474
  5378  000966                     u1475:
  5379  000966  90D8               	bcf	status,0,c
  5380  000968  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5381  00096A                     u1474:
  5382  00096A  2E05               	decfsz	??_digitalWrite^0,f,c
  5383  00096C  EFB3  F004         	goto	u1475
  5384  000970  5006               	movf	(??_digitalWrite+1)^0,w,c
  5385  000972  0AFF               	xorlw	255
  5386  000974  1680               	andwf	128,f,c	;volatile
  5387  000976  EFAB  F005         	goto	l54
  5388  00097A                     l2194:
  5389  00097A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5390  00097C  EFCB  F004         	goto	u1480
  5391  000980  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5392  000982  E107               	bnz	u1481
  5393  000984  0E10               	movlw	16
  5394  000986  5C01               	subwf	digitalWrite@pin^0,w,c
  5395  000988  B0D8               	btfsc	status,0,c
  5396  00098A  EFC9  F004         	goto	u1481
  5397  00098E  EFCB  F004         	goto	u1480
  5398  000992                     u1481:
  5399  000992  EFF9  F004         	goto	l2202
  5400  000996                     u1480:
  5401  000996                     
  5402                           ;io.c: 20:         pin -=8;
  5403  000996  0EF8               	movlw	248
  5404  000998  2601               	addwf	digitalWrite@pin^0,f,c
  5405  00099A  0EFF               	movlw	255
  5406  00099C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5407                           
  5408                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5409  00099E  5003               	movf	digitalWrite@value^0,w,c
  5410  0009A0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5411  0009A2  B4D8               	btfsc	status,2,c
  5412  0009A4  EFD6  F004         	goto	u1491
  5413  0009A8  EFD8  F004         	goto	u1490
  5414  0009AC                     u1491:
  5415  0009AC  EFE8  F004         	goto	l2200
  5416  0009B0                     u1490:
  5417  0009B0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5418  0009B4  0E01               	movlw	1
  5419  0009B6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5420  0009B8  2A05               	incf	??_digitalWrite^0,f,c
  5421  0009BA  EFE1  F004         	goto	u1504
  5422  0009BE                     u1505:
  5423  0009BE  90D8               	bcf	status,0,c
  5424  0009C0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5425  0009C2                     u1504:
  5426  0009C2  2E05               	decfsz	??_digitalWrite^0,f,c
  5427  0009C4  EFDF  F004         	goto	u1505
  5428  0009C8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5429  0009CA  1281               	iorwf	129,f,c	;volatile
  5430  0009CC  EFAB  F005         	goto	l54
  5431  0009D0                     l2200:
  5432  0009D0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5433  0009D4  0E01               	movlw	1
  5434  0009D6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5435  0009D8  2A05               	incf	??_digitalWrite^0,f,c
  5436  0009DA  EFF1  F004         	goto	u1514
  5437  0009DE                     u1515:
  5438  0009DE  90D8               	bcf	status,0,c
  5439  0009E0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5440  0009E2                     u1514:
  5441  0009E2  2E05               	decfsz	??_digitalWrite^0,f,c
  5442  0009E4  EFEF  F004         	goto	u1515
  5443  0009E8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5444  0009EA  0AFF               	xorlw	255
  5445  0009EC  1681               	andwf	129,f,c	;volatile
  5446  0009EE  EFAB  F005         	goto	l54
  5447  0009F2                     l2202:
  5448  0009F2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5449  0009F4  EF07  F005         	goto	u1520
  5450  0009F8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5451  0009FA  E107               	bnz	u1521
  5452  0009FC  0E18               	movlw	24
  5453  0009FE  5C01               	subwf	digitalWrite@pin^0,w,c
  5454  000A00  B0D8               	btfsc	status,0,c
  5455  000A02  EF05  F005         	goto	u1521
  5456  000A06  EF07  F005         	goto	u1520
  5457  000A0A                     u1521:
  5458  000A0A  EF35  F005         	goto	l2210
  5459  000A0E                     u1520:
  5460  000A0E                     
  5461                           ;io.c: 24:         pin -=16;
  5462  000A0E  0EF0               	movlw	240
  5463  000A10  2601               	addwf	digitalWrite@pin^0,f,c
  5464  000A12  0EFF               	movlw	255
  5465  000A14  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5466                           
  5467                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5468  000A16  5003               	movf	digitalWrite@value^0,w,c
  5469  000A18  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5470  000A1A  B4D8               	btfsc	status,2,c
  5471  000A1C  EF12  F005         	goto	u1531
  5472  000A20  EF14  F005         	goto	u1530
  5473  000A24                     u1531:
  5474  000A24  EF24  F005         	goto	l2208
  5475  000A28                     u1530:
  5476  000A28  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5477  000A2C  0E01               	movlw	1
  5478  000A2E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5479  000A30  2A05               	incf	??_digitalWrite^0,f,c
  5480  000A32  EF1D  F005         	goto	u1544
  5481  000A36                     u1545:
  5482  000A36  90D8               	bcf	status,0,c
  5483  000A38  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5484  000A3A                     u1544:
  5485  000A3A  2E05               	decfsz	??_digitalWrite^0,f,c
  5486  000A3C  EF1B  F005         	goto	u1545
  5487  000A40  5006               	movf	(??_digitalWrite+1)^0,w,c
  5488  000A42  1282               	iorwf	130,f,c	;volatile
  5489  000A44  EFAB  F005         	goto	l54
  5490  000A48                     l2208:
  5491  000A48  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5492  000A4C  0E01               	movlw	1
  5493  000A4E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5494  000A50  2A05               	incf	??_digitalWrite^0,f,c
  5495  000A52  EF2D  F005         	goto	u1554
  5496  000A56                     u1555:
  5497  000A56  90D8               	bcf	status,0,c
  5498  000A58  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5499  000A5A                     u1554:
  5500  000A5A  2E05               	decfsz	??_digitalWrite^0,f,c
  5501  000A5C  EF2B  F005         	goto	u1555
  5502  000A60  5006               	movf	(??_digitalWrite+1)^0,w,c
  5503  000A62  0AFF               	xorlw	255
  5504  000A64  1682               	andwf	130,f,c	;volatile
  5505  000A66  EFAB  F005         	goto	l54
  5506  000A6A                     l2210:
  5507  000A6A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5508  000A6C  EF43  F005         	goto	u1560
  5509  000A70  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5510  000A72  E107               	bnz	u1561
  5511  000A74  0E20               	movlw	32
  5512  000A76  5C01               	subwf	digitalWrite@pin^0,w,c
  5513  000A78  B0D8               	btfsc	status,0,c
  5514  000A7A  EF41  F005         	goto	u1561
  5515  000A7E  EF43  F005         	goto	u1560
  5516  000A82                     u1561:
  5517  000A82  EF71  F005         	goto	l2218
  5518  000A86                     u1560:
  5519  000A86                     
  5520                           ;io.c: 28:         pin -=24;
  5521  000A86  0EE8               	movlw	232
  5522  000A88  2601               	addwf	digitalWrite@pin^0,f,c
  5523  000A8A  0EFF               	movlw	255
  5524  000A8C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5525                           
  5526                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5527  000A8E  5003               	movf	digitalWrite@value^0,w,c
  5528  000A90  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5529  000A92  B4D8               	btfsc	status,2,c
  5530  000A94  EF4E  F005         	goto	u1571
  5531  000A98  EF50  F005         	goto	u1570
  5532  000A9C                     u1571:
  5533  000A9C  EF60  F005         	goto	l2216
  5534  000AA0                     u1570:
  5535  000AA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5536  000AA4  0E01               	movlw	1
  5537  000AA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5538  000AA8  2A05               	incf	??_digitalWrite^0,f,c
  5539  000AAA  EF59  F005         	goto	u1584
  5540  000AAE                     u1585:
  5541  000AAE  90D8               	bcf	status,0,c
  5542  000AB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5543  000AB2                     u1584:
  5544  000AB2  2E05               	decfsz	??_digitalWrite^0,f,c
  5545  000AB4  EF57  F005         	goto	u1585
  5546  000AB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5547  000ABA  1283               	iorwf	131,f,c	;volatile
  5548  000ABC  EFAB  F005         	goto	l54
  5549  000AC0                     l2216:
  5550  000AC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5551  000AC4  0E01               	movlw	1
  5552  000AC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5553  000AC8  2A05               	incf	??_digitalWrite^0,f,c
  5554  000ACA  EF69  F005         	goto	u1594
  5555  000ACE                     u1595:
  5556  000ACE  90D8               	bcf	status,0,c
  5557  000AD0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5558  000AD2                     u1594:
  5559  000AD2  2E05               	decfsz	??_digitalWrite^0,f,c
  5560  000AD4  EF67  F005         	goto	u1595
  5561  000AD8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5562  000ADA  0AFF               	xorlw	255
  5563  000ADC  1683               	andwf	131,f,c	;volatile
  5564  000ADE  EFAB  F005         	goto	l54
  5565  000AE2                     l2218:
  5566  000AE2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5567  000AE4  EF7F  F005         	goto	u1600
  5568  000AE8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5569  000AEA  E107               	bnz	u1601
  5570  000AEC  0E28               	movlw	40
  5571  000AEE  5C01               	subwf	digitalWrite@pin^0,w,c
  5572  000AF0  B0D8               	btfsc	status,0,c
  5573  000AF2  EF7D  F005         	goto	u1601
  5574  000AF6  EF7F  F005         	goto	u1600
  5575  000AFA                     u1601:
  5576  000AFA  EFAB  F005         	goto	l54
  5577  000AFE                     u1600:
  5578  000AFE                     
  5579                           ;io.c: 32:         pin -=32;
  5580  000AFE  0EE0               	movlw	224
  5581  000B00  2601               	addwf	digitalWrite@pin^0,f,c
  5582  000B02  0EFF               	movlw	255
  5583  000B04  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5584                           
  5585                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5586  000B06  5003               	movf	digitalWrite@value^0,w,c
  5587  000B08  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5588  000B0A  B4D8               	btfsc	status,2,c
  5589  000B0C  EF8A  F005         	goto	u1611
  5590  000B10  EF8C  F005         	goto	u1610
  5591  000B14                     u1611:
  5592  000B14  EF9C  F005         	goto	l2224
  5593  000B18                     u1610:
  5594  000B18  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5595  000B1C  0E01               	movlw	1
  5596  000B1E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5597  000B20  2A05               	incf	??_digitalWrite^0,f,c
  5598  000B22  EF95  F005         	goto	u1624
  5599  000B26                     u1625:
  5600  000B26  90D8               	bcf	status,0,c
  5601  000B28  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5602  000B2A                     u1624:
  5603  000B2A  2E05               	decfsz	??_digitalWrite^0,f,c
  5604  000B2C  EF93  F005         	goto	u1625
  5605  000B30  5006               	movf	(??_digitalWrite+1)^0,w,c
  5606  000B32  1284               	iorwf	132,f,c	;volatile
  5607  000B34  EFAB  F005         	goto	l54
  5608  000B38                     l2224:
  5609  000B38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5610  000B3C  0E01               	movlw	1
  5611  000B3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5612  000B40  2A05               	incf	??_digitalWrite^0,f,c
  5613  000B42  EFA5  F005         	goto	u1634
  5614  000B46                     u1635:
  5615  000B46  90D8               	bcf	status,0,c
  5616  000B48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5617  000B4A                     u1634:
  5618  000B4A  2E05               	decfsz	??_digitalWrite^0,f,c
  5619  000B4C  EFA3  F005         	goto	u1635
  5620  000B50  5006               	movf	(??_digitalWrite+1)^0,w,c
  5621  000B52  0AFF               	xorlw	255
  5622  000B54  1684               	andwf	132,f,c	;volatile
  5623  000B56                     l54:
  5624  000B56  0012               	return		;funcret
  5625  000B58                     __end_of_digitalWrite:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _digitalRead *****************
  5629 ;; Defined at:
  5630 ;;		line 39 in file "io.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  pin             2    0[COMRAM] int 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2    0[COMRAM] int 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5644 ;;      Params:         2       0       0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0
  5646 ;;      Temps:          3       0       0       0       0       0       0
  5647 ;;      Totals:         5       0       0       0       0       0       0
  5648 ;;Total ram usage:        5 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_kpDebounce
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text43
  5658  000EA2                     __ptext43:
  5659                           	callstack 0
  5660  000EA2                     _digitalRead:
  5661                           	callstack 29
  5662  000EA2                     
  5663                           ;io.c: 40:     if(pin <8){
  5664  000EA2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5665  000EA4  EF5F  F007         	goto	u2070
  5666  000EA8  5002               	movf	(digitalRead@pin+1)^0,w,c
  5667  000EAA  E107               	bnz	u2071
  5668  000EAC  0E08               	movlw	8
  5669  000EAE  5C01               	subwf	digitalRead@pin^0,w,c
  5670  000EB0  B0D8               	btfsc	status,0,c
  5671  000EB2  EF5D  F007         	goto	u2071
  5672  000EB6  EF5F  F007         	goto	u2070
  5673  000EBA                     u2071:
  5674  000EBA  EF73  F007         	goto	l2466
  5675  000EBE                     u2070:
  5676  000EBE                     
  5677                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5678  000EBE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5679  000EC2  0E01               	movlw	1
  5680  000EC4  6E04               	movwf	(??_digitalRead+1)^0,c
  5681  000EC6  2A03               	incf	??_digitalRead^0,f,c
  5682  000EC8  EF68  F007         	goto	u2084
  5683  000ECC                     u2085:
  5684  000ECC  90D8               	bcf	status,0,c
  5685  000ECE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5686  000ED0                     u2084:
  5687  000ED0  2E03               	decfsz	??_digitalRead^0,f,c
  5688  000ED2  EF66  F007         	goto	u2085
  5689  000ED6  5004               	movf	(??_digitalRead+1)^0,w,c
  5690  000ED8  1480               	andwf	128,w,c	;volatile
  5691  000EDA  6E05               	movwf	(??_digitalRead+2)^0,c
  5692  000EDC  5005               	movf	(??_digitalRead+2)^0,w,c
  5693  000EDE  6E01               	movwf	?_digitalRead^0,c
  5694  000EE0  6A02               	clrf	(?_digitalRead+1)^0,c
  5695  000EE2  EF05  F008         	goto	l58
  5696  000EE6                     l2466:
  5697  000EE6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5698  000EE8  EF81  F007         	goto	u2090
  5699  000EEC  5002               	movf	(digitalRead@pin+1)^0,w,c
  5700  000EEE  E107               	bnz	u2091
  5701  000EF0  0E10               	movlw	16
  5702  000EF2  5C01               	subwf	digitalRead@pin^0,w,c
  5703  000EF4  B0D8               	btfsc	status,0,c
  5704  000EF6  EF7F  F007         	goto	u2091
  5705  000EFA  EF81  F007         	goto	u2090
  5706  000EFE                     u2091:
  5707  000EFE  EF97  F007         	goto	l2474
  5708  000F02                     u2090:
  5709  000F02                     
  5710                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5711  000F02  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5712  000F06  0EF8               	movlw	-8
  5713  000F08  2603               	addwf	??_digitalRead^0,f,c
  5714  000F0A  0E01               	movlw	1
  5715  000F0C  6E04               	movwf	(??_digitalRead+1)^0,c
  5716  000F0E  2A03               	incf	??_digitalRead^0,f,c
  5717  000F10  EF8C  F007         	goto	u2104
  5718  000F14                     u2105:
  5719  000F14  90D8               	bcf	status,0,c
  5720  000F16  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5721  000F18                     u2104:
  5722  000F18  2E03               	decfsz	??_digitalRead^0,f,c
  5723  000F1A  EF8A  F007         	goto	u2105
  5724  000F1E  5004               	movf	(??_digitalRead+1)^0,w,c
  5725  000F20  1481               	andwf	129,w,c	;volatile
  5726  000F22  6E05               	movwf	(??_digitalRead+2)^0,c
  5727  000F24  5005               	movf	(??_digitalRead+2)^0,w,c
  5728  000F26  6E01               	movwf	?_digitalRead^0,c
  5729  000F28  6A02               	clrf	(?_digitalRead+1)^0,c
  5730  000F2A  EF05  F008         	goto	l58
  5731  000F2E                     l2474:
  5732  000F2E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5733  000F30  EFA5  F007         	goto	u2110
  5734  000F34  5002               	movf	(digitalRead@pin+1)^0,w,c
  5735  000F36  E107               	bnz	u2111
  5736  000F38  0E18               	movlw	24
  5737  000F3A  5C01               	subwf	digitalRead@pin^0,w,c
  5738  000F3C  B0D8               	btfsc	status,0,c
  5739  000F3E  EFA3  F007         	goto	u2111
  5740  000F42  EFA5  F007         	goto	u2110
  5741  000F46                     u2111:
  5742  000F46  EFBB  F007         	goto	l2482
  5743  000F4A                     u2110:
  5744  000F4A                     
  5745                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5746  000F4A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5747  000F4E  0EF0               	movlw	-16
  5748  000F50  2603               	addwf	??_digitalRead^0,f,c
  5749  000F52  0E01               	movlw	1
  5750  000F54  6E04               	movwf	(??_digitalRead+1)^0,c
  5751  000F56  2A03               	incf	??_digitalRead^0,f,c
  5752  000F58  EFB0  F007         	goto	u2124
  5753  000F5C                     u2125:
  5754  000F5C  90D8               	bcf	status,0,c
  5755  000F5E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5756  000F60                     u2124:
  5757  000F60  2E03               	decfsz	??_digitalRead^0,f,c
  5758  000F62  EFAE  F007         	goto	u2125
  5759  000F66  5004               	movf	(??_digitalRead+1)^0,w,c
  5760  000F68  1482               	andwf	130,w,c	;volatile
  5761  000F6A  6E05               	movwf	(??_digitalRead+2)^0,c
  5762  000F6C  5005               	movf	(??_digitalRead+2)^0,w,c
  5763  000F6E  6E01               	movwf	?_digitalRead^0,c
  5764  000F70  6A02               	clrf	(?_digitalRead+1)^0,c
  5765  000F72  EF05  F008         	goto	l58
  5766  000F76                     l2482:
  5767  000F76  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5768  000F78  EFC9  F007         	goto	u2130
  5769  000F7C  5002               	movf	(digitalRead@pin+1)^0,w,c
  5770  000F7E  E107               	bnz	u2131
  5771  000F80  0E20               	movlw	32
  5772  000F82  5C01               	subwf	digitalRead@pin^0,w,c
  5773  000F84  B0D8               	btfsc	status,0,c
  5774  000F86  EFC7  F007         	goto	u2131
  5775  000F8A  EFC9  F007         	goto	u2130
  5776  000F8E                     u2131:
  5777  000F8E  EFDF  F007         	goto	l2490
  5778  000F92                     u2130:
  5779  000F92                     
  5780                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5781  000F92  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5782  000F96  0EE8               	movlw	-24
  5783  000F98  2603               	addwf	??_digitalRead^0,f,c
  5784  000F9A  0E01               	movlw	1
  5785  000F9C  6E04               	movwf	(??_digitalRead+1)^0,c
  5786  000F9E  2A03               	incf	??_digitalRead^0,f,c
  5787  000FA0  EFD4  F007         	goto	u2144
  5788  000FA4                     u2145:
  5789  000FA4  90D8               	bcf	status,0,c
  5790  000FA6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5791  000FA8                     u2144:
  5792  000FA8  2E03               	decfsz	??_digitalRead^0,f,c
  5793  000FAA  EFD2  F007         	goto	u2145
  5794  000FAE  5004               	movf	(??_digitalRead+1)^0,w,c
  5795  000FB0  1483               	andwf	131,w,c	;volatile
  5796  000FB2  6E05               	movwf	(??_digitalRead+2)^0,c
  5797  000FB4  5005               	movf	(??_digitalRead+2)^0,w,c
  5798  000FB6  6E01               	movwf	?_digitalRead^0,c
  5799  000FB8  6A02               	clrf	(?_digitalRead+1)^0,c
  5800  000FBA  EF05  F008         	goto	l58
  5801  000FBE                     l2490:
  5802  000FBE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5803  000FC0  EFED  F007         	goto	u2150
  5804  000FC4  5002               	movf	(digitalRead@pin+1)^0,w,c
  5805  000FC6  E107               	bnz	u2151
  5806  000FC8  0E28               	movlw	40
  5807  000FCA  5C01               	subwf	digitalRead@pin^0,w,c
  5808  000FCC  B0D8               	btfsc	status,0,c
  5809  000FCE  EFEB  F007         	goto	u2151
  5810  000FD2  EFED  F007         	goto	u2150
  5811  000FD6                     u2151:
  5812  000FD6  EF03  F008         	goto	l63
  5813  000FDA                     u2150:
  5814  000FDA                     
  5815                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5816  000FDA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5817  000FDE  0EE0               	movlw	-32
  5818  000FE0  2603               	addwf	??_digitalRead^0,f,c
  5819  000FE2  0E01               	movlw	1
  5820  000FE4  6E04               	movwf	(??_digitalRead+1)^0,c
  5821  000FE6  2A03               	incf	??_digitalRead^0,f,c
  5822  000FE8  EFF8  F007         	goto	u2164
  5823  000FEC                     u2165:
  5824  000FEC  90D8               	bcf	status,0,c
  5825  000FEE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5826  000FF0                     u2164:
  5827  000FF0  2E03               	decfsz	??_digitalRead^0,f,c
  5828  000FF2  EFF6  F007         	goto	u2165
  5829  000FF6  5004               	movf	(??_digitalRead+1)^0,w,c
  5830  000FF8  1484               	andwf	132,w,c	;volatile
  5831  000FFA  6E05               	movwf	(??_digitalRead+2)^0,c
  5832  000FFC  5005               	movf	(??_digitalRead+2)^0,w,c
  5833  000FFE  6E01               	movwf	?_digitalRead^0,c
  5834  001000  6A02               	clrf	(?_digitalRead+1)^0,c
  5835  001002  EF05  F008         	goto	l58
  5836  001006                     l63:
  5837  001006                     
  5838                           ;io.c: 51:     return -1;
  5839  001006  6801               	setf	?_digitalRead^0,c
  5840  001008  6802               	setf	(?_digitalRead+1)^0,c
  5841  00100A                     l58:
  5842  00100A  0012               	return		;funcret
  5843  00100C                     __end_of_digitalRead:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _InfBoiler *****************
  5847 ;; Defined at:
  5848 ;;		line 32 in file "main.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  cmd             1    3[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5862 ;;      Params:         0       0       0       0       0       0       0
  5863 ;;      Locals:         1       0       0       0       0       0       0
  5864 ;;      Temps:          2       0       0       0       0       0       0
  5865 ;;      Totals:         3       0       0       0       0       0       0
  5866 ;;Total ram usage:        3 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 1
  5869 ;; This function calls:
  5870 ;;		_serialRead
  5871 ;;		_serialSend
  5872 ;; This function is called by:
  5873 ;;		_main
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text44
  5878  00156E                     __ptext44:
  5879                           	callstack 0
  5880  00156E                     _InfBoiler:
  5881                           	callstack 29
  5882  00156E                     
  5883                           ;main.c: 33:     char cmd = serialRead();
  5884  00156E  ECCE  F00E         	call	_serialRead	;wreg free
  5885  001572  6E04               	movwf	InfBoiler@cmd^0,c
  5886  001574                     
  5887                           ;main.c: 35:     if (cmd != 0) {
  5888  001574  5004               	movf	InfBoiler@cmd^0,w,c
  5889  001576  B4D8               	btfsc	status,2,c
  5890  001578  EFC0  F00A         	goto	u1271
  5891  00157C  EFC2  F00A         	goto	u1270
  5892  001580                     u1271:
  5893  001580  EF09  F00B         	goto	l417
  5894  001584                     u1270:
  5895  001584  EFE8  F00A         	goto	l1916
  5896  001588                     l1894:
  5897                           
  5898                           ;main.c: 38:                 serialSend('T');
  5899  001588  0E54               	movlw	84
  5900  00158A  EC90  F00F         	call	_serialSend
  5901  00158E                     
  5902                           ;main.c: 39:                 temp++;
  5903  00158E  4A2E               	infsnz	_temp^0,f,c
  5904  001590  2A2F               	incf	(_temp+1)^0,f,c
  5905                           
  5906                           ;main.c: 40:                 break;
  5907  001592  EF09  F00B         	goto	l417
  5908  001596                     l1898:
  5909                           
  5910                           ;main.c: 44:                 if (temp >= 0) {
  5911  001596  0E70               	movlw	112
  5912  001598  EC90  F00F         	call	_serialSend
  5913  00159C                     
  5914                           ;main.c: 45:                     temp--;
  5915  00159C  062E               	decf	_temp^0,f,c
  5916  00159E  A0D8               	btfss	status,0,c
  5917  0015A0  062F               	decf	(_temp+1)^0,f,c
  5918  0015A2  EF09  F00B         	goto	l417
  5919  0015A6                     l1902:
  5920                           
  5921                           ;main.c: 50:                 serialSend('P');
  5922  0015A6  0E50               	movlw	80
  5923  0015A8  EC90  F00F         	call	_serialSend
  5924  0015AC                     
  5925                           ;main.c: 51:                 pres++;
  5926  0015AC  4A30               	infsnz	_pres^0,f,c
  5927  0015AE  2A31               	incf	(_pres+1)^0,f,c
  5928                           
  5929                           ;main.c: 52:                 break;
  5930  0015B0  EF09  F00B         	goto	l417
  5931  0015B4                     l1906:
  5932                           
  5933                           ;main.c: 56:                 if (pres >= 0) {
  5934  0015B4  0E70               	movlw	112
  5935  0015B6  EC90  F00F         	call	_serialSend
  5936  0015BA                     
  5937                           ;main.c: 57:                     pres--;
  5938  0015BA  0630               	decf	_pres^0,f,c
  5939  0015BC  A0D8               	btfss	status,0,c
  5940  0015BE  0631               	decf	(_pres+1)^0,f,c
  5941  0015C0  EF09  F00B         	goto	l417
  5942  0015C4                     l1910:
  5943                           
  5944                           ;main.c: 64:                 if (lev >= 0) {
  5945  0015C4  0E4E               	movlw	78
  5946  0015C6  EC90  F00F         	call	_serialSend
  5947  0015CA                     
  5948                           ;main.c: 65:                     lev--;
  5949  0015CA  0632               	decf	_lev^0,f,c
  5950  0015CC  EF09  F00B         	goto	l417
  5951  0015D0                     l1916:
  5952  0015D0  5004               	movf	InfBoiler@cmd^0,w,c
  5953  0015D2  6E02               	movwf	??_InfBoiler^0,c
  5954  0015D4  6A03               	clrf	(??_InfBoiler+1)^0,c
  5955                           
  5956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5957                           ; Switch size 1, requested type "simple"
  5958                           ; Number of cases is 1, Range of values is 0 to 0
  5959                           ; switch strategies available:
  5960                           ; Name         Instructions Cycles
  5961                           ; simple_byte            4     3 (average)
  5962                           ;	Chosen strategy is simple_byte
  5963  0015D6  5003               	movf	(??_InfBoiler+1)^0,w,c
  5964  0015D8  0A00               	xorlw	0	; case 0
  5965  0015DA  B4D8               	btfsc	status,2,c
  5966  0015DC  EFF2  F00A         	goto	l3020
  5967  0015E0  EF09  F00B         	goto	l417
  5968  0015E4                     l3020:
  5969                           
  5970                           ; Switch size 1, requested type "simple"
  5971                           ; Number of cases is 5, Range of values is 78 to 116
  5972                           ; switch strategies available:
  5973                           ; Name         Instructions Cycles
  5974                           ; simple_byte           16     9 (average)
  5975                           ;	Chosen strategy is simple_byte
  5976  0015E4  5002               	movf	??_InfBoiler^0,w,c
  5977  0015E6  0A4E               	xorlw	78	; case 78
  5978  0015E8  B4D8               	btfsc	status,2,c
  5979  0015EA  EFE2  F00A         	goto	l1910
  5980  0015EE  0A1E               	xorlw	30	; case 80
  5981  0015F0  B4D8               	btfsc	status,2,c
  5982  0015F2  EFD3  F00A         	goto	l1902
  5983  0015F6  0A04               	xorlw	4	; case 84
  5984  0015F8  B4D8               	btfsc	status,2,c
  5985  0015FA  EFC4  F00A         	goto	l1894
  5986  0015FE  0A24               	xorlw	36	; case 112
  5987  001600  B4D8               	btfsc	status,2,c
  5988  001602  EFDA  F00A         	goto	l1906
  5989  001606  0A04               	xorlw	4	; case 116
  5990  001608  B4D8               	btfsc	status,2,c
  5991  00160A  EFCB  F00A         	goto	l1898
  5992  00160E  EF09  F00B         	goto	l417
  5993  001612                     l417:
  5994  001612  0012               	return		;funcret
  5995  001614                     __end_of_InfBoiler:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _serialSend *****************
  5999 ;; Defined at:
  6000 ;;		line 25 in file "serial.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  c               1    wreg     unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  c               1    0[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6014 ;;      Params:         0       0       0       0       0       0       0
  6015 ;;      Locals:         1       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0
  6017 ;;      Totals:         1       0       0       0       0       0       0
  6018 ;;Total ram usage:        1 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_InfBoiler
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text45
  6028  001F20                     __ptext45:
  6029                           	callstack 0
  6030  001F20                     _serialSend:
  6031                           	callstack 29
  6032                           
  6033                           ;incstack = 0
  6034                           ;serialSend@c stored from wreg
  6035  001F20  6E01               	movwf	serialSend@c^0,c
  6036  001F22                     l231:
  6037  001F22  A89E               	btfss	158,4,c	;volatile
  6038  001F24  EF96  F00F         	goto	u791
  6039  001F28  EF98  F00F         	goto	u790
  6040  001F2C                     u791:
  6041  001F2C  EF91  F00F         	goto	l231
  6042  001F30                     u790:
  6043  001F30                     
  6044                           ;serial.c: 27:     TXREG = c;
  6045  001F30  C001  FFAD         	movff	serialSend@c,4013	;volatile
  6046  001F34  0012               	return		;funcret
  6047  001F36                     __end_of_serialSend:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _serialRead *****************
  6051 ;; Defined at:
  6052 ;;		line 30 in file "serial.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  resp            1    0[COMRAM] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6066 ;;      Params:         0       0       0       0       0       0       0
  6067 ;;      Locals:         1       0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0
  6069 ;;      Totals:         1       0       0       0       0       0       0
  6070 ;;Total ram usage:        1 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_InfBoiler
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text46
  6080  001D9C                     __ptext46:
  6081                           	callstack 0
  6082  001D9C                     _serialRead:
  6083                           	callstack 29
  6084  001D9C                     
  6085                           ;serial.c: 31:     char resp = 0;
  6086  001D9C  0E00               	movlw	0
  6087  001D9E  6E01               	movwf	serialRead@resp^0,c
  6088  001DA0                     
  6089                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  6090  001DA0  A2AB               	btfss	171,1,c	;volatile
  6091  001DA2  EFD5  F00E         	goto	u801
  6092  001DA6  EFD7  F00E         	goto	u800
  6093  001DAA                     u801:
  6094  001DAA  EFD9  F00E         	goto	l1590
  6095  001DAE                     u800:
  6096  001DAE                     
  6097                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  6098  001DAE  98AB               	bcf	171,4,c	;volatile
  6099                           
  6100                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  6101  001DB0  88AB               	bsf	171,4,c	;volatile
  6102  001DB2                     l1590:
  6103                           
  6104                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  6105  001DB2  AA9E               	btfss	158,5,c	;volatile
  6106  001DB4  EFDE  F00E         	goto	u811
  6107  001DB8  EFE0  F00E         	goto	u810
  6108  001DBC                     u811:
  6109  001DBC  EFE2  F00E         	goto	l1594
  6110  001DC0                     u810:
  6111  001DC0                     
  6112                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  6113  001DC0  CFAE F001          	movff	4014,serialRead@resp	;volatile
  6114  001DC4                     l1594:
  6115                           
  6116                           ;serial.c: 43:     return resp;
  6117  001DC4  5001               	movf	serialRead@resp^0,w,c
  6118  001DC6  0012               	return		;funcret
  6119  001DC8                     __end_of_serialRead:
  6120                           	callstack 0
  6121                           
  6122                           	psect	rparam
  6123  0000                     
  6124                           	psect	idloc
  6125                           
  6126                           ;Config register IDLOC0 @ 0x200000
  6127                           ;	unspecified, using default values
  6128  200000                     	org	2097152
  6129  200000  FF                 	db	255
  6130                           
  6131                           ;Config register IDLOC1 @ 0x200001
  6132                           ;	unspecified, using default values
  6133  200001                     	org	2097153
  6134  200001  FF                 	db	255
  6135                           
  6136                           ;Config register IDLOC2 @ 0x200002
  6137                           ;	unspecified, using default values
  6138  200002                     	org	2097154
  6139  200002  FF                 	db	255
  6140                           
  6141                           ;Config register IDLOC3 @ 0x200003
  6142                           ;	unspecified, using default values
  6143  200003                     	org	2097155
  6144  200003  FF                 	db	255
  6145                           
  6146                           ;Config register IDLOC4 @ 0x200004
  6147                           ;	unspecified, using default values
  6148  200004                     	org	2097156
  6149  200004  FF                 	db	255
  6150                           
  6151                           ;Config register IDLOC5 @ 0x200005
  6152                           ;	unspecified, using default values
  6153  200005                     	org	2097157
  6154  200005  FF                 	db	255
  6155                           
  6156                           ;Config register IDLOC6 @ 0x200006
  6157                           ;	unspecified, using default values
  6158  200006                     	org	2097158
  6159  200006  FF                 	db	255
  6160                           
  6161                           ;Config register IDLOC7 @ 0x200007
  6162                           ;	unspecified, using default values
  6163  200007                     	org	2097159
  6164  200007  FF                 	db	255
  6165                           
  6166                           	psect	config
  6167                           
  6168                           ; Padding undefined space
  6169  300000                     	org	3145728
  6170  300000  FF                 	db	255
  6171                           
  6172                           ;Config register CONFIG1H @ 0x300001
  6173                           ;	Oscillator Selection bits
  6174                           ;	OSC = HS, HS oscillator
  6175                           ;	Fail-Safe Clock Monitor Enable bit
  6176                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6177                           ;	Internal/External Oscillator Switchover bit
  6178                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6179  300001                     	org	3145729
  6180  300001  02                 	db	2
  6181                           
  6182                           ;Config register CONFIG2L @ 0x300002
  6183                           ;	Power-up Timer Enable bit
  6184                           ;	PWRT = OFF, PWRT disabled
  6185                           ;	Brown-out Reset Enable bits
  6186                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6187                           ;	Brown Out Reset Voltage bits
  6188                           ;	BORV = 0x2E, user specified literal
  6189  300002                     	org	3145730
  6190  300002  71                 	db	369
  6191                           
  6192                           ;Config register CONFIG2H @ 0x300003
  6193                           ;	Watchdog Timer Enable bit
  6194                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6195                           ;	Watchdog Timer Postscale Select bits
  6196                           ;	WDTPS = 1, 1:1
  6197  300003                     	org	3145731
  6198  300003  00                 	db	0
  6199                           
  6200                           ; Padding undefined space
  6201  300004                     	org	3145732
  6202  300004  FF                 	db	255
  6203                           
  6204                           ;Config register CONFIG3H @ 0x300005
  6205                           ;	CCP2 MUX bit
  6206                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6207                           ;	PORTB A/D Enable bit
  6208                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6209                           ;	Low-Power Timer1 Oscillator Enable bit
  6210                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6211                           ;	MCLR Pin Enable bit
  6212                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6213  300005                     	org	3145733
  6214  300005  83                 	db	131
  6215                           
  6216                           ;Config register CONFIG4L @ 0x300006
  6217                           ;	Stack Full/Underflow Reset Enable bit
  6218                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6219                           ;	Single-Supply ICSP Enable bit
  6220                           ;	LVP = OFF, Single-Supply ICSP disabled
  6221                           ;	Extended Instruction Set Enable bit
  6222                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6223                           ;	Background Debugger Enable bit
  6224                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6225  300006                     	org	3145734
  6226  300006  80                 	db	128
  6227                           
  6228                           ; Padding undefined space
  6229  300007                     	org	3145735
  6230  300007  FF                 	db	255
  6231                           
  6232                           ;Config register CONFIG5L @ 0x300008
  6233                           ;	Code Protection bit
  6234                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6235                           ;	Code Protection bit
  6236                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6237                           ;	Code Protection bit
  6238                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6239                           ;	Code Protection bit
  6240                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6241  300008                     	org	3145736
  6242  300008  0F                 	db	15
  6243                           
  6244                           ;Config register CONFIG5H @ 0x300009
  6245                           ;	Boot Block Code Protection bit
  6246                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6247                           ;	Data EEPROM Code Protection bit
  6248                           ;	CPD = OFF, Data EEPROM not code-protected
  6249  300009                     	org	3145737
  6250  300009  C0                 	db	192
  6251                           
  6252                           ;Config register CONFIG6L @ 0x30000A
  6253                           ;	Write Protection bit
  6254                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6255                           ;	Write Protection bit
  6256                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6257                           ;	Write Protection bit
  6258                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6259                           ;	Write Protection bit
  6260                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6261  30000A                     	org	3145738
  6262  30000A  0F                 	db	15
  6263                           
  6264                           ;Config register CONFIG6H @ 0x30000B
  6265                           ;	Configuration Register Write Protection bit
  6266                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6267                           ;	Boot Block Write Protection bit
  6268                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6269                           ;	Data EEPROM Write Protection bit
  6270                           ;	WRTD = OFF, Data EEPROM not write-protected
  6271  30000B                     	org	3145739
  6272  30000B  E0                 	db	224
  6273                           
  6274                           ;Config register CONFIG7L @ 0x30000C
  6275                           ;	Table Read Protection bit
  6276                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6277                           ;	Table Read Protection bit
  6278                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6279                           ;	Table Read Protection bit
  6280                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6281                           ;	Table Read Protection bit
  6282                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6283  30000C                     	org	3145740
  6284  30000C  0F                 	db	15
  6285                           
  6286                           ;Config register CONFIG7H @ 0x30000D
  6287                           ;	Boot Block Table Read Protection bit
  6288                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6289  30000D                     	org	3145741
  6290  30000D  40                 	db	64
  6291                           tosu	equ	0xFFF
  6292                           tosh	equ	0xFFE
  6293                           tosl	equ	0xFFD
  6294                           stkptr	equ	0xFFC
  6295                           pclatu	equ	0xFFB
  6296                           pclath	equ	0xFFA
  6297                           pcl	equ	0xFF9
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodh	equ	0xFF4
  6303                           prodl	equ	0xFF3
  6304                           indf0	equ	0xFEF
  6305                           postinc0	equ	0xFEE
  6306                           postdec0	equ	0xFED
  6307                           preinc0	equ	0xFEC
  6308                           plusw0	equ	0xFEB
  6309                           fsr0h	equ	0xFEA
  6310                           fsr0l	equ	0xFE9
  6311                           wreg	equ	0xFE8
  6312                           indf1	equ	0xFE7
  6313                           postinc1	equ	0xFE6
  6314                           postdec1	equ	0xFE5
  6315                           preinc1	equ	0xFE4
  6316                           plusw1	equ	0xFE3
  6317                           fsr1h	equ	0xFE2
  6318                           fsr1l	equ	0xFE1
  6319                           bsr	equ	0xFE0
  6320                           indf2	equ	0xFDF
  6321                           postinc2	equ	0xFDE
  6322                           postdec2	equ	0xFDD
  6323                           preinc2	equ	0xFDC
  6324                           plusw2	equ	0xFDB
  6325                           fsr2h	equ	0xFDA
  6326                           fsr2l	equ	0xFD9
  6327                           status	equ	0xFD8

Data Sizes:
    Strings     159
    Constant    26
    Data        7
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      52
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[13]), STR_15(CODE[9]), STR_14(CODE[5]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[9]), STR_9(CODE[5]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[9]), 
		 -> STR_4(CODE[5]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_menu1
    _main->_menu2
    _main->_menu3
    _vap->_ssdDigit
    _status->_ssdDigit
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _menuCtrl->_kpReadKey
    _menu3->_lcdString
    _menu2->_lcdString
    _menu1->_lcdString
    _lcdString->_lcdChar
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _leituraMenu->_kpReadKey
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _InfBoiler->_serialRead
    _InfBoiler->_serialSend

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  472960
                                             23 COMRAM     3     3      0
                          _InfBoiler
                       _digitalWrite
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdString
                        _leituraMenu
                              _menu1
                              _menu2
                              _menu3
                           _menuCtrl
                            _pwmInit
                             _pwmSet
                         _serialInit
                            _ssdInit
                             _status
                              _tempo
                          _timerInit
                         _timerReset
                          _timerWait
                                _vap
 ---------------------------------------------------------------------------------
 (1) _vap                                                  2     2      0    1957
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tempo                                                5     5      0     120
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _status                                               0     0      0    7036
                       _digitalWrite
                             _pwmSet
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     404
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _menuCtrl                                             4     3      1     552
                                              5 COMRAM     4     3      1
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (1) _menu3                                                3     3      0   97189
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _menu2                                                3     3      0   97189
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _menu1                                                3     3      0   97189
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   32661
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdNumber                                            4     2      2   33181
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   31355
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _leituraMenu                                          0     0      0      60
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   69164
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   31061
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   31325
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   30953
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    6296
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   18985
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   18501
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    5916
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    5916
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    5916
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _InfBoiler                                            3     3      0      60
                                              1 COMRAM     3     3      0
                         _serialRead
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialRead                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InfBoiler
     _serialRead
     _serialSend
   _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _leituraMenu
     _kpRead
     _kpReadKey
   _menu1
     _lcdCommand
     _lcdNumber
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _lcdChar
     _lcdString
   _menu2
     _lcdCommand
     _lcdNumber
     _lcdString
   _menu3
     _lcdCommand
     _lcdNumber
     _lcdString
   _menuCtrl
     _kpRead
     _kpReadKey
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _serialInit
   _ssdInit
     _pinMode
     _soInit
   _status
     _digitalWrite
     _pwmSet
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
   _tempo
   _timerInit
   _timerReset
   _timerWait
   _vap
     ___awdiv
     ___awmod
     _ssdDigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      34       1       40.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      15        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 15:58:26 2021

         _pulseEnablePin 1C84             lcdString@msg 000F                       l12 1858  
                     l54 0B56                       l63 1006                       l58 100A  
                     l59 1006                       l88 0908             ___awdiv@sign 0006  
                     _v0 0028                       _v1 0027                       _v2 0026  
                     _v3 0025      ___wmul@multiplicand 0003                      l111 18D0  
                    l105 1F4E                      l130 1D6A                      l125 1128  
                    l141 1F60                      l301 1344                      l150 1CC4  
                    l231 1F22                      l127 1140                      l153 1E8C  
                    l234 1F34                      l322 17DE                      l242 1F04  
                    l147 1D9A                      l315 16AC                      l252 1DF0  
                    l260 1C82                      l156 1ADE                      l308 1746  
                    l173 1BE2                      l182 14BC                      l334 0D0A  
                    l342 0D0A                      l502 1F36                      l239 1DC6  
                    l255 1E1A                      l159 1EEA                      l167 1ECC  
                    l511 1F56                      l424 1A84                      l417 1612  
                    l249 1D02                      l505 1F44                      l530 1F1E  
                    l179 19B8                      l427 1C34                      l292 1344  
                    l524 1A24                      l508 1EAE                      l527 1E66  
                    l634 124C                      l555 1E40                      l475 1B36  
                    l488 1B8C                      l786 1408                      l799 156C  
                    _PR2 000FCB                      u800 1DAE                      u801 1DAA  
                    u810 1DC0                      u811 1DBC                      u750 189A  
                    u751 1896                      u760 18CE                      u744 187A  
                    u761 18CA                      u745 1874                      u860 17FE  
                    u861 17FA                      u790 1F30                      u870 1816  
                    u791 1F2C                      u871 1812                      u880 182E  
                    u881 182A                      u890 1858                      u891 1854  
                    _aux 001D                      _lev 0032                      _vap 1BE4  
           ___awmod@sign 000E                      wreg 000FE8                     l1053 1944  
                   l1046 193C                     l2200 09D0                     l2210 0A6A  
                   l2202 09F2                     l3010 0E68                     l3020 15E4  
                   l2220 0AFE                     l2212 0A86                     l2204 0A0E  
                   l2300 1D7C                     l3012 0CF4                     l2222 0B18  
                   l2214 0AA0                     l2206 0A28                     l2230 1C36  
                   l2302 1EB2                     l3014 17C8                     l2224 0B38  
                   l2216 0AC0                     l2208 0A48                     l2240 1C66  
                   l2232 1C4A                     l2400 14BE                     l2304 1EC0  
                   l3016 1696                     l2320 1168                     l2312 1142  
                   l3008 0E02                     l2218 0AE2                     l2226 1DC8  
                   l2242 1C6C                     l2250 1C98                     l2410 14EA  
                   l2402 14C2                     l3018 1730                     l2330 11B0  
                   l2322 1176                     l2314 1146                     l2306 1E1C  
                   l2228 1DF2                     l2244 1C6E                     l2260 06EA  
                   l2252 1CA4                     l2500 1E6A                     l1540 185A  
                   l2420 1522                     l2412 14F2                     l2404 14D0  
                   l2340 11FA                     l2332 11B8                     l2324 1186  
                   l2316 1154                     l2308 1E38                     l2190 0938  
                   l2246 1C7E                     l2238 1C4E                     l2270 077E  
                   l2262 070A                     l2254 1A88                     l2502 1ED0  
                   l2430 155C                     l2422 1538                     l2414 1504  
                   l2406 14D8                     l2510 1BBA                     l2350 122C  
                   l2342 120A                     l2334 11C4                     l2326 118A  
                   l2318 1164                     l1710 1EEC                     l1630 17EE  
                   l2192 0958                     l2280 081C                     l2272 07A4  
                   l2264 072C                     l2256 06BC                     l2248 1C84  
                   l1552 18AE                     l2600 128A                     l2360 1358  
                   l2432 1564                     l2424 1540                     l2416 150C  
                   l2408 14DC                     l2512 1946                     l2504 1B8E  
                   l2352 123C                     l2344 120C                     l2336 11D2  
                   l2328 119A                     l1712 1F00                     l2440 18EC  
                   l2520 1AF2                     l1640 181A                     l2194 097A  
                   l2186 090A                     l2290 08B0                     l2282 0838  
                   l2274 07C0                     l2266 0748                     l2258 06D8  
                   l1554 18B2                     l1546 1862                     l2610 12C4  
                   l2602 1290                     l2370 137E                     l2362 1360  
                   l2426 1546                     l2418 1514                     l2514 1952  
                   l2506 1B9A                     l2346 1216                     l2338 11DC  
                   l1714 1F02                     l2450 1926                     l2442 18F4  
                   l2530 1B20                     l2522 1AF6                     l1650 1838  
                   l1642 181E                     l1634 1802                     l1626 17E2  
                   l1580 1F22                     l1900 159C                     l2460 0EBE  
                   l2196 0996                     l2188 0926                     l2292 08C2  
                   l2284 084A                     l2276 07D2                     l2268 075A  
                   l1556 18CE                     l1548 189A                     l2620 130A  
                   l2612 12D6                     l2604 12A2                     l2380 13B6  
                   l2372 1386                     l2364 1364                     l2356 1346  
                   l2428 154C                     l2516 199E                     l2508 1BB6  
                   l2348 121C                     l2452 192E                     l2444 18FC  
                   l2436 18D2                     l2540 19FE                     l2532 1B32  
                   l2524 1B06                     l1636 1806                     l1628 17EA  
                   l1660 1846                     l1590 1DB2                     l1582 1F30  
                   l1910 15C4                     l1902 15A6                     l2198 09B0  
                   l2294 08E6                     l2286 086E                     l2278 07F6  
                   l2622 131A                     l2614 12E6                     l2606 12B2  
                   l2390 13E2                     l2382 13BC                     l2374 1398  
                   l2366 1372                     l2358 134A                     l2630 16B0  
                   l2702 17B4                     l2710 0B76                     l2454 1930  
                   l2446 190A                     l2438 18DA                     l2542 1A16  
                   l2534 19BC                     l2526 1B0A                     l2518 1AE2  
                   l1646 1832                     l1654 183E                     l1592 1DC0  
                   l1584 1D9C                     l1912 15CA                     l1904 15AC  
                   l2560 10F6                     l2552 103C                     l2288 0894  
                   l2296 1D6C                     l2624 131C                     l2616 12F6  
                   l2608 12C2                     l2384 13D2                     l2376 13A0  
                   l2392 13E8                     l2368 137A                     l2640 16E2  
                   l2632 16B4                     l2720 0BC2                     l2712 0B82  
                   l2544 1E42                     l2456 1936                     l2448 1910  
                   l2536 19DA                     l2528 1B1C                     l2800 1E9C  
                   l1594 1DC4                     l1586 1DA0                     l1906 15B4  
                   l2490 0FBE                     l2482 0F76                     l2474 0F2E  
                   l2466 0EE6                     l2458 0EA2                     l2570 1120  
                   l2554 1088                     l2546 100C                     l2298 1D78  
                   l2626 132E                     l2618 12F8                     l2394 13F8  
                   l2386 13DA                     l2378 13A8                     l2642 16EE  
                   l2634 16BA                     l2650 171C                     l2730 0C1A  
                   l2722 0BD8                     l2714 0B96                     l2538 19F6  
                   l1658 1844                     l2802 1EA4                     l1588 1DAE  
                   l1908 15BA                     l1916 15D0                     l2492 0FDA  
                   l2484 0F92                     l2476 0F4A                     l2468 0F02  
                   l2572 1138                     l2556 10AE                     l2564 10FE  
                   l2548 101C                     l2580 146A                     l2628 133E  
                   l2396 1400                     l2388 13DC                     l2644 1700  
                   l2636 16C6                     l2660 1620                     l2740 0C5C  
                   l2732 0C22                     l2724 0BE0                     l2716 0BA0  
                   l2708 0B5A                     l2804 1EA8                     l2566 1116  
                   l2558 10CC                     l2574 1D3A                     l2590 14B0  
                   l2582 1476                     l2646 170C                     l2638 16DC  
                   l2670 1666                     l2662 162C                     l2750 0CAC  
                   l2742 0C6E                     l2734 0C34                     l2726 0BF2  
                   l2718 0BB2                     l1950 1F50                     l2806 1EAC  
                   l2910 0E34                     l2902 0DEE                     l2568 111C  
                   l2576 1D66                     l2592 14B6                     l2584 1490  
                   l2496 1F46                     l2672 1672                     l2664 1642  
                   l2656 1616                     l2752 0CB6                     l2744 0C7E  
                   l2736 0C46                     l2728 0C04                     l2760 0CE0  
                   l1952 1F54                     l2920 0E4C                     l2912 0E38  
                   l2904 0E20                     l1890 1574                     l2498 1CC6  
                   l2586 149E                     l2578 140A                     l2594 124E  
                   l2666 1648                     l2658 161A                     l2690 1776  
                   l2682 174A                     l2754 0CC8                     l2746 0C88  
                   l2738 0C56                     l2770 1A52                     l2914 0E40  
                   l2906 0E28                     l2588 14AA                     l2596 126A  
                   l2668 1654                     l2676 1682                     l2692 177C  
                   l2684 174E                     l2756 0CDA                     l2748 0C9A  
                   l2772 1A70                     l2780 1BE4                     l2916 0E44  
                   l2908 0E2C                     l2924 0E54                     l2860 0D0C  
                   l1894 1588                     l2598 1276                     l2694 1788  
                   l2686 1754                     l2790 1F0E                     l2774 1A7A  
                   l2766 1A26                     l2782 1C16                     l2926 0E96  
                   l2870 0D24                     l2862 0D14                     l1896 158E  
                   l1888 156E                     l2696 179A                     l2688 1760  
                   l2792 1F12                     l2784 1F06                     l2776 1A80  
                   l2768 1A3C                     l1968 1F36                     l2880 0D44  
                   l2872 0D28                     l2864 0D18                     l1898 1596  
                   l2698 17A4                     l2786 1F08                     l2794 1B38  
                   l2778 1BE4                     l2890 0D9A                     l2882 0D4A  
                   l2874 0D2C                     l2866 0D1C                     l2788 1F0C  
                   l2796 1E8E                     l2892 0DAA                     l2884 0D5E  
                   l2876 0D32                     l2868 0D20                     l2798 1E98  
                   l2894 0DB2                     l2886 0D72                     l2878 0D3E  
                   l2896 0DC6                     l2888 0D86                     l2898 0DDA  
                   ?_vap 0001                     STR_1 0681                     STR_2 061B  
                   STR_3 064E                     STR_4 0627                     STR_5 06A8  
                   STR_6 0670                     STR_7 061B                     STR_8 062C  
                   STR_9 0627                     u2000 1504                     u2001 1500  
                   u2010 1522                     u2011 151E                     u2020 1538  
                   u1300 1F44                     u2021 1534                     u1301 1F40  
                   u2110 0F4A                     u2030 155C                     u2111 0F46  
                   u2031 1558                     u2104 0F18                     u2040 18EC  
                   u2200 1B06                     u2105 0F14                     u2041 18E8  
                   u2201 1B02                     u2130 0F92                     u2050 190A  
                   u2210 1B1C                     u2131 0F8E                     u2051 1906  
                   u2211 1B18                     u2124 0F60                     u2300 1138  
                   u2060 1926                     u2220 1B32                     u2125 0F5C  
                   u2301 1134                     u2061 1922                     u2221 1B2E  
                   u1270 1584                     u2150 0FDA                     u2070 0EBE  
                   u2230 1038                     u2310 126A                     u1271 1580  
                   u2151 0FD6                     u2071 0EBA                     u2231 1034  
                   u2311 1266                     u2144 0FA8                     u1600 0AFE  
                   u1520 0A0E                     u1504 09C2                     u1440 0926  
                   u2400 131A                     u2320 128A                     u2145 0FA4  
                   u1601 0AFA                     u1521 0A0A                     u1505 09BE  
                   u1441 0922                     u2401 1316                     u2321 1286  
                   u2090 0F02                     u1610 0B18                     u1530 0A28  
                   u1514 09E2                     u1450 0938                     u2250 1088  
                   u2410 132E                     u2330 12A2                     u2170 1BE2  
                   u2091 0EFE                     u1611 0B14                     u1531 0A24  
                   u1515 09DE                     u1451 0934                     u2251 1084  
                   u2411 132A                     u2331 129E                     u2171 1BDE  
                   u2164 0FF0                     u2084 0ED0                     u2244 1058  
                   u1700 075A                     u2420 133E                     u2340 12B2  
                   u2180 19B8                     u2500 0C1A                     u2165 0FEC  
                   u2085 0ECC                     u2245 1052                     u1701 0756  
                   u2421 133A                     u2341 12AE                     u2181 19B4  
                   u2501 0C16                     u2270 10CC                     u2350 12C2  
                   u2510 0C34                     u2430 0B76                     u2190 1AF2  
                   u2271 10C8                     u2351 12BE                     u2511 0C30  
                   u2431 0B72                     u2191 1AEE                     u1624 0B2A  
                   u1560 0A86                     u1544 0A3A                     u1480 0996  
                   u1464 094A                     u1640 1C7E                     u2264 10A0  
                   u2360 12D6                     u2520 0C46                     u2440 0B96  
                   u2600 1A3C                     u1625 0B26                     u1561 0A82  
                   u1545 0A36                     u1481 0992                     u1465 0946  
                   u1641 1C7A                     u2265 109A                     u2361 12D2  
                   u2521 0C42                     u2441 0B92                     u2601 1A38  
                   u1634 0B4A                     u1570 0AA0                     u1554 0A5A  
                   u1490 09B0                     u1474 096A                     u2290 1116  
                   u1810 08B0                     u1730 07C0                     u1714 0770  
                   u1650 06D8                     u2370 12E6                     u2530 0C56  
                   u2450 0BB2                     u2610 1A52                     u1635 0B46  
                   u1571 0A9C                     u1555 0A56                     u1491 09AC  
                   u1475 0966                     u2291 1112                     u1811 08AC  
                   u1731 07BC                     u1715 076C                     u1651 06D4  
                   u2371 12E2                     u2531 0C52                     u2451 0BAE  
                   u2611 1A4E                     u2284 10E8                     u1820 08C2  
                   u1804 0884                     u1740 07D2                     u1724 0794  
                   u1660 06EA                     u2380 12F6                     u2540 0C6E  
                   u2460 0BC2                     u1900 11FA                     u2285 10E2  
                   u1821 08BE                     u1805 0880                     u1741 07CE  
                   u1725 0790                     u1661 06E6                     u2381 12F2  
                   u2541 0C6A                     u2461 0BBE                     u1901 11F6  
                   u2390 130A                     u2550 0C7E                     u2470 0BD8  
                   u1910 122C                     u2391 1306                     u2551 0C7A  
                   u2471 0BD4                     u1911 1228                     u1584 0AB2  
                   u1920 1358                     u2560 0C9A                     u2480 0BF2  
                   u1585 0AAE                     u1921 1354                     u2561 0C96  
                   u2481 0BEE                     u1594 0AD2                     u1834 08D8  
                   u1770 0838                     u1754 07E8                     u1690 0748  
                   u1674 06FC                     u1850 1D9A                     u1930 1372  
                   u2570 0CAC                     u2490 0C04                     u1595 0ACE  
                   u1835 08D4                     u1771 0834                     u1755 07E4  
                   u1691 0744                     u1675 06F8                     u1851 1D96  
                   u1931 136E                     u2571 0CA8                     u2491 0C00  
                   u1844 08FC                     u1780 084A                     u1764 080C  
                   u1684 071C                     u1940 1398                     u2580 0CC8  
                   u1860 1154                     u1845 08F8                     u1781 0846  
                   u1765 0808                     u1685 0718                     u1941 1394  
                   u2581 0CC4                     u1861 1150                     u1950 13B6  
                   u2590 0CDA                     u1870 1176                     u1951 13B2  
                   u2591 0CD6                     u1871 1172                     u1960 13D2  
                   u1880 11B0                     u1961 13CE                     u1881 11AC  
                   u1794 0860                     u1970 13F8                     u1890 11D2  
                   u1795 085C                     u1971 13F4                     u1891 11CE  
                   u1980 14D0                     u1981 14CC                     u1990 14EA  
                   u1991 14E6                     _PIR1 000F9E                     _aux2 001B  
                   _flag 002A                     _main 0D0C                     _ctrl 002B  
                   _keys 0023         ??_PulseClockData 0007                     _temp 002E  
                   _pres 0030                     fsr1l 000FE1                     prodh 000FF4  
                   prodl 000FF3                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1CC6           pwmSet@porcento 000A  
                  ??_vap 0011          __end_of___aldiv 124E                    ?_main 0001  
        __end_of___awdiv 140A                    STR_10 06B1                    STR_11 063D  
                  STR_12 061B                    STR_13 065F                    STR_14 0627  
                  STR_15 069F                    STR_16 0692          __end_of___awmod 156E  
           ?_leituraMenu 0001                    _T0CON 000FD5          ___awdiv@divisor 0003  
                  _T2CON 000FCA          __end_of___lwdiv 1946          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_lcdChar 1ECE          __end_of_lcdInit 14BE                    _menu1 16AE  
                  _count 002C                    _menu2 1614                    _menu3 1748  
        __end_of_pinMode 090A                    _valor 0601                    _tempo 17E0  
        __end_of_soWrite 1C84                    tablat 000FF5          __end_of_ssdInit 1B8E  
        __end_of_pwmInit 1F20                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 0B58          __initialization 1D04          ?_pulseEnablePin 0001  
           __end_of_main 0EA2                   ??_main 0018            __activetblptr 000002  
   __size_of_digitalRead 016A       __size_of_InfBoiler 00A6                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_menu1 0001  
                 ?_menu2 0001                   ?_menu3 0001                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000FBB         ___awdiv@dividend 0001  
                 ?_tempo 0001                   _INTCON 000FF2                   _SPBRGH 000FB0  
              ??___aldiv 0009                   ___wmul 1E1C                ??___awdiv 0005  
              ??___awmod 000D                ??___lwdiv 0005                   _kpInit 1D3A  
                 _kpRead 1F46         __end_of_menuCtrl 0D0C                   clear_0 1D2A  
                 _soInit 1CC6         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdChar 000E                   isa$std 000001                ??_lcdInit 000F  
                 _pwmSet 19BA          ___awmod@counter 000D                   _status 1A26  
       __end_of_ssdDigit 1B38             __pdataCOMRAM 002E                ??_pinMode 0005  
           menu1@subMenu 0017             __mediumconst 0000          menuCtrl@menuNum 0009  
                 tempo@i 0003                   tempo@j 0004             menu2@subMenu 0017  
                 tempo@k 0005                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0009                ??_ssdInit 0007  
              ??_pwmInit 0011         __end_of_pushByte 1AE0             menu3@subMenu 0017  
        menuCtrl@subMenu 0006               __accesstop 0080  __end_of__initialization 1D30  
          ___rparam_used 000001            pushByte@value 000D        __end_of_InfBoiler 1614  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_menu1 1748  
          __end_of_menu2 16AE            __end_of_menu3 17E0            __end_of_valor 0611  
          __end_of_tempo 185A       __size_of_delayMili 0030       __size_of_lcdNumber 0074  
   __size_of_leituraMenu 00F8       __size_of_lcdString 0056       __size_of_kpReadKey 0078  
                ??_menu1 0015                  ??_menu2 0015                  ??_menu3 0015  
                ??_tempo 0001    __size_of_digitalWrite 024E               _delayMicro 1F60  
             _lcdCommand 1ECE                  ?___wmul 0001                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  _BAUDCON 000FB8  
                ?_soInit 0001               _kpDebounce 100C                  ?_pwmSet 0001  
                ?_status 0001       __size_of_timerInit 0008       __size_of_timerWait 0010  
           _digitalWrite 090A        __end_of_delayMili 1D9C                ?_menuCtrl 0006  
       ??_pulseEnablePin 0007                  __Hparam 0000        __end_of_lcdNumber 19BA  
                __Lparam 0000                ?_ssdDigit 000F        __end_of_lcdString 1BE4  
        kpDebounce@tempo 002D                  ___aldiv 1142        __end_of_kpReadKey 18D2  
                ___awdiv 1346                  ___awmod 14BE                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 18D2             __psmallconst 0600  
        __size_of_kpInit 0032          __size_of_kpRead 000A                  _charKey 0611  
            ssdDigit@val 0010              ssdDigit@pos 000F                  __pcinit 1D04  
         serialRead@resp 0001                  _lcdChar 1EB0                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 140A                  __ptext0 0D0C  
                __ptext1 1BE4                  __ptext2 1F36                  __ptext3 1E8E  
                __ptext4 1F50                  __ptext5 17E0                  __ptext6 1A26  
                __ptext7 1AE0                  __ptext8 19BA                  __ptext9 1E1C  
        __size_of_pwmSet 006C                  _display 0029          __size_of_status 0060  
                _menuNum 0034             __size_of_vap 0052                  _pinMode 06BC  
       ___awmod@dividend 0009              serialSend@c 0001         ___aldiv@dividend 0001  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 1C36  
                _ssdInit 1B38                  _subMenu 0033                  _pwmInit 1F06  
   end_of_initialization 1D30            ?_PulseEnClock 0001               ??_menuCtrl 0007  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_timerInit 1F58        __end_of_timerWait 1F46  
             _serialInit 1EEC               _serialRead 1D9C               ??_ssdDigit 0010  
             _serialSend 1F20         ___aldiv@quotient 000B                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003               _timerReset 1E8E  
            ?_kpDebounce 0001               lcdNumber@i 0011               _pushNibble 1E68  
             lcdString@i 0013           ??_PulseEnClock 0007           ??_pwmFrequency 0011  
             kpReadKey@i 0004                _InfBoiler 156E           __end_of___wmul 1E42  
          __pidataCOMRAM 1F58           __end_of_kpInit 1D6C           __end_of_kpRead 1F50  
         __end_of_soInit 1D04           __end_of_pwmSet 1A26           __end_of_status 1A86  
    __size_of_delayMicro 0002      start_initialization 1D04      __end_of_digitalRead 100C  
            __end_of_vap 1C36      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
            ?_serialInit 0001              ?_serialRead 0001              ?_serialSend 0001  
      kpDebounce@oldRead 001F        kpDebounce@newRead 0021                 ??___wmul 0005  
               ??_kpInit 0007                 ??_kpRead 0003               ?_InfBoiler 0001  
            ?_timerReset 0001                 ??_soInit 0007                 ??_pwmSet 0008  
               ??_status 0011            ??_leituraMenu 0006              __pbssCOMRAM 001B  
            ?_pushNibble 000A               pinMode@pin 0001        __size_of_menuCtrl 01B4  
              _delayMili 1D6C         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 1DF2                _lcdNumber 1946                 ?___lwdiv 0001  
   __end_of_PulseEnClock 1DF2                _lcdString 1B8E              _digitalRead 0EA2  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
              _kpReadKey 185A     __end_of_pwmFrequency 1E68              __smallconst 0600  
               ?_pinMode 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
               ?_pwmInit 0001      __size_of_serialInit 001A      __size_of_serialRead 002C  
    __size_of_serialSend 0016         ___lwdiv@quotient 0005      __end_of_leituraMenu 1346  
         __size_of_menu1 009A           __size_of_menu2 009A           __size_of_menu3 0098  
         __size_of_tempo 007A         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009      __size_of_timerReset 0022           ___wmul@product 0005  
           ??_delayMicro 0003               tempo@tempX 0001               ?_delayMili 0001  
 __end_of_PulseClockData 1E1C      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _timerInit 1F50                _timerWait 1F36               ?_lcdNumber 000F  
            ??_InfBoiler 0002               ?_lcdString 000F             ??_kpDebounce 000A  
             ?_kpReadKey 0001        ___wmul@multiplier 0001          lcdCommand@value 000E  
     __end_of_delayMicro 1F62         timerReset@ciclos 0003                copy_data0 1D18  
     __end_of_lcdCommand 1EEC               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 1142                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
       __size_of___aldiv 010C         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042           lcdNumber@value 000F         __size_of___lwdiv 0074  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4              _leituraMenu 124E  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 18D2                 __ptext11 1B38                 __ptext20 1B8E  
               __ptext12 1EEC                 __ptext21 1946                 __ptext13 1F06  
               __ptext30 1ECE                 __ptext22 1EB0                 __ptext14 1E42  
               __ptext31 1A86                 __ptext23 14BE                 __ptext15 1142  
               __ptext40 1DC8                 __ptext32 1C84                 __ptext24 1346  
               __ptext16 0B58                 __ptext41 1DF2                 __ptext33 1F60  
               __ptext25 124E                 __ptext17 1748                 __ptext42 090A  
               __ptext34 1D6C                 __ptext26 185A                 __ptext18 1614  
               __ptext43 0EA2                 __ptext35 1D3A                 __ptext27 1F46  
               __ptext19 16AE                 __ptext44 156E                 __ptext36 1CC6  
               __ptext28 140A                 __ptext45 1F20                 __ptext37 06BC  
               __ptext29 1E68                 __ptext46 1D9C                 __ptext38 100C  
               __ptext39 1C36         __size_of_soWrite 004E         __size_of_ssdInit 0056  
       __size_of_pwmInit 001A                 _menuCtrl 0B58            __size_of_main 0196  
            ??_delayMili 0003             ??_serialInit 0001             ??_serialRead 0001  
  __size_of_PulseEnClock 002A             InfBoiler@cmd 0004             ??_serialSend 0001  
               _ssdDigit 1AE0              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007    __size_of_pwmFrequency 0026                 _pushByte 1A86  
            ??_lcdNumber 0011                pwmSet@val 000B              ??_lcdString 0011  
           ??_timerReset 0003                 main@slot 001A              ??_kpReadKey 0001  
        timerReset@tempo 0001             ??_pushNibble 000C            ?_digitalWrite 0001  
     __end_of_serialInit 1F06       __end_of_serialRead 1DC8       __end_of_serialSend 1F36  
           _PulseEnClock 1DC8        digitalWrite@value 0003       __end_of_timerReset 1EB0  
           _pwmFrequency 1E42                 soWrite@i 0009                 tempo@aux 0002  
            ??_timerInit 0001              ??_timerWait 0001       __end_of_pushNibble 1E8E  
           ?_digitalRead 0001              kpDebounce@i 000D           ??_digitalWrite 0005  
           ___aldiv@sign 000A          digitalWrite@pin 0001  
