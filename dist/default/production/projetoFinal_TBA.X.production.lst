

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 21:35:05 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4520 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001E1E                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _temp
   100  001E1E  00FA               	dw	250
   101                           
   102                           ;initializer for _pres
   103  001E20  000F               	dw	15
   104                           
   105                           ;initializer for _lev
   106  001E22  50                 	db	80
   107                           
   108                           ;initializer for _subMenu
   109  001E23  01                 	db	1
   110                           
   111                           ;initializer for _menuNum
   112  001E24  01                 	db	1
   113                           
   114                           	psect	smallconst
   115  000600                     __psmallconst:
   116                           	callstack 0
   117  000600  00                 	db	0
   118  000601                     _valor:
   119                           	callstack 0
   120  000601  3F                 	db	63
   121  000602  06                 	db	6
   122  000603  5B                 	db	91
   123  000604  4F                 	db	79
   124  000605  66                 	db	102
   125  000606  6D                 	db	109
   126  000607  7D                 	db	125
   127  000608  07                 	db	7
   128  000609  7F                 	db	127
   129  00060A  6F                 	db	111
   130  00060B  77                 	db	119
   131  00060C  7C                 	db	124
   132  00060D  39                 	db	57
   133  00060E  5E                 	db	94
   134  00060F  79                 	db	121
   135  000610  71                 	db	113
   136  000611                     __end_of_valor:
   137                           	callstack 0
   138  000611                     _charKey:
   139                           	callstack 0
   140  000611  55                 	db	85
   141  000612  4C                 	db	76
   142  000613  44                 	db	68
   143  000614  52                 	db	82
   144  000615  53                 	db	83
   145  000616  58                 	db	88
   146  000617  41                 	db	65
   147  000618  42                 	db	66
   148  000619  59                 	db	89
   149  00061A  73                 	db	115
   150  00061B                     __end_of_charKey:
   151                           	callstack 0
   152  0000                     _ADRESL	set	4035
   153  0000                     _ADRESH	set	4036
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON0	set	4034
   156  0000                     _T2CON	set	4042
   157  0000                     _CCP2CON	set	4026
   158  0000                     _CCPR2L	set	4027
   159  0000                     _PR2	set	4043
   160  0000                     _T0CON	set	4053
   161  0000                     _TMR0L	set	4054
   162  0000                     _TMR0H	set	4055
   163  0000                     _INTCON	set	4082
   164  0000                     _SPBRG	set	4015
   165  0000                     _SPBRGH	set	4016
   166  0000                     _BAUDCON	set	4024
   167  0000                     _TXSTA	set	4012
   168  0000                     _RCREG	set	4014
   169  0000                     _RCSTA	set	4011
   170  0000                     _TXREG	set	4013
   171  0000                     _PIR1	set	3998
   172  0000                     _ADCON1	set	4033
   173  0000                     _TRISE	set	3990
   174  0000                     _TRISD	set	3989
   175  0000                     _TRISC	set	3988
   176  0000                     _TRISB	set	3987
   177  0000                     _TRISA	set	3986
   178  0000                     _PORTE	set	3972
   179  0000                     _PORTD	set	3971
   180  0000                     _PORTC	set	3970
   181  0000                     _PORTB	set	3969
   182  0000                     _PORTA	set	3968
   183  00061B                     STR_2:
   184  00061B  20                 	db	32
   185  00061C  20                 	db	32
   186  00061D  20                 	db	32
   187  00061E  20                 	db	32
   188  00061F  20                 	db	32
   189  000620  20                 	db	32
   190  000621  20                 	db	32
   191  000622  20                 	db	32
   192  000623  20                 	db	32
   193  000624  20                 	db	32
   194  000625  20                 	db	32
   195  000626  20                 	db	32
   196  000627  20                 	db	32
   197  000628  20                 	db	32
   198  000629  20                 	db	32
   199  00062A  20                 	db	32
   200  00062B  00                 	db	0
   201  00062C                     STR_8:
   202  00062C  20                 	db	32
   203  00062D  20                 	db	32
   204  00062E  20                 	db	32
   205  00062F  20                 	db	32
   206  000630  50                 	db	80	;'P'
   207  000631  72                 	db	114	;'r'
   208  000632  65                 	db	101	;'e'
   209  000633  73                 	db	115	;'s'
   210  000634  73                 	db	115	;'s'
   211  000635  61                 	db	97	;'a'
   212  000636  6F                 	db	111	;'o'
   213  000637  3A                 	db	58	;':'
   214  000638  20                 	db	32
   215  000639  20                 	db	32
   216  00063A  20                 	db	32
   217  00063B  20                 	db	32
   218  00063C  00                 	db	0
   219  00063D                     STR_11:
   220  00063D  3C                 	db	60	;'<'
   221  00063E  20                 	db	32
   222  00063F  20                 	db	32
   223  000640  4E                 	db	78	;'N'
   224  000641  69                 	db	105	;'i'
   225  000642  76                 	db	118	;'v'
   226  000643  65                 	db	101	;'e'
   227  000644  6C                 	db	108	;'l'
   228  000645  20                 	db	32
   229  000646  41                 	db	65	;'A'
   230  000647  67                 	db	103	;'g'
   231  000648  75                 	db	117	;'u'
   232  000649  61                 	db	97	;'a'
   233  00064A  20                 	db	32
   234  00064B  20                 	db	32
   235  00064C  20                 	db	32
   236  00064D  00                 	db	0
   237  00064E                     STR_3:
   238  00064E  20                 	db	32
   239  00064F  20                 	db	32
   240  000650  54                 	db	84	;'T'
   241  000651  65                 	db	101	;'e'
   242  000652  6D                 	db	109	;'m'
   243  000653  70                 	db	112	;'p'
   244  000654  65                 	db	101	;'e'
   245  000655  72                 	db	114	;'r'
   246  000656  61                 	db	97	;'a'
   247  000657  74                 	db	116	;'t'
   248  000658  75                 	db	117	;'u'
   249  000659  72                 	db	114	;'r'
   250  00065A  61                 	db	97	;'a'
   251  00065B  3A                 	db	58	;':'
   252  00065C  20                 	db	32
   253  00065D  20                 	db	32
   254  00065E  00                 	db	0
   255  00065F                     STR_13:
   256  00065F  20                 	db	32
   257  000660  20                 	db	32
   258  000661  20                 	db	32
   259  000662  4E                 	db	78	;'N'
   260  000663  69                 	db	105	;'i'
   261  000664  76                 	db	118	;'v'
   262  000665  65                 	db	101	;'e'
   263  000666  6C                 	db	108	;'l'
   264  000667  20                 	db	32
   265  000668  41                 	db	65	;'A'
   266  000669  67                 	db	103	;'g'
   267  00066A  75                 	db	117	;'u'
   268  00066B  61                 	db	97	;'a'
   269  00066C  3A                 	db	58	;':'
   270  00066D  20                 	db	32
   271  00066E  20                 	db	32
   272  00066F  00                 	db	0
   273  000670                     STR_6:
   274  000670  3C                 	db	60	;'<'
   275  000671  20                 	db	32
   276  000672  20                 	db	32
   277  000673  20                 	db	32
   278  000674  20                 	db	32
   279  000675  50                 	db	80	;'P'
   280  000676  72                 	db	114	;'r'
   281  000677  65                 	db	101	;'e'
   282  000678  73                 	db	115	;'s'
   283  000679  73                 	db	115	;'s'
   284  00067A  61                 	db	97	;'a'
   285  00067B  6F                 	db	111	;'o'
   286  00067C  20                 	db	32
   287  00067D  20                 	db	32
   288  00067E  20                 	db	32
   289  00067F  3E                 	db	62	;'>'
   290  000680  00                 	db	0
   291  000681                     STR_1:
   292  000681  20                 	db	32
   293  000682  20                 	db	32
   294  000683  54                 	db	84	;'T'
   295  000684  65                 	db	101	;'e'
   296  000685  6D                 	db	109	;'m'
   297  000686  70                 	db	112	;'p'
   298  000687  65                 	db	101	;'e'
   299  000688  72                 	db	114	;'r'
   300  000689  61                 	db	97	;'a'
   301  00068A  74                 	db	116	;'t'
   302  00068B  75                 	db	117	;'u'
   303  00068C  72                 	db	114	;'r'
   304  00068D  61                 	db	97	;'a'
   305  00068E  20                 	db	32
   306  00068F  20                 	db	32
   307  000690  3E                 	db	62	;'>'
   308  000691  00                 	db	0
   309  000692                     STR_16:
   310  000692  49                 	db	73	;'I'
   311  000693  6E                 	db	110	;'n'
   312  000694  69                 	db	105	;'i'
   313  000695  63                 	db	99	;'c'
   314  000696  69                 	db	105	;'i'
   315  000697  61                 	db	97	;'a'
   316  000698  6E                 	db	110	;'n'
   317  000699  64                 	db	100	;'d'
   318  00069A  6F                 	db	111	;'o'
   319  00069B  2E                 	db	46
   320  00069C  2E                 	db	46
   321  00069D  2E                 	db	46
   322  00069E  00                 	db	0
   323  00069F                     STR_15:
   324  00069F  20                 	db	32
   325  0006A0  25                 	db	37
   326  0006A1  20                 	db	32
   327  0006A2  20                 	db	32
   328  0006A3  20                 	db	32
   329  0006A4  20                 	db	32
   330  0006A5  20                 	db	32
   331  0006A6  20                 	db	32
   332  0006A7  00                 	db	0
   333  0006A8                     STR_5:
   334  0006A8  20                 	db	32
   335  0006A9  BA                 	db	-70
   336  0006AA  43                 	db	67	;'C'
   337  0006AB  20                 	db	32
   338  0006AC  20                 	db	32
   339  0006AD  20                 	db	32
   340  0006AE  20                 	db	32
   341  0006AF  20                 	db	32
   342  0006B0  00                 	db	0
   343  0006B1                     STR_10:
   344  0006B1  20                 	db	32
   345  0006B2  62                 	db	98	;'b'
   346  0006B3  61                 	db	97	;'a'
   347  0006B4  72                 	db	114	;'r'
   348  0006B5  20                 	db	32
   349  0006B6  20                 	db	32
   350  0006B7  20                 	db	32
   351  0006B8  20                 	db	32
   352  0006B9  00                 	db	0
   353  0006BA  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           ; #config settings
   356                           
   357                           	psect	cinit
   358  001BCA                     __pcinit:
   359                           	callstack 0
   360  001BCA                     start_initialization:
   361                           	callstack 0
   362  001BCA                     __initialization:
   363                           	callstack 0
   364                           
   365                           ; Initialize objects allocated to COMRAM (7 bytes)
   366                           ; load TBLPTR registers with __pidataCOMRAM
   367  001BCA  0E1E               	movlw	low __pidataCOMRAM
   368  001BCC  6EF6               	movwf	tblptrl,c
   369  001BCE  0E1E               	movlw	high __pidataCOMRAM
   370  001BD0  6EF7               	movwf	tblptrh,c
   371  001BD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   372  001BD4  6EF8               	movwf	tblptru,c
   373  001BD6  EE00  F02D         	lfsr	0,__pdataCOMRAM
   374  001BDA  EE10 F007          	lfsr	1,7
   375  001BDE                     copy_data0:
   376  001BDE  0009               	tblrd		*+
   377  001BE0  CFF5 FFEE          	movff	tablat,postinc0
   378  001BE4  50E5               	movf	postdec1,w,c
   379  001BE6  50E1               	movf	fsr1l,w,c
   380  001BE8  E1FA               	bnz	copy_data0
   381                           
   382                           ; Clear objects allocated to COMRAM (18 bytes)
   383  001BEA  EE00  F01B         	lfsr	0,__pbssCOMRAM
   384  001BEE  0E12               	movlw	18
   385  001BF0                     clear_0:
   386  001BF0  6AEE               	clrf	postinc0,c
   387  001BF2  06E8               	decf	wreg,f,c
   388  001BF4  E1FD               	bnz	clear_0
   389  001BF6                     end_of_initialization:
   390                           	callstack 0
   391  001BF6                     __end_of__initialization:
   392                           	callstack 0
   393  001BF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   394  001BF8  6EF8               	movwf	tblptru,c
   395  001BFA  0100               	movlb	0
   396  001BFC  EFD6  F007         	goto	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMRAM
   399  00001B                     __pbssCOMRAM:
   400                           	callstack 0
   401  00001B                     _aux2:
   402                           	callstack 0
   403  00001B                     	ds	2
   404  00001D                     _aux:
   405                           	callstack 0
   406  00001D                     	ds	2
   407  00001F                     kpDebounce@oldRead:
   408                           	callstack 0
   409  00001F                     	ds	2
   410  000021                     kpDebounce@newRead:
   411                           	callstack 0
   412  000021                     	ds	2
   413  000023                     _keys:
   414                           	callstack 0
   415  000023                     	ds	2
   416  000025                     _v3:
   417                           	callstack 0
   418  000025                     	ds	1
   419  000026                     _v2:
   420                           	callstack 0
   421  000026                     	ds	1
   422  000027                     _v1:
   423                           	callstack 0
   424  000027                     	ds	1
   425  000028                     _v0:
   426                           	callstack 0
   427  000028                     	ds	1
   428  000029                     _display:
   429                           	callstack 0
   430  000029                     	ds	1
   431  00002A                     _ctrl:
   432                           	callstack 0
   433  00002A                     	ds	1
   434  00002B                     _count:
   435                           	callstack 0
   436  00002B                     	ds	1
   437  00002C                     kpDebounce@tempo:
   438                           	callstack 0
   439  00002C                     	ds	1
   440                           
   441                           	psect	dataCOMRAM
   442  00002D                     __pdataCOMRAM:
   443                           	callstack 0
   444  00002D                     _temp:
   445                           	callstack 0
   446  00002D                     	ds	2
   447  00002F                     _pres:
   448                           	callstack 0
   449  00002F                     	ds	2
   450  000031                     _lev:
   451                           	callstack 0
   452  000031                     	ds	1
   453  000032                     _subMenu:
   454                           	callstack 0
   455  000032                     	ds	1
   456  000033                     _menuNum:
   457                           	callstack 0
   458  000033                     	ds	1
   459                           
   460                           	psect	cstackCOMRAM
   461  000001                     __pcstackCOMRAM:
   462                           	callstack 0
   463  000001                     ??_kpReadKey:
   464  000001                     ?_digitalRead:
   465                           	callstack 0
   466  000001                     ?_kpRead:
   467                           	callstack 0
   468  000001                     ?___wmul:
   469                           	callstack 0
   470  000001                     ?___awdiv:
   471                           	callstack 0
   472  000001                     ?___lwdiv:
   473                           	callstack 0
   474  000001                     ?___aldiv:
   475                           	callstack 0
   476  000001                     tempo@tempX:
   477                           	callstack 0
   478  000001                     serialSend@c:
   479                           	callstack 0
   480  000001                     serialRead@resp:
   481                           	callstack 0
   482  000001                     digitalWrite@pin:
   483                           	callstack 0
   484  000001                     digitalRead@pin:
   485                           	callstack 0
   486  000001                     pinMode@pin:
   487                           	callstack 0
   488  000001                     delayMicro@a:
   489                           	callstack 0
   490  000001                     delayMili@a:
   491                           	callstack 0
   492  000001                     timerReset@tempo:
   493                           	callstack 0
   494  000001                     ___wmul@multiplier:
   495                           	callstack 0
   496  000001                     ___awdiv@dividend:
   497                           	callstack 0
   498  000001                     ___lwdiv@dividend:
   499                           	callstack 0
   500  000001                     ___aldiv@dividend:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x0
   504  000001                     	ds	1
   505  000002                     ??_InfBoiler:
   506  000002                     tempo@aux:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x1
   510  000002                     	ds	1
   511  000003                     ??_digitalRead:
   512  000003                     ??_delayMili:
   513  000003                     tempo@i:
   514                           	callstack 0
   515  000003                     digitalWrite@value:
   516                           	callstack 0
   517  000003                     pinMode@type:
   518                           	callstack 0
   519  000003                     timerReset@ciclos:
   520                           	callstack 0
   521  000003                     ___wmul@multiplicand:
   522                           	callstack 0
   523  000003                     ___awdiv@divisor:
   524                           	callstack 0
   525  000003                     ___lwdiv@divisor:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x2
   529  000003                     	ds	1
   530  000004                     tempo@j:
   531                           	callstack 0
   532  000004                     InfBoiler@cmd:
   533                           	callstack 0
   534  000004                     kpReadKey@i:
   535                           	callstack 0
   536  000004                     delayMili@i:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x3
   540  000004                     	ds	1
   541  000005                     ??_digitalWrite:
   542  000005                     ??_pinMode:
   543  000005                     tempo@k:
   544                           	callstack 0
   545  000005                     ___awdiv@counter:
   546                           	callstack 0
   547  000005                     ___wmul@product:
   548                           	callstack 0
   549  000005                     ___lwdiv@quotient:
   550                           	callstack 0
   551  000005                     ___aldiv@divisor:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x4
   555  000005                     	ds	1
   556  000006                     menuCtrl@subMenu:
   557                           	callstack 0
   558  000006                     ___awdiv@sign:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x5
   562  000006                     	ds	1
   563  000007                     ??_menuCtrl:
   564  000007                     ___lwdiv@counter:
   565                           	callstack 0
   566  000007                     soWrite@value:
   567                           	callstack 0
   568  000007                     ___awdiv@quotient:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x6
   572  000007                     	ds	1
   573  000008                     ??_pwmSet:
   574                           
   575                           ; 1 bytes @ 0x7
   576  000008                     	ds	1
   577  000009                     ?___awmod:
   578                           	callstack 0
   579  000009                     soWrite@i:
   580                           	callstack 0
   581  000009                     menuCtrl@menuNum:
   582                           	callstack 0
   583  000009                     ___aldiv@counter:
   584                           	callstack 0
   585  000009                     ___awmod@dividend:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x8
   589  000009                     	ds	1
   590  00000A                     ??_kpDebounce:
   591  00000A                     pwmSet@porcento:
   592                           	callstack 0
   593  00000A                     ___aldiv@sign:
   594                           	callstack 0
   595  00000A                     pushNibble@rs:
   596                           	callstack 0
   597  00000A                     pushByte@rs:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x9
   601  00000A                     	ds	1
   602  00000B                     pwmSet@val:
   603                           	callstack 0
   604  00000B                     ___awmod@divisor:
   605                           	callstack 0
   606  00000B                     ___aldiv@quotient:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0xA
   610  00000B                     	ds	1
   611  00000C                     ??_pushByte:
   612  00000C                     pushNibble@value:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0xB
   616  00000C                     	ds	1
   617  00000D                     pushByte@value:
   618                           	callstack 0
   619  00000D                     ___awmod@counter:
   620                           	callstack 0
   621  00000D                     kpDebounce@i:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0xC
   625  00000D                     	ds	1
   626  00000E                     lcdCommand@value:
   627                           	callstack 0
   628  00000E                     lcdChar@value:
   629                           	callstack 0
   630  00000E                     ___awmod@sign:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0xD
   634  00000E                     	ds	1
   635  00000F                     lcdString@msg:
   636                           	callstack 0
   637  00000F                     lcdNumber@value:
   638                           	callstack 0
   639  00000F                     pwmFrequency@freq:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xE
   643  00000F                     	ds	2
   644  000011                     ??_lcdString:
   645  000011                     lcdNumber@i:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x10
   649  000011                     	ds	2
   650  000013                     lcdString@i:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x12
   654  000013                     	ds	2
   655  000015                     ??_menu1:
   656  000015                     ??_menu2:
   657  000015                     ??_menu3:
   658                           
   659                           ; 1 bytes @ 0x14
   660  000015                     	ds	2
   661  000017                     menu1@subMenu:
   662                           	callstack 0
   663  000017                     menu2@subMenu:
   664                           	callstack 0
   665  000017                     menu3@subMenu:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x16
   669  000017                     	ds	1
   670  000018                     ??_main:
   671                           
   672                           ; 1 bytes @ 0x17
   673  000018                     	ds	2
   674  00001A                     main@slot:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x19
   678  00001A                     	ds	1
   679                           
   680 ;;
   681 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   682 ;;
   683 ;; *************** function _main *****************
   684 ;; Defined at:
   685 ;;		line 88 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  slot            1   25[COMRAM] unsigned char 
   690 ;;  i               1    0        unsigned char 
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   700 ;;      Params:         0       0       0       0       0       0       0
   701 ;;      Locals:         1       0       0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0       0       0
   703 ;;      Totals:         3       0       0       0       0       0       0
   704 ;;Total ram usage:        3 bytes
   705 ;; Hardware stack levels required when called: 7
   706 ;; This function calls:
   707 ;;		_InfBoiler
   708 ;;		_kpDebounce
   709 ;;		_kpInit
   710 ;;		_lcdCommand
   711 ;;		_lcdInit
   712 ;;		_lcdString
   713 ;;		_leituraMenu
   714 ;;		_menu1
   715 ;;		_menu2
   716 ;;		_menu3
   717 ;;		_menuCtrl
   718 ;;		_pwmInit
   719 ;;		_pwmSet
   720 ;;		_serialInit
   721 ;;		_status
   722 ;;		_tempo
   723 ;;		_timerInit
   724 ;;		_timerReset
   725 ;;		_timerWait
   726 ;; This function is called by:
   727 ;;		Startup code after reset
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text0
   732  000FAC                     __ptext0:
   733                           	callstack 0
   734  000FAC                     _main:
   735                           	callstack 24
   736  000FAC                     
   737                           ;main.c: 89:     TRISD = 0x00;
   738  000FAC  0E00               	movlw	0
   739  000FAE  6E95               	movwf	149,c	;volatile
   740                           
   741                           ;main.c: 90:     char slot = 0, i;
   742  000FB0  0E00               	movlw	0
   743  000FB2  6E1A               	movwf	main@slot^0,c
   744  000FB4                     
   745                           ;main.c: 92:     lcdInit();
   746  000FB4  EC40  F00A         	call	_lcdInit	;wreg free
   747  000FB8                     
   748                           ;main.c: 93:     kpInit();
   749  000FB8  EC00  F00E         	call	_kpInit	;wreg free
   750  000FBC                     
   751                           ;main.c: 94:     serialInit();
   752  000FBC  ECD9  F00E         	call	_serialInit	;wreg free
   753  000FC0                     
   754                           ;main.c: 95:     pwmInit();
   755  000FC0  ECE6  F00E         	call	_pwmInit	;wreg free
   756  000FC4                     
   757                           ;main.c: 96:     timerInit();
   758  000FC4  EC0B  F00F         	call	_timerInit	;wreg free
   759  000FC8                     
   760                           ;main.c: 98:     pwmSet(0);
   761  000FC8  0E00               	movlw	0
   762  000FCA  ECC5  F00C         	call	_pwmSet
   763  000FCE                     
   764                           ;main.c: 99:     lcdString("Iniciando...");
   765  000FCE  0E92               	movlw	low STR_16
   766  000FD0  6E0F               	movwf	lcdString@msg^0,c
   767  000FD2  0E06               	movlw	high STR_16
   768  000FD4  6E10               	movwf	(lcdString@msg+1)^0,c
   769  000FD6  EC53  F00D         	call	_lcdString	;wreg free
   770  000FDA                     
   771                           ;main.c: 100:     tempo(10);
   772  000FDA  0E0A               	movlw	10
   773  000FDC  ECD8  F00B         	call	_tempo
   774  000FE0                     
   775                           ;main.c: 102:     lcdCommand(0x01);
   776  000FE0  0E01               	movlw	1
   777  000FE2  ECCA  F00E         	call	_lcdCommand
   778  000FE6                     l2831:
   779                           
   780                           ;main.c: 105:         timerReset(3000);
   781  000FE6  0E0B               	movlw	11
   782  000FE8  6E02               	movwf	(timerReset@tempo+1)^0,c
   783  000FEA  0EB8               	movlw	184
   784  000FEC  6E01               	movwf	timerReset@tempo^0,c
   785  000FEE  ECAA  F00E         	call	_timerReset	;wreg free
   786                           
   787                           ;main.c: 106:         switch (slot) {
   788  000FF2  EF4C  F008         	goto	l2863
   789  000FF6                     l2833:
   790                           
   791                           ;main.c: 108:                 leituraMenu();
   792  000FF6  ECF5  F008         	call	_leituraMenu	;wreg free
   793                           
   794                           ;main.c: 109:                 switch (menuNum) {
   795  000FFA  EF1D  F008         	goto	l2843
   796  000FFE                     l2835:
   797                           
   798                           ;main.c: 111:                         menu1(subMenu);
   799  000FFE  5032               	movf	_subMenu^0,w,c
   800  001000  EC3F  F00B         	call	_menu1
   801                           
   802                           ;main.c: 112:                         menuCtrl(menuNum, subMenu);
   803  001004  C032  F006         	movff	_subMenu,menuCtrl@subMenu
   804  001008  5033               	movf	_menuNum^0,w,c
   805  00100A  ECAC  F005         	call	_menuCtrl
   806                           
   807                           ;main.c: 113:                         break;
   808  00100E  EF36  F008         	goto	l2845
   809  001012                     l2837:
   810                           
   811                           ;main.c: 116:                         menu2(subMenu);
   812  001012  5032               	movf	_subMenu^0,w,c
   813  001014  ECF2  F00A         	call	_menu2
   814                           
   815                           ;main.c: 117:                         menuCtrl(menuNum, subMenu);
   816  001018  C032  F006         	movff	_subMenu,menuCtrl@subMenu
   817  00101C  5033               	movf	_menuNum^0,w,c
   818  00101E  ECAC  F005         	call	_menuCtrl
   819                           
   820                           ;main.c: 118:                         break;
   821  001022  EF36  F008         	goto	l2845
   822  001026                     l2839:
   823                           
   824                           ;main.c: 121:                         menu3(subMenu);
   825  001026  5032               	movf	_subMenu^0,w,c
   826  001028  EC8C  F00B         	call	_menu3
   827                           
   828                           ;main.c: 122:                         menuCtrl(menuNum, subMenu);
   829  00102C  C032  F006         	movff	_subMenu,menuCtrl@subMenu
   830  001030  5033               	movf	_menuNum^0,w,c
   831  001032  ECAC  F005         	call	_menuCtrl
   832                           
   833                           ;main.c: 123:                         break;
   834  001036  EF36  F008         	goto	l2845
   835  00103A                     l2843:
   836  00103A  5033               	movf	_menuNum^0,w,c
   837  00103C  6E18               	movwf	??_main^0,c
   838  00103E  6A19               	clrf	(??_main+1)^0,c
   839                           
   840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   841                           ; Switch size 1, requested type "simple"
   842                           ; Number of cases is 1, Range of values is 0 to 0
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte            4     3 (average)
   846                           ;	Chosen strategy is simple_byte
   847  001040  5019               	movf	(??_main+1)^0,w,c
   848  001042  0A00               	xorlw	0	; case 0
   849  001044  B4D8               	btfsc	status,2,c
   850  001046  EF27  F008         	goto	l2945
   851  00104A  EF36  F008         	goto	l2845
   852  00104E                     l2945:
   853                           
   854                           ; Switch size 1, requested type "simple"
   855                           ; Number of cases is 3, Range of values is 1 to 3
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte           10     6 (average)
   859                           ;	Chosen strategy is simple_byte
   860  00104E  5018               	movf	??_main^0,w,c
   861  001050  0A01               	xorlw	1	; case 1
   862  001052  B4D8               	btfsc	status,2,c
   863  001054  EFFF  F007         	goto	l2835
   864  001058  0A03               	xorlw	3	; case 2
   865  00105A  B4D8               	btfsc	status,2,c
   866  00105C  EF09  F008         	goto	l2837
   867  001060  0A01               	xorlw	1	; case 3
   868  001062  B4D8               	btfsc	status,2,c
   869  001064  EF13  F008         	goto	l2839
   870  001068  EF36  F008         	goto	l2845
   871  00106C                     l2845:
   872                           
   873                           ;main.c: 126:                 slot = 1;
   874  00106C  0E01               	movlw	1
   875  00106E  6E1A               	movwf	main@slot^0,c
   876                           
   877                           ;main.c: 127:                 break;
   878  001070  EF69  F008         	goto	l2865
   879  001074                     l2847:
   880                           
   881                           ;main.c: 130:                 kpDebounce();
   882  001074  EC3B  F007         	call	_kpDebounce	;wreg free
   883  001078                     
   884                           ;main.c: 131:                 slot = 2;
   885  001078  0E02               	movlw	2
   886  00107A  6E1A               	movwf	main@slot^0,c
   887                           
   888                           ;main.c: 132:                 break;
   889  00107C  EF69  F008         	goto	l2865
   890  001080                     l2851:
   891                           
   892                           ;main.c: 135:                 InfBoiler();
   893  001080  EC71  F009         	call	_InfBoiler	;wreg free
   894  001084                     
   895                           ;main.c: 136:                 slot = 3;
   896  001084  0E03               	movlw	3
   897  001086  6E1A               	movwf	main@slot^0,c
   898                           
   899                           ;main.c: 137:                 break;
   900  001088  EF69  F008         	goto	l2865
   901  00108C                     l2855:
   902                           
   903                           ;main.c: 140:                 status();
   904  00108C  EC28  F00D         	call	_status	;wreg free
   905  001090                     l2857:
   906                           
   907                           ;main.c: 141:                 slot = 0;
   908  001090  0E00               	movlw	0
   909  001092  6E1A               	movwf	main@slot^0,c
   910                           
   911                           ;main.c: 142:                 break;
   912  001094  EF69  F008         	goto	l2865
   913  001098                     l2863:
   914  001098  501A               	movf	main@slot^0,w,c
   915  00109A  6E18               	movwf	??_main^0,c
   916  00109C  6A19               	clrf	(??_main+1)^0,c
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925  00109E  5019               	movf	(??_main+1)^0,w,c
   926  0010A0  0A00               	xorlw	0	; case 0
   927  0010A2  B4D8               	btfsc	status,2,c
   928  0010A4  EF56  F008         	goto	l2947
   929  0010A8  EF48  F008         	goto	l2857
   930  0010AC                     l2947:
   931                           
   932                           ; Switch size 1, requested type "simple"
   933                           ; Number of cases is 4, Range of values is 0 to 3
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte           13     7 (average)
   937                           ;	Chosen strategy is simple_byte
   938  0010AC  5018               	movf	??_main^0,w,c
   939  0010AE  0A00               	xorlw	0	; case 0
   940  0010B0  B4D8               	btfsc	status,2,c
   941  0010B2  EFFB  F007         	goto	l2833
   942  0010B6  0A01               	xorlw	1	; case 1
   943  0010B8  B4D8               	btfsc	status,2,c
   944  0010BA  EF3A  F008         	goto	l2847
   945  0010BE  0A03               	xorlw	3	; case 2
   946  0010C0  B4D8               	btfsc	status,2,c
   947  0010C2  EF40  F008         	goto	l2851
   948  0010C6  0A01               	xorlw	1	; case 3
   949  0010C8  B4D8               	btfsc	status,2,c
   950  0010CA  EF46  F008         	goto	l2855
   951  0010CE  EF48  F008         	goto	l2857
   952  0010D2                     l2865:
   953                           
   954                           ;main.c: 148:         timerWait();
   955  0010D2  ECFE  F00E         	call	_timerWait	;wreg free
   956                           
   957                           ;main.c: 149:     }
   958  0010D6  EFF3  F007         	goto	l2831
   959  0010DA  EF00  F000         	goto	start
   960  0010DE                     __end_of_main:
   961                           	callstack 0
   962                           
   963 ;; *************** function _timerWait *****************
   964 ;; Defined at:
   965 ;;		line 31 in file "timer.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		None
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         0       0       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text1
   993  001DFC                     __ptext1:
   994                           	callstack 0
   995  001DFC                     _timerWait:
   996                           	callstack 30
   997  001DFC                     l489:
   998  001DFC  A4F2               	btfss	242,2,c	;volatile
   999  001DFE  EF03  F00F         	goto	u1301
  1000  001E02  EF05  F00F         	goto	u1300
  1001  001E06                     u1301:
  1002  001E06  EFFE  F00E         	goto	l489
  1003  001E0A                     u1300:
  1004  001E0A  0012               	return		;funcret
  1005  001E0C                     __end_of_timerWait:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _timerReset *****************
  1009 ;; Defined at:
  1010 ;;		line 37 in file "timer.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  tempo           2    0[COMRAM] unsigned int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  ciclos          2    2[COMRAM] unsigned int 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1024 ;;      Params:         2       0       0       0       0       0       0
  1025 ;;      Locals:         2       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0
  1027 ;;      Totals:         4       0       0       0       0       0       0
  1028 ;;Total ram usage:        4 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text2
  1038  001D54                     __ptext2:
  1039                           	callstack 0
  1040  001D54                     _timerReset:
  1041                           	callstack 30
  1042  001D54                     
  1043                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1044  001D54  90D8               	bcf	status,0,c
  1045  001D56  3401               	rlcf	timerReset@tempo^0,w,c
  1046  001D58  6E03               	movwf	timerReset@ciclos^0,c
  1047  001D5A  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1048  001D5C  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1049  001D5E                     
  1050                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1051  001D5E  1E03               	comf	timerReset@ciclos^0,f,c
  1052  001D60  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1053  001D62                     
  1054                           ;timer.c: 47:     ciclos -=50;
  1055  001D62  0E32               	movlw	50
  1056  001D64  5E03               	subwf	timerReset@ciclos^0,f,c
  1057  001D66  0E00               	movlw	0
  1058  001D68  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1059  001D6A                     
  1060                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1061  001D6A  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1062  001D6C  6ED7               	movwf	215,c	;volatile
  1063  001D6E                     
  1064                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1065  001D6E  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1066  001D72                     
  1067                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1068  001D72  94F2               	bcf	242,2,c	;volatile
  1069  001D74  0012               	return		;funcret
  1070  001D76                     __end_of_timerReset:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _timerInit *****************
  1074 ;; Defined at:
  1075 ;;		line 55 in file "timer.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1089 ;;      Params:         0       0       0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0
  1092 ;;      Totals:         0       0       0       0       0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text3
  1103  001E16                     __ptext3:
  1104                           	callstack 0
  1105  001E16                     _timerInit:
  1106                           	callstack 30
  1107  001E16                     
  1108                           ;timer.c: 57:  T0CON = 0b00001000;
  1109  001E16  0E08               	movlw	8
  1110  001E18  6ED5               	movwf	213,c	;volatile
  1111  001E1A                     
  1112                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1113  001E1A  8ED5               	bsf	213,7,c	;volatile
  1114  001E1C  0012               	return		;funcret
  1115  001E1E                     __end_of_timerInit:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _tempo *****************
  1119 ;; Defined at:
  1120 ;;		line 4 in file "delay.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  tempX           1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  tempX           1    0[COMRAM] unsigned char 
  1125 ;;  k               1    4[COMRAM] volatile unsigned char 
  1126 ;;  j               1    3[COMRAM] volatile unsigned char 
  1127 ;;  i               1    2[COMRAM] volatile unsigned char 
  1128 ;;  aux             1    1[COMRAM] volatile unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         0       0       0       0       0       0       0
  1139 ;;      Locals:         5       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         5       0       0       0       0       0       0
  1142 ;;Total ram usage:        5 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text4
  1152  0017B0                     __ptext4:
  1153                           	callstack 0
  1154  0017B0                     _tempo:
  1155                           	callstack 30
  1156                           
  1157                           ;incstack = 0
  1158                           ;tempo@tempX stored from wreg
  1159  0017B0  6E01               	movwf	tempo@tempX^0,c
  1160  0017B2                     
  1161                           ;delay.c: 5:     volatile unsigned char i, j, k, aux;;delay.c: 7:     for(aux= 0; aux < 
      +                          tempX; aux++){
  1162  0017B2  0E00               	movlw	0
  1163  0017B4  6E02               	movwf	tempo@aux^0,c	;volatile
  1164  0017B6  EF0B  F00C         	goto	l1631
  1165  0017BA                     l1599:
  1166                           
  1167                           ;delay.c: 8:         for(i = 0; i < 100; i++) {
  1168  0017BA  0E00               	movlw	0
  1169  0017BC  6E03               	movwf	tempo@i^0,c	;volatile
  1170  0017BE                     l1601:
  1171  0017BE  0E63               	movlw	99
  1172  0017C0  6403               	cpfsgt	tempo@i^0,c	;volatile
  1173  0017C2  EFE5  F00B         	goto	u821
  1174  0017C6  EFE7  F00B         	goto	u820
  1175  0017CA                     u821:
  1176  0017CA  EFE9  F00B         	goto	l1605
  1177  0017CE                     u820:
  1178  0017CE  EF0A  F00C         	goto	l1629
  1179  0017D2                     l1605:
  1180                           
  1181                           ;delay.c: 9:             for(j = 0; j < 41; j++) {
  1182  0017D2  0E00               	movlw	0
  1183  0017D4  6E04               	movwf	tempo@j^0,c	;volatile
  1184  0017D6                     l1607:
  1185  0017D6  0E28               	movlw	40
  1186  0017D8  6404               	cpfsgt	tempo@j^0,c	;volatile
  1187  0017DA  EFF1  F00B         	goto	u831
  1188  0017DE  EFF3  F00B         	goto	u830
  1189  0017E2                     u831:
  1190  0017E2  EFF5  F00B         	goto	l1611
  1191  0017E6                     u830:
  1192  0017E6  EF07  F00C         	goto	l1625
  1193  0017EA                     l1611:
  1194                           
  1195                           ;delay.c: 10:                 for(k = 0; k < 3; k++);
  1196  0017EA  0E00               	movlw	0
  1197  0017EC  6E05               	movwf	tempo@k^0,c	;volatile
  1198  0017EE                     l1613:
  1199  0017EE  0E02               	movlw	2
  1200  0017F0  6405               	cpfsgt	tempo@k^0,c	;volatile
  1201  0017F2  EFFD  F00B         	goto	u841
  1202  0017F6  EFFF  F00B         	goto	u840
  1203  0017FA                     u841:
  1204  0017FA  EF01  F00C         	goto	l1617
  1205  0017FE                     u840:
  1206  0017FE  EF04  F00C         	goto	l1621
  1207  001802                     l1617:
  1208  001802  2A05               	incf	tempo@k^0,f,c	;volatile
  1209  001804  EFF7  F00B         	goto	l1613
  1210  001808                     l1621:
  1211                           
  1212                           ;delay.c: 11:             }
  1213  001808  2A04               	incf	tempo@j^0,f,c	;volatile
  1214  00180A  EFEB  F00B         	goto	l1607
  1215  00180E                     l1625:
  1216                           
  1217                           ;delay.c: 12:         }
  1218  00180E  2A03               	incf	tempo@i^0,f,c	;volatile
  1219  001810  EFDF  F00B         	goto	l1601
  1220  001814                     l1629:
  1221                           
  1222                           ;delay.c: 13:     }
  1223  001814  2A02               	incf	tempo@aux^0,f,c	;volatile
  1224  001816                     l1631:
  1225  001816  5001               	movf	tempo@tempX^0,w,c
  1226  001818  5C02               	subwf	tempo@aux^0,w,c	;volatile
  1227  00181A  A0D8               	btfss	status,0,c
  1228  00181C  EF12  F00C         	goto	u851
  1229  001820  EF14  F00C         	goto	u850
  1230  001824                     u851:
  1231  001824  EFDD  F00B         	goto	l1599
  1232  001828                     u850:
  1233  001828  0012               	return		;funcret
  1234  00182A                     __end_of_tempo:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _status *****************
  1238 ;; Defined at:
  1239 ;;		line 78 in file "main.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 2
  1260 ;; This function calls:
  1261 ;;		_pwmSet
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text5
  1268  001A50                     __ptext5:
  1269                           	callstack 0
  1270  001A50                     _status:
  1271                           	callstack 28
  1272  001A50                     
  1273                           ;main.c: 79:     if (pres > 20 || temp > 300 || lev == 0) {
  1274  001A50  5030               	movf	(_pres+1)^0,w,c
  1275  001A52  E107               	bnz	u2601
  1276  001A54  0E15               	movlw	21
  1277  001A56  5C2F               	subwf	_pres^0,w,c
  1278  001A58  B0D8               	btfsc	status,0,c
  1279  001A5A  EF31  F00D         	goto	u2601
  1280  001A5E  EF33  F00D         	goto	u2600
  1281  001A62                     u2601:
  1282  001A62  EF46  F00D         	goto	l2729
  1283  001A66                     u2600:
  1284  001A66  0E2D               	movlw	45
  1285  001A68  5C2D               	subwf	_temp^0,w,c
  1286  001A6A  0E01               	movlw	1
  1287  001A6C  582E               	subwfb	(_temp+1)^0,w,c
  1288  001A6E  B0D8               	btfsc	status,0,c
  1289  001A70  EF3C  F00D         	goto	u2611
  1290  001A74  EF3E  F00D         	goto	u2610
  1291  001A78                     u2611:
  1292  001A78  EF46  F00D         	goto	l2729
  1293  001A7C                     u2610:
  1294  001A7C  5031               	movf	_lev^0,w,c
  1295  001A7E  A4D8               	btfss	status,2,c
  1296  001A80  EF44  F00D         	goto	u2621
  1297  001A84  EF46  F00D         	goto	u2620
  1298  001A88                     u2621:
  1299  001A88  EF4D  F00D         	goto	l2733
  1300  001A8C                     u2620:
  1301  001A8C                     l2729:
  1302                           
  1303                           ;main.c: 80:         PORTD = 0b00000001;
  1304  001A8C  0E01               	movlw	1
  1305  001A8E  6E83               	movwf	131,c	;volatile
  1306  001A90                     
  1307                           ;main.c: 81:         pwmSet(100);
  1308  001A90  0E64               	movlw	100
  1309  001A92  ECC5  F00C         	call	_pwmSet
  1310                           
  1311                           ;main.c: 82:     } else {
  1312  001A96  EF52  F00D         	goto	l416
  1313  001A9A                     l2733:
  1314                           
  1315                           ;main.c: 83:         pwmSet(0);
  1316  001A9A  0E00               	movlw	0
  1317  001A9C  ECC5  F00C         	call	_pwmSet
  1318  001AA0                     
  1319                           ;main.c: 84:         PORTD = 0b00000010;
  1320  001AA0  0E02               	movlw	2
  1321  001AA2  6E83               	movwf	131,c	;volatile
  1322  001AA4                     l416:
  1323  001AA4  0012               	return		;funcret
  1324  001AA6                     __end_of_status:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _pwmSet *****************
  1328 ;; Defined at:
  1329 ;;		line 24 in file "pwm.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  porcento        1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  porcento        1    9[COMRAM] unsigned char 
  1334 ;;  val             2   10[COMRAM] unsigned int 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1344 ;;      Params:         0       0       0       0       0       0       0
  1345 ;;      Locals:         3       0       0       0       0       0       0
  1346 ;;      Temps:          2       0       0       0       0       0       0
  1347 ;;      Totals:         5       0       0       0       0       0       0
  1348 ;;Total ram usage:        5 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 1
  1351 ;; This function calls:
  1352 ;;		___lwdiv
  1353 ;;		___wmul
  1354 ;; This function is called by:
  1355 ;;		_status
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text6
  1361  00198A                     __ptext6:
  1362                           	callstack 0
  1363  00198A                     _pwmSet:
  1364                           	callstack 28
  1365                           
  1366                           ;incstack = 0
  1367                           ;pwmSet@porcento stored from wreg
  1368  00198A  6E0A               	movwf	pwmSet@porcento^0,c
  1369  00198C                     
  1370                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1371  00198C  0E01               	movlw	1
  1372  00198E  24CB               	addwf	203,w,c	;volatile
  1373  001990  6E01               	movwf	___wmul@multiplier^0,c
  1374  001992  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1375  001994  0E00               	movlw	0
  1376  001996  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1377  001998  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1378  00199C  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1379  00199E  EC71  F00E         	call	___wmul	;wreg free
  1380  0019A2  C001  F00B         	movff	?___wmul,pwmSet@val
  1381  0019A6  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1382  0019AA                     
  1383                           ;pwm.c: 33:     val = val / 25;
  1384  0019AA  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1385  0019AE  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1386  0019B2  0E00               	movlw	0
  1387  0019B4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1388  0019B6  0E19               	movlw	25
  1389  0019B8  6E03               	movwf	___lwdiv@divisor^0,c
  1390  0019BA  EC51  F00C         	call	___lwdiv	;wreg free
  1391  0019BE  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1392  0019C2  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1393  0019C6                     
  1394                           ;pwm.c: 35:  val &= 0x03ff;
  1395  0019C6  0EFF               	movlw	255
  1396  0019C8  160B               	andwf	pwmSet@val^0,f,c
  1397  0019CA  0E03               	movlw	3
  1398  0019CC  160C               	andwf	(pwmSet@val+1)^0,f,c
  1399  0019CE                     
  1400                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1401  0019CE  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1402  0019D2  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1403  0019D6  90D8               	bcf	status,0,c
  1404  0019D8  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1405  0019DA  3208               	rrcf	??_pwmSet^0,f,c
  1406  0019DC  90D8               	bcf	status,0,c
  1407  0019DE  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1408  0019E0  3208               	rrcf	??_pwmSet^0,f,c
  1409  0019E2  5008               	movf	??_pwmSet^0,w,c
  1410  0019E4  6EBB               	movwf	187,c	;volatile
  1411  0019E6                     
  1412                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1413  0019E6  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1414  0019EA  0E03               	movlw	3
  1415  0019EC  1608               	andwf	??_pwmSet^0,f,c
  1416  0019EE  3808               	swapf	??_pwmSet^0,w,c
  1417  0019F0  0BF0               	andlw	240
  1418  0019F2  12BA               	iorwf	186,f,c	;volatile
  1419  0019F4  0012               	return		;funcret
  1420  0019F6                     __end_of_pwmSet:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function ___wmul *****************
  1424 ;; Defined at:
  1425 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  multiplier      2    0[COMRAM] unsigned int 
  1428 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  product         2    4[COMRAM] unsigned int 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    0[COMRAM] unsigned int 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, prodl, prodh
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         4       0       0       0       0       0       0
  1441 ;;      Locals:         2       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         6       0       0       0       0       0       0
  1444 ;;Total ram usage:        6 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_pwmSet
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text7
  1454  001CE2                     __ptext7:
  1455                           	callstack 0
  1456  001CE2                     ___wmul:
  1457                           	callstack 28
  1458  001CE2  5001               	movf	___wmul@multiplier^0,w,c
  1459  001CE4  0203               	mulwf	___wmul@multiplicand^0,c
  1460  001CE6  CFF3 F005          	movff	prodl,___wmul@product
  1461  001CEA  CFF4 F006          	movff	prodh,___wmul@product+1
  1462  001CEE  5001               	movf	___wmul@multiplier^0,w,c
  1463  001CF0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1464  001CF2  50F3               	movf	243,w,c
  1465  001CF4  2606               	addwf	(___wmul@product+1)^0,f,c
  1466  001CF6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1467  001CF8  0203               	mulwf	___wmul@multiplicand^0,c
  1468  001CFA  50F3               	movf	243,w,c
  1469  001CFC  2606               	addwf	(___wmul@product+1)^0,f,c
  1470  001CFE  C005  F001         	movff	___wmul@product,?___wmul
  1471  001D02  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1472  001D06  0012               	return		;funcret
  1473  001D08                     __end_of___wmul:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function ___lwdiv *****************
  1477 ;; Defined at:
  1478 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  dividend        2    0[COMRAM] unsigned int 
  1481 ;;  divisor         2    2[COMRAM] unsigned int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  quotient        2    4[COMRAM] unsigned int 
  1484 ;;  counter         1    6[COMRAM] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2    0[COMRAM] unsigned int 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         4       0       0       0       0       0       0
  1495 ;;      Locals:         3       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0
  1497 ;;      Totals:         7       0       0       0       0       0       0
  1498 ;;Total ram usage:        7 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_pwmSet
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text8
  1508  0018A2                     __ptext8:
  1509                           	callstack 0
  1510  0018A2                     ___lwdiv:
  1511                           	callstack 28
  1512  0018A2  0E00               	movlw	0
  1513  0018A4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1514  0018A6  0E00               	movlw	0
  1515  0018A8  6E05               	movwf	___lwdiv@quotient^0,c
  1516  0018AA  5003               	movf	___lwdiv@divisor^0,w,c
  1517  0018AC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1518  0018AE  B4D8               	btfsc	status,2,c
  1519  0018B0  EF5C  F00C         	goto	u2081
  1520  0018B4  EF5E  F00C         	goto	u2080
  1521  0018B8                     u2081:
  1522  0018B8  EF86  F00C         	goto	l1033
  1523  0018BC                     u2080:
  1524  0018BC  0E01               	movlw	1
  1525  0018BE  6E07               	movwf	___lwdiv@counter^0,c
  1526  0018C0  EF66  F00C         	goto	l2417
  1527  0018C4                     l2415:
  1528  0018C4  90D8               	bcf	status,0,c
  1529  0018C6  3603               	rlcf	___lwdiv@divisor^0,f,c
  1530  0018C8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1531  0018CA  2A07               	incf	___lwdiv@counter^0,f,c
  1532  0018CC                     l2417:
  1533  0018CC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1534  0018CE  EF6B  F00C         	goto	u2091
  1535  0018D2  EF6D  F00C         	goto	u2090
  1536  0018D6                     u2091:
  1537  0018D6  EF62  F00C         	goto	l2415
  1538  0018DA                     u2090:
  1539  0018DA                     l2419:
  1540  0018DA  90D8               	bcf	status,0,c
  1541  0018DC  3605               	rlcf	___lwdiv@quotient^0,f,c
  1542  0018DE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1543  0018E0  5003               	movf	___lwdiv@divisor^0,w,c
  1544  0018E2  5C01               	subwf	___lwdiv@dividend^0,w,c
  1545  0018E4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1546  0018E6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1547  0018E8  A0D8               	btfss	status,0,c
  1548  0018EA  EF79  F00C         	goto	u2101
  1549  0018EE  EF7B  F00C         	goto	u2100
  1550  0018F2                     u2101:
  1551  0018F2  EF80  F00C         	goto	l2427
  1552  0018F6                     u2100:
  1553  0018F6  5003               	movf	___lwdiv@divisor^0,w,c
  1554  0018F8  5E01               	subwf	___lwdiv@dividend^0,f,c
  1555  0018FA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1556  0018FC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1557  0018FE  8005               	bsf	___lwdiv@quotient^0,0,c
  1558  001900                     l2427:
  1559  001900  90D8               	bcf	status,0,c
  1560  001902  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1561  001904  3203               	rrcf	___lwdiv@divisor^0,f,c
  1562  001906  2E07               	decfsz	___lwdiv@counter^0,f,c
  1563  001908  EF6D  F00C         	goto	l2419
  1564  00190C                     l1033:
  1565  00190C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1566  001910  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1567  001914  0012               	return		;funcret
  1568  001916                     __end_of___lwdiv:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _serialInit *****************
  1572 ;; Defined at:
  1573 ;;		line 48 in file "serial.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1587 ;;      Params:         0       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text9
  1601  001DB2                     __ptext9:
  1602                           	callstack 0
  1603  001DB2                     _serialInit:
  1604                           	callstack 30
  1605  001DB2                     
  1606                           ;serial.c: 49:     TXSTA = 0b00101100;
  1607  001DB2  0E2C               	movlw	44
  1608  001DB4  6EAC               	movwf	172,c	;volatile
  1609                           
  1610                           ;serial.c: 50:     RCSTA = 0b10010000;
  1611  001DB6  0E90               	movlw	144
  1612  001DB8  6EAB               	movwf	171,c	;volatile
  1613                           
  1614                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1615  001DBA  0E08               	movlw	8
  1616  001DBC  6EB8               	movwf	184,c	;volatile
  1617                           
  1618                           ;serial.c: 52:     SPBRGH = 0;
  1619  001DBE  0E00               	movlw	0
  1620  001DC0  6EB0               	movwf	176,c	;volatile
  1621                           
  1622                           ;serial.c: 53:     SPBRG = 34;
  1623  001DC2  0E22               	movlw	34
  1624  001DC4  6EAF               	movwf	175,c	;volatile
  1625  001DC6                     
  1626                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1627  001DC6  8C94               	bsf	148,6,c	;volatile
  1628  001DC8                     
  1629                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1630  001DC8  8E94               	bsf	148,7,c	;volatile
  1631  001DCA  0012               	return		;funcret
  1632  001DCC                     __end_of_serialInit:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _pwmInit *****************
  1636 ;; Defined at:
  1637 ;;		line 51 in file "pwm.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1651 ;;      Params:         0       0       0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 2
  1658 ;; This function calls:
  1659 ;;		_pwmFrequency
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text10
  1666  001DCC                     __ptext10:
  1667                           	callstack 0
  1668  001DCC                     _pwmInit:
  1669                           	callstack 28
  1670  001DCC                     
  1671                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1672  001DCC  9294               	bcf	148,1,c	;volatile
  1673  001DCE                     
  1674                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1675  001DCE  0E03               	movlw	3
  1676  001DD0  12CA               	iorwf	202,f,c	;volatile
  1677  001DD2                     
  1678                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1679  001DD2  84CA               	bsf	202,2,c	;volatile
  1680  001DD4                     
  1681                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1682  001DD4  0E0C               	movlw	12
  1683  001DD6  6EBA               	movwf	186,c	;volatile
  1684  001DD8                     
  1685                           ;pwm.c: 60:     pwmFrequency(100);
  1686  001DD8  0E00               	movlw	0
  1687  001DDA  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1688  001DDC  0E64               	movlw	100
  1689  001DDE  6E0F               	movwf	pwmFrequency@freq^0,c
  1690  001DE0  EC84  F00E         	call	_pwmFrequency	;wreg free
  1691  001DE4  0012               	return		;funcret
  1692  001DE6                     __end_of_pwmInit:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _pwmFrequency *****************
  1696 ;; Defined at:
  1697 ;;		line 44 in file "pwm.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  freq            2   14[COMRAM] unsigned int 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1711 ;;      Params:         2       0       0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		___aldiv
  1720 ;; This function is called by:
  1721 ;;		_pwmInit
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text11
  1726  001D08                     __ptext11:
  1727                           	callstack 0
  1728  001D08                     _pwmFrequency:
  1729                           	callstack 28
  1730  001D08                     
  1731                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  1732  001D08  0E48               	movlw	72
  1733  001D0A  6E01               	movwf	___aldiv@dividend^0,c
  1734  001D0C  0EE8               	movlw	232
  1735  001D0E  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1736  001D10  0E01               	movlw	1
  1737  001D12  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1738  001D14  0E00               	movlw	0
  1739  001D16  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1740  001D18  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1741  001D1C  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1742  001D20  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1743  001D22  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1744  001D24  EC6F  F008         	call	___aldiv	;wreg free
  1745  001D28  0401               	decf	?___aldiv^0,w,c
  1746  001D2A  6ECB               	movwf	203,c	;volatile
  1747  001D2C  0012               	return		;funcret
  1748  001D2E                     __end_of_pwmFrequency:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function ___aldiv *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dividend        4    0[COMRAM] long 
  1756 ;;  divisor         4    4[COMRAM] long 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  quotient        4   10[COMRAM] long 
  1759 ;;  sign            1    9[COMRAM] unsigned char 
  1760 ;;  counter         1    8[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  4    0[COMRAM] long 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         8       0       0       0       0       0       0
  1771 ;;      Locals:         6       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:        14       0       0       0       0       0       0
  1774 ;;Total ram usage:       14 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_pwmFrequency
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text12
  1784  0010DE                     __ptext12:
  1785                           	callstack 0
  1786  0010DE                     ___aldiv:
  1787                           	callstack 28
  1788  0010DE  0E00               	movlw	0
  1789  0010E0  6E0A               	movwf	___aldiv@sign^0,c
  1790  0010E2  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1791  0010E4  EF78  F008         	goto	u1900
  1792  0010E8  EF76  F008         	goto	u1901
  1793  0010EC                     u1901:
  1794  0010EC  EF82  F008         	goto	l2293
  1795  0010F0                     u1900:
  1796  0010F0  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1797  0010F2  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1798  0010F4  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1799  0010F6  6C05               	negf	___aldiv@divisor^0,c
  1800  0010F8  0E00               	movlw	0
  1801  0010FA  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1802  0010FC  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1803  0010FE  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1804  001100  0E01               	movlw	1
  1805  001102  6E0A               	movwf	___aldiv@sign^0,c
  1806  001104                     l2293:
  1807  001104  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1808  001106  EF89  F008         	goto	u1910
  1809  00110A  EF87  F008         	goto	u1911
  1810  00110E                     u1911:
  1811  00110E  EF93  F008         	goto	l2299
  1812  001112                     u1910:
  1813  001112  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1814  001114  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1815  001116  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1816  001118  6C01               	negf	___aldiv@dividend^0,c
  1817  00111A  0E00               	movlw	0
  1818  00111C  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1819  00111E  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1820  001120  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1821  001122  0E01               	movlw	1
  1822  001124  1A0A               	xorwf	___aldiv@sign^0,f,c
  1823  001126                     l2299:
  1824  001126  0E00               	movlw	0
  1825  001128  6E0B               	movwf	___aldiv@quotient^0,c
  1826  00112A  0E00               	movlw	0
  1827  00112C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1828  00112E  0E00               	movlw	0
  1829  001130  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1830  001132  0E00               	movlw	0
  1831  001134  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1832  001136  5005               	movf	___aldiv@divisor^0,w,c
  1833  001138  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1834  00113A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1835  00113C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1836  00113E  B4D8               	btfsc	status,2,c
  1837  001140  EFA4  F008         	goto	u1921
  1838  001144  EFA6  F008         	goto	u1920
  1839  001148                     u1921:
  1840  001148  EFDC  F008         	goto	l2321
  1841  00114C                     u1920:
  1842  00114C  0E01               	movlw	1
  1843  00114E  6E09               	movwf	___aldiv@counter^0,c
  1844  001150  EFB0  F008         	goto	l2307
  1845  001154                     l2305:
  1846  001154  90D8               	bcf	status,0,c
  1847  001156  3605               	rlcf	___aldiv@divisor^0,f,c
  1848  001158  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1849  00115A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1850  00115C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1851  00115E  2A09               	incf	___aldiv@counter^0,f,c
  1852  001160                     l2307:
  1853  001160  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1854  001162  EFB5  F008         	goto	u1931
  1855  001166  EFB7  F008         	goto	u1930
  1856  00116A                     u1931:
  1857  00116A  EFAA  F008         	goto	l2305
  1858  00116E                     u1930:
  1859  00116E                     l2309:
  1860  00116E  90D8               	bcf	status,0,c
  1861  001170  360B               	rlcf	___aldiv@quotient^0,f,c
  1862  001172  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1863  001174  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1864  001176  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1865  001178  5005               	movf	___aldiv@divisor^0,w,c
  1866  00117A  5C01               	subwf	___aldiv@dividend^0,w,c
  1867  00117C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1868  00117E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1869  001180  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1870  001182  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1871  001184  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1872  001186  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1873  001188  A0D8               	btfss	status,0,c
  1874  00118A  EFC9  F008         	goto	u1941
  1875  00118E  EFCB  F008         	goto	u1940
  1876  001192                     u1941:
  1877  001192  EFD4  F008         	goto	l2317
  1878  001196                     u1940:
  1879  001196  5005               	movf	___aldiv@divisor^0,w,c
  1880  001198  5E01               	subwf	___aldiv@dividend^0,f,c
  1881  00119A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1882  00119C  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1883  00119E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1884  0011A0  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1885  0011A2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1886  0011A4  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1887  0011A6  800B               	bsf	___aldiv@quotient^0,0,c
  1888  0011A8                     l2317:
  1889  0011A8  90D8               	bcf	status,0,c
  1890  0011AA  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1891  0011AC  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1892  0011AE  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1893  0011B0  3205               	rrcf	___aldiv@divisor^0,f,c
  1894  0011B2  2E09               	decfsz	___aldiv@counter^0,f,c
  1895  0011B4  EFB7  F008         	goto	l2309
  1896  0011B8                     l2321:
  1897  0011B8  500A               	movf	___aldiv@sign^0,w,c
  1898  0011BA  B4D8               	btfsc	status,2,c
  1899  0011BC  EFE2  F008         	goto	u1951
  1900  0011C0  EFE4  F008         	goto	u1950
  1901  0011C4                     u1951:
  1902  0011C4  EFEC  F008         	goto	l2325
  1903  0011C8                     u1950:
  1904  0011C8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1905  0011CA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1906  0011CC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1907  0011CE  6C0B               	negf	___aldiv@quotient^0,c
  1908  0011D0  0E00               	movlw	0
  1909  0011D2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1910  0011D4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1911  0011D6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1912  0011D8                     l2325:
  1913  0011D8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1914  0011DC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1915  0011E0  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1916  0011E4  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1917  0011E8  0012               	return		;funcret
  1918  0011EA                     __end_of___aldiv:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _menuCtrl *****************
  1922 ;; Defined at:
  1923 ;;		line 111 in file "menu.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  menuNum         1    wreg     unsigned char 
  1926 ;;  subMenu         1    5[COMRAM] unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  menuNum         1    8[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         1       0       0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0
  1940 ;;      Temps:          2       0       0       0       0       0       0
  1941 ;;      Totals:         4       0       0       0       0       0       0
  1942 ;;Total ram usage:        4 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 1
  1945 ;; This function calls:
  1946 ;;		_kpRead
  1947 ;;		_kpReadKey
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text13
  1954  000B58                     __ptext13:
  1955                           	callstack 0
  1956  000B58                     _menuCtrl:
  1957                           	callstack 29
  1958                           
  1959                           ;incstack = 0
  1960                           ;menuCtrl@menuNum stored from wreg
  1961  000B58  6E09               	movwf	menuCtrl@menuNum^0,c
  1962  000B5A                     
  1963                           ;menu.c: 112:     if (kpRead() != aux2) {
  1964  000B5A  EC06  F00F         	call	_kpRead	;wreg free
  1965  000B5E  501B               	movf	_aux2^0,w,c
  1966  000B60  1801               	xorwf	?_kpRead^0,w,c
  1967  000B62  E109               	bnz	u2430
  1968  000B64  501C               	movf	(_aux2+1)^0,w,c
  1969  000B66  1802               	xorwf	(?_kpRead+1)^0,w,c
  1970  000B68  B4D8               	btfsc	status,2,c
  1971  000B6A  EFB9  F005         	goto	u2431
  1972  000B6E  EFBB  F005         	goto	u2430
  1973  000B72                     u2431:
  1974  000B72  EF85  F006         	goto	l342
  1975  000B76                     u2430:
  1976  000B76                     
  1977                           ;menu.c: 113:         aux2 = kpRead();
  1978  000B76  EC06  F00F         	call	_kpRead	;wreg free
  1979  000B7A  C001  F01B         	movff	?_kpRead,_aux2
  1980  000B7E  C002  F01C         	movff	?_kpRead+1,_aux2+1
  1981  000B82                     
  1982                           ;menu.c: 114:         if (kpReadKey() != 0) {
  1983  000B82  EC15  F00C         	call	_kpReadKey	;wreg free
  1984  000B86  0900               	iorlw	0
  1985  000B88  B4D8               	btfsc	status,2,c
  1986  000B8A  EFC9  F005         	goto	u2441
  1987  000B8E  EFCB  F005         	goto	u2440
  1988  000B92                     u2441:
  1989  000B92  EF85  F006         	goto	l342
  1990  000B96                     u2440:
  1991  000B96                     
  1992                           ;menu.c: 115:             ctrl = kpReadKey();
  1993  000B96  EC15  F00C         	call	_kpReadKey	;wreg free
  1994  000B9A  6E2A               	movwf	_ctrl^0,c
  1995                           
  1996                           ;menu.c: 117:             switch (ctrl) {
  1997  000B9C  EF70  F006         	goto	l2717
  1998  000BA0                     l2673:
  1999                           
  2000                           ;menu.c: 119:                     if ((subMenu == 2)&&(menuNum == 1)&&(temp<280)) {
  2001  000BA0  0E02               	movlw	2
  2002  000BA2  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2003  000BA4  A4D8               	btfss	status,2,c
  2004  000BA6  EFD7  F005         	goto	u2451
  2005  000BAA  EFD9  F005         	goto	u2450
  2006  000BAE                     u2451:
  2007  000BAE  EFF0  F005         	goto	l2681
  2008  000BB2                     u2450:
  2009  000BB2  0409               	decf	menuCtrl@menuNum^0,w,c
  2010  000BB4  A4D8               	btfss	status,2,c
  2011  000BB6  EFDF  F005         	goto	u2461
  2012  000BBA  EFE1  F005         	goto	u2460
  2013  000BBE                     u2461:
  2014  000BBE  EFF0  F005         	goto	l2681
  2015  000BC2                     u2460:
  2016  000BC2  0E18               	movlw	24
  2017  000BC4  5C2D               	subwf	_temp^0,w,c
  2018  000BC6  0E01               	movlw	1
  2019  000BC8  582E               	subwfb	(_temp+1)^0,w,c
  2020  000BCA  B0D8               	btfsc	status,0,c
  2021  000BCC  EFEA  F005         	goto	u2471
  2022  000BD0  EFEC  F005         	goto	u2470
  2023  000BD4                     u2471:
  2024  000BD4  EFF0  F005         	goto	l2681
  2025  000BD8                     u2470:
  2026  000BD8                     
  2027                           ;menu.c: 120:                         temp++;
  2028  000BD8  4A2D               	infsnz	_temp^0,f,c
  2029  000BDA  2A2E               	incf	(_temp+1)^0,f,c
  2030                           
  2031                           ;menu.c: 121:                     }
  2032  000BDC  EF85  F006         	goto	l342
  2033  000BE0                     l2681:
  2034                           
  2035                           ;menu.c: 123:                         if ((subMenu == 2)&&(menuNum == 2)&&(pres<20)) {
  2036  000BE0  0E02               	movlw	2
  2037  000BE2  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2038  000BE4  A4D8               	btfss	status,2,c
  2039  000BE6  EFF7  F005         	goto	u2481
  2040  000BEA  EFF9  F005         	goto	u2480
  2041  000BEE                     u2481:
  2042  000BEE  EF11  F006         	goto	l2689
  2043  000BF2                     u2480:
  2044  000BF2  0E02               	movlw	2
  2045  000BF4  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2046  000BF6  A4D8               	btfss	status,2,c
  2047  000BF8  EF00  F006         	goto	u2491
  2048  000BFC  EF02  F006         	goto	u2490
  2049  000C00                     u2491:
  2050  000C00  EF11  F006         	goto	l2689
  2051  000C04                     u2490:
  2052  000C04  5030               	movf	(_pres+1)^0,w,c
  2053  000C06  E107               	bnz	u2501
  2054  000C08  0E14               	movlw	20
  2055  000C0A  5C2F               	subwf	_pres^0,w,c
  2056  000C0C  B0D8               	btfsc	status,0,c
  2057  000C0E  EF0B  F006         	goto	u2501
  2058  000C12  EF0D  F006         	goto	u2500
  2059  000C16                     u2501:
  2060  000C16  EF11  F006         	goto	l2689
  2061  000C1A                     u2500:
  2062  000C1A                     
  2063                           ;menu.c: 124:                             pres++;
  2064  000C1A  4A2F               	infsnz	_pres^0,f,c
  2065  000C1C  2A30               	incf	(_pres+1)^0,f,c
  2066                           
  2067                           ;menu.c: 125:                         } else {
  2068  000C1E  EF85  F006         	goto	l342
  2069  000C22                     l2689:
  2070                           
  2071                           ;menu.c: 126:                             if ((subMenu == 2)&&(menuNum == 3)&&(lev<=100)
      +                          ) {
  2072  000C22  0E02               	movlw	2
  2073  000C24  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2074  000C26  A4D8               	btfss	status,2,c
  2075  000C28  EF18  F006         	goto	u2511
  2076  000C2C  EF1A  F006         	goto	u2510
  2077  000C30                     u2511:
  2078  000C30  EF85  F006         	goto	l334
  2079  000C34                     u2510:
  2080  000C34  0E03               	movlw	3
  2081  000C36  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2082  000C38  A4D8               	btfss	status,2,c
  2083  000C3A  EF21  F006         	goto	u2521
  2084  000C3E  EF23  F006         	goto	u2520
  2085  000C42                     u2521:
  2086  000C42  EF85  F006         	goto	l334
  2087  000C46                     u2520:
  2088  000C46  0E65               	movlw	101
  2089  000C48  6031               	cpfslt	_lev^0,c
  2090  000C4A  EF29  F006         	goto	u2531
  2091  000C4E  EF2B  F006         	goto	u2530
  2092  000C52                     u2531:
  2093  000C52  EF85  F006         	goto	l334
  2094  000C56                     u2530:
  2095  000C56                     
  2096                           ;menu.c: 127:                                 lev++;
  2097  000C56  2A31               	incf	_lev^0,f,c
  2098  000C58  EF85  F006         	goto	l342
  2099  000C5C                     l2697:
  2100                           
  2101                           ;menu.c: 134:                     if ((subMenu == 2)&&(menuNum == 1)&&(temp >= 0)) {
  2102  000C5C  0E02               	movlw	2
  2103  000C5E  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2104  000C60  A4D8               	btfss	status,2,c
  2105  000C62  EF35  F006         	goto	u2541
  2106  000C66  EF37  F006         	goto	u2540
  2107  000C6A                     u2541:
  2108  000C6A  EF44  F006         	goto	l2703
  2109  000C6E                     u2540:
  2110  000C6E  0409               	decf	menuCtrl@menuNum^0,w,c
  2111  000C70  A4D8               	btfss	status,2,c
  2112  000C72  EF3D  F006         	goto	u2551
  2113  000C76  EF3F  F006         	goto	u2550
  2114  000C7A                     u2551:
  2115  000C7A  EF44  F006         	goto	l2703
  2116  000C7E                     u2550:
  2117  000C7E                     
  2118                           ;menu.c: 135:                         temp--;
  2119  000C7E  062D               	decf	_temp^0,f,c
  2120  000C80  A0D8               	btfss	status,0,c
  2121  000C82  062E               	decf	(_temp+1)^0,f,c
  2122                           
  2123                           ;menu.c: 136:                     } else {
  2124  000C84  EF85  F006         	goto	l342
  2125  000C88                     l2703:
  2126                           
  2127                           ;menu.c: 137:                         if ((subMenu == 2)&&(menuNum == 2)&&(pres >= 0)) {
  2128  000C88  0E02               	movlw	2
  2129  000C8A  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2130  000C8C  A4D8               	btfss	status,2,c
  2131  000C8E  EF4B  F006         	goto	u2561
  2132  000C92  EF4D  F006         	goto	u2560
  2133  000C96                     u2561:
  2134  000C96  EF5B  F006         	goto	l2709
  2135  000C9A                     u2560:
  2136  000C9A  0E02               	movlw	2
  2137  000C9C  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2138  000C9E  A4D8               	btfss	status,2,c
  2139  000CA0  EF54  F006         	goto	u2571
  2140  000CA4  EF56  F006         	goto	u2570
  2141  000CA8                     u2571:
  2142  000CA8  EF5B  F006         	goto	l2709
  2143  000CAC                     u2570:
  2144  000CAC                     
  2145                           ;menu.c: 138:                             pres--;
  2146  000CAC  062F               	decf	_pres^0,f,c
  2147  000CAE  A0D8               	btfss	status,0,c
  2148  000CB0  0630               	decf	(_pres+1)^0,f,c
  2149                           
  2150                           ;menu.c: 139:                         } else {
  2151  000CB2  EF85  F006         	goto	l342
  2152  000CB6                     l2709:
  2153                           
  2154                           ;menu.c: 140:                             if ((subMenu == 2)&&(menuNum == 3)&&(lev >= 0)
      +                          ) {
  2155  000CB6  0E02               	movlw	2
  2156  000CB8  1806               	xorwf	menuCtrl@subMenu^0,w,c
  2157  000CBA  A4D8               	btfss	status,2,c
  2158  000CBC  EF62  F006         	goto	u2581
  2159  000CC0  EF64  F006         	goto	u2580
  2160  000CC4                     u2581:
  2161  000CC4  EF85  F006         	goto	l334
  2162  000CC8                     u2580:
  2163  000CC8  0E03               	movlw	3
  2164  000CCA  1809               	xorwf	menuCtrl@menuNum^0,w,c
  2165  000CCC  A4D8               	btfss	status,2,c
  2166  000CCE  EF6B  F006         	goto	u2591
  2167  000CD2  EF6D  F006         	goto	u2590
  2168  000CD6                     u2591:
  2169  000CD6  EF85  F006         	goto	l334
  2170  000CDA                     u2590:
  2171  000CDA                     
  2172                           ;menu.c: 141:                                 lev--;
  2173  000CDA  0631               	decf	_lev^0,f,c
  2174  000CDC  EF85  F006         	goto	l342
  2175  000CE0                     l2717:
  2176  000CE0  502A               	movf	_ctrl^0,w,c
  2177  000CE2  6E07               	movwf	??_menuCtrl^0,c
  2178  000CE4  6A08               	clrf	(??_menuCtrl+1)^0,c
  2179                           
  2180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2181                           ; Switch size 1, requested type "simple"
  2182                           ; Number of cases is 1, Range of values is 0 to 0
  2183                           ; switch strategies available:
  2184                           ; Name         Instructions Cycles
  2185                           ; simple_byte            4     3 (average)
  2186                           ;	Chosen strategy is simple_byte
  2187  000CE6  5008               	movf	(??_menuCtrl+1)^0,w,c
  2188  000CE8  0A00               	xorlw	0	; case 0
  2189  000CEA  B4D8               	btfsc	status,2,c
  2190  000CEC  EF7A  F006         	goto	l2949
  2191  000CF0  EF85  F006         	goto	l334
  2192  000CF4                     l2949:
  2193                           
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 2, Range of values is 68 to 85
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte            7     4 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200  000CF4  5007               	movf	??_menuCtrl^0,w,c
  2201  000CF6  0A44               	xorlw	68	; case 68
  2202  000CF8  B4D8               	btfsc	status,2,c
  2203  000CFA  EF2E  F006         	goto	l2697
  2204  000CFE  0A11               	xorlw	17	; case 85
  2205  000D00  B4D8               	btfsc	status,2,c
  2206  000D02  EFD0  F005         	goto	l2673
  2207  000D06  EF85  F006         	goto	l334
  2208  000D0A                     l334:
  2209  000D0A                     l342:
  2210  000D0A  0012               	return		;funcret
  2211  000D0C                     __end_of_menuCtrl:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _menu3 *****************
  2215 ;; Defined at:
  2216 ;;		line 92 in file "menu.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  subMenu         1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  subMenu         1   22[COMRAM] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2230 ;;      Params:         0       0       0       0       0       0       0
  2231 ;;      Locals:         1       0       0       0       0       0       0
  2232 ;;      Temps:          2       0       0       0       0       0       0
  2233 ;;      Totals:         3       0       0       0       0       0       0
  2234 ;;Total ram usage:        3 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 6
  2237 ;; This function calls:
  2238 ;;		_lcdCommand
  2239 ;;		_lcdNumber
  2240 ;;		_lcdString
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text14
  2247  001718                     __ptext14:
  2248                           	callstack 0
  2249  001718                     _menu3:
  2250                           	callstack 24
  2251                           
  2252                           ;incstack = 0
  2253                           ;menu3@subMenu stored from wreg
  2254  001718  6E17               	movwf	menu3@subMenu^0,c
  2255  00171A                     
  2256                           ;menu.c: 93:     switch (subMenu) {
  2257  00171A  EFC2  F00B         	goto	l2659
  2258  00171E                     l2641:
  2259                           
  2260                           ;menu.c: 95:             lcdCommand(0x80);
  2261  00171E  0E80               	movlw	128
  2262  001720  ECCA  F00E         	call	_lcdCommand
  2263  001724                     
  2264                           ;menu.c: 96:             lcdString("<  Nivel Agua   ");
  2265  001724  0E3D               	movlw	low STR_11
  2266  001726  6E0F               	movwf	lcdString@msg^0,c
  2267  001728  0E06               	movlw	high STR_11
  2268  00172A  6E10               	movwf	(lcdString@msg+1)^0,c
  2269  00172C  EC53  F00D         	call	_lcdString	;wreg free
  2270  001730                     
  2271                           ;menu.c: 97:             lcdCommand(0xC0);
  2272  001730  0EC0               	movlw	192
  2273  001732  ECCA  F00E         	call	_lcdCommand
  2274                           
  2275                           ;menu.c: 98:             lcdString("                ");
  2276  001736  0E1B               	movlw	low STR_2
  2277  001738  6E0F               	movwf	lcdString@msg^0,c
  2278  00173A  0E06               	movlw	high STR_2
  2279  00173C  6E10               	movwf	(lcdString@msg+1)^0,c
  2280  00173E  EC53  F00D         	call	_lcdString	;wreg free
  2281                           
  2282                           ;menu.c: 99:             break;
  2283  001742  EFD7  F00B         	goto	l322
  2284  001746                     l2647:
  2285                           
  2286                           ;menu.c: 101:             lcdCommand(0x80);
  2287  001746  0E80               	movlw	128
  2288  001748  ECCA  F00E         	call	_lcdCommand
  2289  00174C                     
  2290                           ;menu.c: 102:             lcdString("   Nivel Agua:  ");
  2291  00174C  0E5F               	movlw	low STR_13
  2292  00174E  6E0F               	movwf	lcdString@msg^0,c
  2293  001750  0E06               	movlw	high STR_13
  2294  001752  6E10               	movwf	(lcdString@msg+1)^0,c
  2295  001754  EC53  F00D         	call	_lcdString	;wreg free
  2296  001758                     
  2297                           ;menu.c: 103:             lcdCommand(0xC0);
  2298  001758  0EC0               	movlw	192
  2299  00175A  ECCA  F00E         	call	_lcdCommand
  2300                           
  2301                           ;menu.c: 104:             lcdString("    ");
  2302  00175E  0E27               	movlw	low (STR_2+12)
  2303  001760  6E0F               	movwf	lcdString@msg^0,c
  2304  001762  0E06               	movlw	high (STR_2+12)
  2305  001764  6E10               	movwf	(lcdString@msg+1)^0,c
  2306  001766  EC53  F00D         	call	_lcdString	;wreg free
  2307  00176A                     
  2308                           ;menu.c: 105:             lcdNumber(lev);
  2309  00176A  C031  F00F         	movff	_lev,lcdNumber@value
  2310  00176E  6A10               	clrf	(lcdNumber@value+1)^0,c
  2311  001770  EC8B  F00C         	call	_lcdNumber	;wreg free
  2312  001774                     
  2313                           ;menu.c: 106:             lcdString(" %      ");
  2314  001774  0E9F               	movlw	low STR_15
  2315  001776  6E0F               	movwf	lcdString@msg^0,c
  2316  001778  0E06               	movlw	high STR_15
  2317  00177A  6E10               	movwf	(lcdString@msg+1)^0,c
  2318  00177C  EC53  F00D         	call	_lcdString	;wreg free
  2319                           
  2320                           ;menu.c: 107:             break;
  2321  001780  EFD7  F00B         	goto	l322
  2322  001784                     l2659:
  2323  001784  5017               	movf	menu3@subMenu^0,w,c
  2324  001786  6E15               	movwf	??_menu3^0,c
  2325  001788  6A16               	clrf	(??_menu3+1)^0,c
  2326                           
  2327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2328                           ; Switch size 1, requested type "simple"
  2329                           ; Number of cases is 1, Range of values is 0 to 0
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte            4     3 (average)
  2333                           ;	Chosen strategy is simple_byte
  2334  00178A  5016               	movf	(??_menu3+1)^0,w,c
  2335  00178C  0A00               	xorlw	0	; case 0
  2336  00178E  B4D8               	btfsc	status,2,c
  2337  001790  EFCC  F00B         	goto	l2951
  2338  001794  EFD7  F00B         	goto	l322
  2339  001798                     l2951:
  2340                           
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 2, Range of values is 1 to 2
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte            7     4 (average)
  2346                           ;	Chosen strategy is simple_byte
  2347  001798  5015               	movf	??_menu3^0,w,c
  2348  00179A  0A01               	xorlw	1	; case 1
  2349  00179C  B4D8               	btfsc	status,2,c
  2350  00179E  EF8F  F00B         	goto	l2641
  2351  0017A2  0A03               	xorlw	3	; case 2
  2352  0017A4  B4D8               	btfsc	status,2,c
  2353  0017A6  EFA3  F00B         	goto	l2647
  2354  0017AA  EFD7  F00B         	goto	l322
  2355  0017AE                     l322:
  2356  0017AE  0012               	return		;funcret
  2357  0017B0                     __end_of_menu3:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _menu2 *****************
  2361 ;; Defined at:
  2362 ;;		line 72 in file "menu.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  subMenu         1    wreg     unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  subMenu         1   22[COMRAM] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2376 ;;      Params:         0       0       0       0       0       0       0
  2377 ;;      Locals:         1       0       0       0       0       0       0
  2378 ;;      Temps:          2       0       0       0       0       0       0
  2379 ;;      Totals:         3       0       0       0       0       0       0
  2380 ;;Total ram usage:        3 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 6
  2383 ;; This function calls:
  2384 ;;		_lcdCommand
  2385 ;;		_lcdNumber
  2386 ;;		_lcdString
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text15
  2393  0015E4                     __ptext15:
  2394                           	callstack 0
  2395  0015E4                     _menu2:
  2396                           	callstack 24
  2397                           
  2398                           ;incstack = 0
  2399                           ;menu2@subMenu stored from wreg
  2400  0015E4  6E17               	movwf	menu2@subMenu^0,c
  2401  0015E6                     
  2402                           ;menu.c: 73:     switch (subMenu) {
  2403  0015E6  EF29  F00B         	goto	l2633
  2404  0015EA                     l2615:
  2405                           
  2406                           ;menu.c: 75:             lcdCommand(0x80);
  2407  0015EA  0E80               	movlw	128
  2408  0015EC  ECCA  F00E         	call	_lcdCommand
  2409  0015F0                     
  2410                           ;menu.c: 76:             lcdString("<    Pressao   >");
  2411  0015F0  0E70               	movlw	low STR_6
  2412  0015F2  6E0F               	movwf	lcdString@msg^0,c
  2413  0015F4  0E06               	movlw	high STR_6
  2414  0015F6  6E10               	movwf	(lcdString@msg+1)^0,c
  2415  0015F8  EC53  F00D         	call	_lcdString	;wreg free
  2416  0015FC                     
  2417                           ;menu.c: 77:             lcdCommand(0xC0);
  2418  0015FC  0EC0               	movlw	192
  2419  0015FE  ECCA  F00E         	call	_lcdCommand
  2420                           
  2421                           ;menu.c: 78:             lcdString("                ");
  2422  001602  0E1B               	movlw	low STR_2
  2423  001604  6E0F               	movwf	lcdString@msg^0,c
  2424  001606  0E06               	movlw	high STR_2
  2425  001608  6E10               	movwf	(lcdString@msg+1)^0,c
  2426  00160A  EC53  F00D         	call	_lcdString	;wreg free
  2427                           
  2428                           ;menu.c: 79:             break;
  2429  00160E  EF3E  F00B         	goto	l315
  2430  001612                     l2621:
  2431                           
  2432                           ;menu.c: 81:             lcdCommand(0x80);
  2433  001612  0E80               	movlw	128
  2434  001614  ECCA  F00E         	call	_lcdCommand
  2435  001618                     
  2436                           ;menu.c: 82:             lcdString("    Pressao:    ");
  2437  001618  0E2C               	movlw	low STR_8
  2438  00161A  6E0F               	movwf	lcdString@msg^0,c
  2439  00161C  0E06               	movlw	high STR_8
  2440  00161E  6E10               	movwf	(lcdString@msg+1)^0,c
  2441  001620  EC53  F00D         	call	_lcdString	;wreg free
  2442  001624                     
  2443                           ;menu.c: 84:             lcdCommand(0xC0);
  2444  001624  0EC0               	movlw	192
  2445  001626  ECCA  F00E         	call	_lcdCommand
  2446                           
  2447                           ;menu.c: 85:             lcdString("    ");
  2448  00162A  0E27               	movlw	low (STR_2+12)
  2449  00162C  6E0F               	movwf	lcdString@msg^0,c
  2450  00162E  0E06               	movlw	high (STR_2+12)
  2451  001630  6E10               	movwf	(lcdString@msg+1)^0,c
  2452  001632  EC53  F00D         	call	_lcdString	;wreg free
  2453  001636                     
  2454                           ;menu.c: 86:             lcdNumber(pres);
  2455  001636  C02F  F00F         	movff	_pres,lcdNumber@value
  2456  00163A  C030  F010         	movff	_pres+1,lcdNumber@value+1
  2457  00163E  EC8B  F00C         	call	_lcdNumber	;wreg free
  2458  001642                     
  2459                           ;menu.c: 87:             lcdString(" bar    ");
  2460  001642  0EB1               	movlw	low STR_10
  2461  001644  6E0F               	movwf	lcdString@msg^0,c
  2462  001646  0E06               	movlw	high STR_10
  2463  001648  6E10               	movwf	(lcdString@msg+1)^0,c
  2464  00164A  EC53  F00D         	call	_lcdString	;wreg free
  2465                           
  2466                           ;menu.c: 88:             break;
  2467  00164E  EF3E  F00B         	goto	l315
  2468  001652                     l2633:
  2469  001652  5017               	movf	menu2@subMenu^0,w,c
  2470  001654  6E15               	movwf	??_menu2^0,c
  2471  001656  6A16               	clrf	(??_menu2+1)^0,c
  2472                           
  2473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2474                           ; Switch size 1, requested type "simple"
  2475                           ; Number of cases is 1, Range of values is 0 to 0
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte            4     3 (average)
  2479                           ;	Chosen strategy is simple_byte
  2480  001658  5016               	movf	(??_menu2+1)^0,w,c
  2481  00165A  0A00               	xorlw	0	; case 0
  2482  00165C  B4D8               	btfsc	status,2,c
  2483  00165E  EF33  F00B         	goto	l2953
  2484  001662  EF3E  F00B         	goto	l315
  2485  001666                     l2953:
  2486                           
  2487                           ; Switch size 1, requested type "simple"
  2488                           ; Number of cases is 2, Range of values is 1 to 2
  2489                           ; switch strategies available:
  2490                           ; Name         Instructions Cycles
  2491                           ; simple_byte            7     4 (average)
  2492                           ;	Chosen strategy is simple_byte
  2493  001666  5015               	movf	??_menu2^0,w,c
  2494  001668  0A01               	xorlw	1	; case 1
  2495  00166A  B4D8               	btfsc	status,2,c
  2496  00166C  EFF5  F00A         	goto	l2615
  2497  001670  0A03               	xorlw	3	; case 2
  2498  001672  B4D8               	btfsc	status,2,c
  2499  001674  EF09  F00B         	goto	l2621
  2500  001678  EF3E  F00B         	goto	l315
  2501  00167C                     l315:
  2502  00167C  0012               	return		;funcret
  2503  00167E                     __end_of_menu2:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _menu1 *****************
  2507 ;; Defined at:
  2508 ;;		line 53 in file "menu.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  subMenu         1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  subMenu         1   22[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0
  2524 ;;      Temps:          2       0       0       0       0       0       0
  2525 ;;      Totals:         3       0       0       0       0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 6
  2529 ;; This function calls:
  2530 ;;		_lcdCommand
  2531 ;;		_lcdNumber
  2532 ;;		_lcdString
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text16
  2539  00167E                     __ptext16:
  2540                           	callstack 0
  2541  00167E                     _menu1:
  2542                           	callstack 24
  2543                           
  2544                           ;incstack = 0
  2545                           ;menu1@subMenu stored from wreg
  2546  00167E  6E17               	movwf	menu1@subMenu^0,c
  2547  001680                     
  2548                           ;menu.c: 54:     switch (subMenu) {
  2549  001680  EF76  F00B         	goto	l2607
  2550  001684                     l2589:
  2551                           
  2552                           ;menu.c: 56:             lcdCommand(0x80);
  2553  001684  0E80               	movlw	128
  2554  001686  ECCA  F00E         	call	_lcdCommand
  2555  00168A                     
  2556                           ;menu.c: 57:             lcdString("  Temperatura  >");
  2557  00168A  0E81               	movlw	low STR_1
  2558  00168C  6E0F               	movwf	lcdString@msg^0,c
  2559  00168E  0E06               	movlw	high STR_1
  2560  001690  6E10               	movwf	(lcdString@msg+1)^0,c
  2561  001692  EC53  F00D         	call	_lcdString	;wreg free
  2562  001696                     
  2563                           ;menu.c: 58:             lcdCommand(0xC0);
  2564  001696  0EC0               	movlw	192
  2565  001698  ECCA  F00E         	call	_lcdCommand
  2566                           
  2567                           ;menu.c: 59:             lcdString("                ");
  2568  00169C  0E1B               	movlw	low STR_2
  2569  00169E  6E0F               	movwf	lcdString@msg^0,c
  2570  0016A0  0E06               	movlw	high STR_2
  2571  0016A2  6E10               	movwf	(lcdString@msg+1)^0,c
  2572  0016A4  EC53  F00D         	call	_lcdString	;wreg free
  2573                           
  2574                           ;menu.c: 60:             break;
  2575  0016A8  EF8B  F00B         	goto	l308
  2576  0016AC                     l2595:
  2577                           
  2578                           ;menu.c: 62:             lcdCommand(0x80);
  2579  0016AC  0E80               	movlw	128
  2580  0016AE  ECCA  F00E         	call	_lcdCommand
  2581  0016B2                     
  2582                           ;menu.c: 63:             lcdString("  Temperatura:  ");
  2583  0016B2  0E4E               	movlw	low STR_3
  2584  0016B4  6E0F               	movwf	lcdString@msg^0,c
  2585  0016B6  0E06               	movlw	high STR_3
  2586  0016B8  6E10               	movwf	(lcdString@msg+1)^0,c
  2587  0016BA  EC53  F00D         	call	_lcdString	;wreg free
  2588  0016BE                     
  2589                           ;menu.c: 64:             lcdCommand(0xC0);
  2590  0016BE  0EC0               	movlw	192
  2591  0016C0  ECCA  F00E         	call	_lcdCommand
  2592                           
  2593                           ;menu.c: 65:             lcdString("    ");
  2594  0016C4  0E27               	movlw	low (STR_2+12)
  2595  0016C6  6E0F               	movwf	lcdString@msg^0,c
  2596  0016C8  0E06               	movlw	high (STR_2+12)
  2597  0016CA  6E10               	movwf	(lcdString@msg+1)^0,c
  2598  0016CC  EC53  F00D         	call	_lcdString	;wreg free
  2599  0016D0                     
  2600                           ;menu.c: 66:             lcdNumber(temp);
  2601  0016D0  C02D  F00F         	movff	_temp,lcdNumber@value
  2602  0016D4  C02E  F010         	movff	_temp+1,lcdNumber@value+1
  2603  0016D8  EC8B  F00C         	call	_lcdNumber	;wreg free
  2604  0016DC                     
  2605                           ;menu.c: 67:             lcdString(" ºC     ");
  2606  0016DC  0EA8               	movlw	low STR_5
  2607  0016DE  6E0F               	movwf	lcdString@msg^0,c
  2608  0016E0  0E06               	movlw	high STR_5
  2609  0016E2  6E10               	movwf	(lcdString@msg+1)^0,c
  2610  0016E4  EC53  F00D         	call	_lcdString	;wreg free
  2611                           
  2612                           ;menu.c: 68:             break;
  2613  0016E8  EF8B  F00B         	goto	l308
  2614  0016EC                     l2607:
  2615  0016EC  5017               	movf	menu1@subMenu^0,w,c
  2616  0016EE  6E15               	movwf	??_menu1^0,c
  2617  0016F0  6A16               	clrf	(??_menu1+1)^0,c
  2618                           
  2619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2620                           ; Switch size 1, requested type "simple"
  2621                           ; Number of cases is 1, Range of values is 0 to 0
  2622                           ; switch strategies available:
  2623                           ; Name         Instructions Cycles
  2624                           ; simple_byte            4     3 (average)
  2625                           ;	Chosen strategy is simple_byte
  2626  0016F2  5016               	movf	(??_menu1+1)^0,w,c
  2627  0016F4  0A00               	xorlw	0	; case 0
  2628  0016F6  B4D8               	btfsc	status,2,c
  2629  0016F8  EF80  F00B         	goto	l2955
  2630  0016FC  EF8B  F00B         	goto	l308
  2631  001700                     l2955:
  2632                           
  2633                           ; Switch size 1, requested type "simple"
  2634                           ; Number of cases is 2, Range of values is 1 to 2
  2635                           ; switch strategies available:
  2636                           ; Name         Instructions Cycles
  2637                           ; simple_byte            7     4 (average)
  2638                           ;	Chosen strategy is simple_byte
  2639  001700  5015               	movf	??_menu1^0,w,c
  2640  001702  0A01               	xorlw	1	; case 1
  2641  001704  B4D8               	btfsc	status,2,c
  2642  001706  EF42  F00B         	goto	l2589
  2643  00170A  0A03               	xorlw	3	; case 2
  2644  00170C  B4D8               	btfsc	status,2,c
  2645  00170E  EF56  F00B         	goto	l2595
  2646  001712  EF8B  F00B         	goto	l308
  2647  001716                     l308:
  2648  001716  0012               	return		;funcret
  2649  001718                     __end_of_menu1:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _lcdString *****************
  2653 ;; Defined at:
  2654 ;;		line 57 in file "lcd.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2657 ;;		 -> STR_16(13), STR_15(9), STR_14(5), STR_13(17), 
  2658 ;;		 -> STR_12(17), STR_11(17), STR_10(9), STR_9(5), 
  2659 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(9), 
  2660 ;;		 -> STR_4(5), STR_3(17), STR_2(17), STR_1(17), 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  i               2   18[COMRAM] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         2       0       0       0       0       0       0
  2673 ;;      Locals:         2       0       0       0       0       0       0
  2674 ;;      Temps:          2       0       0       0       0       0       0
  2675 ;;      Totals:         6       0       0       0       0       0       0
  2676 ;;Total ram usage:        6 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 5
  2679 ;; This function calls:
  2680 ;;		_lcdChar
  2681 ;; This function is called by:
  2682 ;;		_menu1
  2683 ;;		_menu2
  2684 ;;		_menu3
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text17
  2690  001AA6                     __ptext17:
  2691                           	callstack 0
  2692  001AA6                     _lcdString:
  2693                           	callstack 24
  2694  001AA6                     
  2695                           ;lcd.c: 58:  int i = 0;
  2696  001AA6  0E00               	movlw	0
  2697  001AA8  6E14               	movwf	(lcdString@i+1)^0,c
  2698  001AAA  0E00               	movlw	0
  2699  001AAC  6E13               	movwf	lcdString@i^0,c
  2700                           
  2701                           ;lcd.c: 59:  while (msg[i] != 0) {
  2702  001AAE  EF69  F00D         	goto	l2483
  2703  001AB2                     l2479:
  2704                           
  2705                           ;lcd.c: 60:   lcdChar(msg[i]);
  2706  001AB2  5013               	movf	lcdString@i^0,w,c
  2707  001AB4  240F               	addwf	lcdString@msg^0,w,c
  2708  001AB6  6E11               	movwf	??_lcdString^0,c
  2709  001AB8  5014               	movf	(lcdString@i+1)^0,w,c
  2710  001ABA  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2711  001ABC  6E12               	movwf	(??_lcdString+1)^0,c
  2712  001ABE  C011  FFF6         	movff	??_lcdString,tblptrl
  2713  001AC2  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2714  001AC6                     	if	0	;tblptru may be non-zero
  2715  001AC6                     	endif
  2716  001AC6                     	if	0	;tblptru may be non-zero
  2717  001AC6                     	endif
  2718  001AC6  0008               	tblrd		*
  2719  001AC8  50F5               	movf	tablat,w,c
  2720  001ACA  ECBB  F00E         	call	_lcdChar
  2721  001ACE                     
  2722                           ;lcd.c: 61:   i++;
  2723  001ACE  4A13               	infsnz	lcdString@i^0,f,c
  2724  001AD0  2A14               	incf	(lcdString@i+1)^0,f,c
  2725  001AD2                     l2483:
  2726                           
  2727                           ;lcd.c: 59:  while (msg[i] != 0) {
  2728  001AD2  5013               	movf	lcdString@i^0,w,c
  2729  001AD4  240F               	addwf	lcdString@msg^0,w,c
  2730  001AD6  6E11               	movwf	??_lcdString^0,c
  2731  001AD8  5014               	movf	(lcdString@i+1)^0,w,c
  2732  001ADA  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2733  001ADC  6E12               	movwf	(??_lcdString+1)^0,c
  2734  001ADE  C011  FFF6         	movff	??_lcdString,tblptrl
  2735  001AE2  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2736  001AE6                     	if	0	;tblptru may be non-zero
  2737  001AE6                     	endif
  2738  001AE6                     	if	0	;tblptru may be non-zero
  2739  001AE6                     	endif
  2740  001AE6  0008               	tblrd		*
  2741  001AE8  50F5               	movf	tablat,w,c
  2742  001AEA  0900               	iorlw	0
  2743  001AEC  A4D8               	btfss	status,2,c
  2744  001AEE  EF7B  F00D         	goto	u2211
  2745  001AF2  EF7D  F00D         	goto	u2210
  2746  001AF6                     u2211:
  2747  001AF6  EF59  F00D         	goto	l2479
  2748  001AFA                     u2210:
  2749  001AFA  0012               	return		;funcret
  2750  001AFC                     __end_of_lcdString:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _lcdNumber *****************
  2754 ;; Defined at:
  2755 ;;		line 64 in file "lcd.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  value           2   14[COMRAM] int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  i               2   16[COMRAM] int 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2769 ;;      Params:         2       0       0       0       0       0       0
  2770 ;;      Locals:         2       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0
  2772 ;;      Totals:         4       0       0       0       0       0       0
  2773 ;;Total ram usage:        4 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 5
  2776 ;; This function calls:
  2777 ;;		___awdiv
  2778 ;;		___awmod
  2779 ;;		_lcdChar
  2780 ;; This function is called by:
  2781 ;;		_menu1
  2782 ;;		_menu2
  2783 ;;		_menu3
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text18
  2788  001916                     __ptext18:
  2789                           	callstack 0
  2790  001916                     _lcdNumber:
  2791                           	callstack 24
  2792  001916                     
  2793                           ;lcd.c: 65:  int i = 1000;
  2794  001916  0E03               	movlw	3
  2795  001918  6E12               	movwf	(lcdNumber@i+1)^0,c
  2796  00191A  0EE8               	movlw	232
  2797  00191C  6E11               	movwf	lcdNumber@i^0,c
  2798                           
  2799                           ;lcd.c: 66:  while (i > 0) {
  2800  00191E  EFB7  F00C         	goto	l2489
  2801  001922                     l2487:
  2802                           
  2803                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  2804  001922  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  2805  001926  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  2806  00192A  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  2807  00192E  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  2808  001932  ECDE  F009         	call	___awdiv	;wreg free
  2809  001936  C001  F009         	movff	?___awdiv,___awmod@dividend
  2810  00193A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2811  00193E  0E00               	movlw	0
  2812  001940  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2813  001942  0E0A               	movlw	10
  2814  001944  6E0B               	movwf	___awmod@divisor^0,c
  2815  001946  EC9A  F00A         	call	___awmod	;wreg free
  2816  00194A  5009               	movf	?___awmod^0,w,c
  2817  00194C  0F30               	addlw	48
  2818  00194E  ECBB  F00E         	call	_lcdChar
  2819                           
  2820                           ;lcd.c: 68:   i /= 10;
  2821  001952  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  2822  001956  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  2823  00195A  0E00               	movlw	0
  2824  00195C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2825  00195E  0E0A               	movlw	10
  2826  001960  6E03               	movwf	___awdiv@divisor^0,c
  2827  001962  ECDE  F009         	call	___awdiv	;wreg free
  2828  001966  C001  F011         	movff	?___awdiv,lcdNumber@i
  2829  00196A  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  2830  00196E                     l2489:
  2831                           
  2832                           ;lcd.c: 66:  while (i > 0) {
  2833  00196E  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  2834  001970  EFC4  F00C         	goto	u2220
  2835  001974  5012               	movf	(lcdNumber@i+1)^0,w,c
  2836  001976  E106               	bnz	u2221
  2837  001978  0411               	decf	lcdNumber@i^0,w,c
  2838  00197A  B0D8               	btfsc	status,0,c
  2839  00197C  EFC2  F00C         	goto	u2221
  2840  001980  EFC4  F00C         	goto	u2220
  2841  001984                     u2221:
  2842  001984  EF91  F00C         	goto	l2487
  2843  001988                     u2220:
  2844  001988  0012               	return		;funcret
  2845  00198A                     __end_of_lcdNumber:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _lcdChar *****************
  2849 ;; Defined at:
  2850 ;;		line 52 in file "lcd.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  value           1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  value           1   13[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         0       0       0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0
  2867 ;;      Totals:         1       0       0       0       0       0       0
  2868 ;;Total ram usage:        1 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 4
  2871 ;; This function calls:
  2872 ;;		_delayMicro
  2873 ;;		_pushByte
  2874 ;; This function is called by:
  2875 ;;		_lcdString
  2876 ;;		_lcdNumber
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text19
  2881  001D76                     __ptext19:
  2882                           	callstack 0
  2883  001D76                     _lcdChar:
  2884                           	callstack 24
  2885                           
  2886                           ;incstack = 0
  2887                           ;lcdChar@value stored from wreg
  2888  001D76  6E0E               	movwf	lcdChar@value^0,c
  2889  001D78                     
  2890                           ;lcd.c: 53:  pushByte(value, 1);
  2891  001D78  0E00               	movlw	0
  2892  001D7A  6E0B               	movwf	(pushByte@rs+1)^0,c
  2893  001D7C  0E01               	movlw	1
  2894  001D7E  6E0A               	movwf	pushByte@rs^0,c
  2895  001D80  500E               	movf	lcdChar@value^0,w,c
  2896  001D82  ECFB  F00C         	call	_pushByte
  2897  001D86                     
  2898                           ;lcd.c: 54:  delayMicro(80);
  2899  001D86  0E00               	movlw	0
  2900  001D88  6E02               	movwf	(delayMicro@a+1)^0,c
  2901  001D8A  0E50               	movlw	80
  2902  001D8C  6E01               	movwf	delayMicro@a^0,c
  2903  001D8E  EC13  F00F         	call	_delayMicro	;wreg free
  2904  001D92  0012               	return		;funcret
  2905  001D94                     __end_of_lcdChar:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function ___awmod *****************
  2909 ;; Defined at:
  2910 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  dividend        2    8[COMRAM] int 
  2913 ;;  divisor         2   10[COMRAM] int 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  sign            1   13[COMRAM] unsigned char 
  2916 ;;  counter         1   12[COMRAM] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  2    8[COMRAM] int 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2926 ;;      Params:         4       0       0       0       0       0       0
  2927 ;;      Locals:         2       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0
  2929 ;;      Totals:         6       0       0       0       0       0       0
  2930 ;;Total ram usage:        6 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_lcdNumber
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text20
  2940  001534                     __ptext20:
  2941                           	callstack 0
  2942  001534                     ___awmod:
  2943                           	callstack 28
  2944  001534  0E00               	movlw	0
  2945  001536  6E0E               	movwf	___awmod@sign^0,c
  2946  001538  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  2947  00153A  EFA3  F00A         	goto	u2020
  2948  00153E  EFA1  F00A         	goto	u2021
  2949  001542                     u2021:
  2950  001542  EFA9  F00A         	goto	l2381
  2951  001546                     u2020:
  2952  001546  6C09               	negf	___awmod@dividend^0,c
  2953  001548  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2954  00154A  B0D8               	btfsc	status,0,c
  2955  00154C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2956  00154E  0E01               	movlw	1
  2957  001550  6E0E               	movwf	___awmod@sign^0,c
  2958  001552                     l2381:
  2959  001552  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  2960  001554  EFB0  F00A         	goto	u2030
  2961  001558  EFAE  F00A         	goto	u2031
  2962  00155C                     u2031:
  2963  00155C  EFB4  F00A         	goto	l2385
  2964  001560                     u2030:
  2965  001560  6C0B               	negf	___awmod@divisor^0,c
  2966  001562  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  2967  001564  B0D8               	btfsc	status,0,c
  2968  001566  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2969  001568                     l2385:
  2970  001568  500B               	movf	___awmod@divisor^0,w,c
  2971  00156A  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2972  00156C  B4D8               	btfsc	status,2,c
  2973  00156E  EFBB  F00A         	goto	u2041
  2974  001572  EFBD  F00A         	goto	u2040
  2975  001576                     u2041:
  2976  001576  EFE1  F00A         	goto	l2401
  2977  00157A                     u2040:
  2978  00157A  0E01               	movlw	1
  2979  00157C  6E0D               	movwf	___awmod@counter^0,c
  2980  00157E  EFC5  F00A         	goto	l2391
  2981  001582                     l2389:
  2982  001582  90D8               	bcf	status,0,c
  2983  001584  360B               	rlcf	___awmod@divisor^0,f,c
  2984  001586  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2985  001588  2A0D               	incf	___awmod@counter^0,f,c
  2986  00158A                     l2391:
  2987  00158A  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2988  00158C  EFCA  F00A         	goto	u2051
  2989  001590  EFCC  F00A         	goto	u2050
  2990  001594                     u2051:
  2991  001594  EFC1  F00A         	goto	l2389
  2992  001598                     u2050:
  2993  001598                     l2393:
  2994  001598  500B               	movf	___awmod@divisor^0,w,c
  2995  00159A  5C09               	subwf	___awmod@dividend^0,w,c
  2996  00159C  500C               	movf	(___awmod@divisor+1)^0,w,c
  2997  00159E  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2998  0015A0  A0D8               	btfss	status,0,c
  2999  0015A2  EFD5  F00A         	goto	u2061
  3000  0015A6  EFD7  F00A         	goto	u2060
  3001  0015AA                     u2061:
  3002  0015AA  EFDB  F00A         	goto	l2397
  3003  0015AE                     u2060:
  3004  0015AE  500B               	movf	___awmod@divisor^0,w,c
  3005  0015B0  5E09               	subwf	___awmod@dividend^0,f,c
  3006  0015B2  500C               	movf	(___awmod@divisor+1)^0,w,c
  3007  0015B4  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  3008  0015B6                     l2397:
  3009  0015B6  90D8               	bcf	status,0,c
  3010  0015B8  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  3011  0015BA  320B               	rrcf	___awmod@divisor^0,f,c
  3012  0015BC  2E0D               	decfsz	___awmod@counter^0,f,c
  3013  0015BE  EFCC  F00A         	goto	l2393
  3014  0015C2                     l2401:
  3015  0015C2  500E               	movf	___awmod@sign^0,w,c
  3016  0015C4  B4D8               	btfsc	status,2,c
  3017  0015C6  EFE7  F00A         	goto	u2071
  3018  0015CA  EFE9  F00A         	goto	u2070
  3019  0015CE                     u2071:
  3020  0015CE  EFED  F00A         	goto	l2405
  3021  0015D2                     u2070:
  3022  0015D2  6C09               	negf	___awmod@dividend^0,c
  3023  0015D4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  3024  0015D6  B0D8               	btfsc	status,0,c
  3025  0015D8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  3026  0015DA                     l2405:
  3027  0015DA  C009  F009         	movff	___awmod@dividend,?___awmod
  3028  0015DE  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  3029  0015E2  0012               	return		;funcret
  3030  0015E4                     __end_of___awmod:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function ___awdiv *****************
  3034 ;; Defined at:
  3035 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  dividend        2    0[COMRAM] int 
  3038 ;;  divisor         2    2[COMRAM] int 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  quotient        2    6[COMRAM] int 
  3041 ;;  sign            1    5[COMRAM] unsigned char 
  3042 ;;  counter         1    4[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    0[COMRAM] int 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3052 ;;      Params:         4       0       0       0       0       0       0
  3053 ;;      Locals:         4       0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0
  3055 ;;      Totals:         8       0       0       0       0       0       0
  3056 ;;Total ram usage:        8 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_lcdNumber
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text21
  3066  0013BC                     __ptext21:
  3067                           	callstack 0
  3068  0013BC                     ___awdiv:
  3069                           	callstack 28
  3070  0013BC  0E00               	movlw	0
  3071  0013BE  6E06               	movwf	___awdiv@sign^0,c
  3072  0013C0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3073  0013C2  EFE7  F009         	goto	u1960
  3074  0013C6  EFE5  F009         	goto	u1961
  3075  0013CA                     u1961:
  3076  0013CA  EFED  F009         	goto	l2337
  3077  0013CE                     u1960:
  3078  0013CE  6C03               	negf	___awdiv@divisor^0,c
  3079  0013D0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3080  0013D2  B0D8               	btfsc	status,0,c
  3081  0013D4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3082  0013D6  0E01               	movlw	1
  3083  0013D8  6E06               	movwf	___awdiv@sign^0,c
  3084  0013DA                     l2337:
  3085  0013DA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3086  0013DC  EFF4  F009         	goto	u1970
  3087  0013E0  EFF2  F009         	goto	u1971
  3088  0013E4                     u1971:
  3089  0013E4  EFFA  F009         	goto	l2343
  3090  0013E8                     u1970:
  3091  0013E8  6C01               	negf	___awdiv@dividend^0,c
  3092  0013EA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3093  0013EC  B0D8               	btfsc	status,0,c
  3094  0013EE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3095  0013F0  0E01               	movlw	1
  3096  0013F2  1A06               	xorwf	___awdiv@sign^0,f,c
  3097  0013F4                     l2343:
  3098  0013F4  0E00               	movlw	0
  3099  0013F6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3100  0013F8  0E00               	movlw	0
  3101  0013FA  6E07               	movwf	___awdiv@quotient^0,c
  3102  0013FC  5003               	movf	___awdiv@divisor^0,w,c
  3103  0013FE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3104  001400  B4D8               	btfsc	status,2,c
  3105  001402  EF05  F00A         	goto	u1981
  3106  001406  EF07  F00A         	goto	u1980
  3107  00140A                     u1981:
  3108  00140A  EF2F  F00A         	goto	l2365
  3109  00140E                     u1980:
  3110  00140E  0E01               	movlw	1
  3111  001410  6E05               	movwf	___awdiv@counter^0,c
  3112  001412  EF0F  F00A         	goto	l2351
  3113  001416                     l2349:
  3114  001416  90D8               	bcf	status,0,c
  3115  001418  3603               	rlcf	___awdiv@divisor^0,f,c
  3116  00141A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3117  00141C  2A05               	incf	___awdiv@counter^0,f,c
  3118  00141E                     l2351:
  3119  00141E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3120  001420  EF14  F00A         	goto	u1991
  3121  001424  EF16  F00A         	goto	u1990
  3122  001428                     u1991:
  3123  001428  EF0B  F00A         	goto	l2349
  3124  00142C                     u1990:
  3125  00142C                     l2353:
  3126  00142C  90D8               	bcf	status,0,c
  3127  00142E  3607               	rlcf	___awdiv@quotient^0,f,c
  3128  001430  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3129  001432  5003               	movf	___awdiv@divisor^0,w,c
  3130  001434  5C01               	subwf	___awdiv@dividend^0,w,c
  3131  001436  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3132  001438  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3133  00143A  A0D8               	btfss	status,0,c
  3134  00143C  EF22  F00A         	goto	u2001
  3135  001440  EF24  F00A         	goto	u2000
  3136  001444                     u2001:
  3137  001444  EF29  F00A         	goto	l2361
  3138  001448                     u2000:
  3139  001448  5003               	movf	___awdiv@divisor^0,w,c
  3140  00144A  5E01               	subwf	___awdiv@dividend^0,f,c
  3141  00144C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3142  00144E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3143  001450  8007               	bsf	___awdiv@quotient^0,0,c
  3144  001452                     l2361:
  3145  001452  90D8               	bcf	status,0,c
  3146  001454  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3147  001456  3203               	rrcf	___awdiv@divisor^0,f,c
  3148  001458  2E05               	decfsz	___awdiv@counter^0,f,c
  3149  00145A  EF16  F00A         	goto	l2353
  3150  00145E                     l2365:
  3151  00145E  5006               	movf	___awdiv@sign^0,w,c
  3152  001460  B4D8               	btfsc	status,2,c
  3153  001462  EF35  F00A         	goto	u2011
  3154  001466  EF37  F00A         	goto	u2010
  3155  00146A                     u2011:
  3156  00146A  EF3B  F00A         	goto	l2369
  3157  00146E                     u2010:
  3158  00146E  6C07               	negf	___awdiv@quotient^0,c
  3159  001470  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3160  001472  B0D8               	btfsc	status,0,c
  3161  001474  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3162  001476                     l2369:
  3163  001476  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3164  00147A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3165  00147E  0012               	return		;funcret
  3166  001480                     __end_of___awdiv:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _leituraMenu *****************
  3170 ;; Defined at:
  3171 ;;		line 23 in file "menu.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         0       0       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 1
  3192 ;; This function calls:
  3193 ;;		_kpRead
  3194 ;;		_kpReadKey
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text22
  3201  0011EA                     __ptext22:
  3202                           	callstack 0
  3203  0011EA                     _leituraMenu:
  3204                           	callstack 29
  3205  0011EA                     
  3206                           ;menu.c: 24:     if (kpRead() != aux) {
  3207  0011EA  EC06  F00F         	call	_kpRead	;wreg free
  3208  0011EE  501D               	movf	_aux^0,w,c
  3209  0011F0  1801               	xorwf	?_kpRead^0,w,c
  3210  0011F2  E109               	bnz	u2310
  3211  0011F4  501E               	movf	(_aux+1)^0,w,c
  3212  0011F6  1802               	xorwf	(?_kpRead+1)^0,w,c
  3213  0011F8  B4D8               	btfsc	status,2,c
  3214  0011FA  EF01  F009         	goto	u2311
  3215  0011FE  EF03  F009         	goto	u2310
  3216  001202                     u2311:
  3217  001202  EF70  F009         	goto	l301
  3218  001206                     u2310:
  3219  001206                     
  3220                           ;menu.c: 25:         aux = kpRead();
  3221  001206  EC06  F00F         	call	_kpRead	;wreg free
  3222  00120A  C001  F01D         	movff	?_kpRead,_aux
  3223  00120E  C002  F01E         	movff	?_kpRead+1,_aux+1
  3224  001212                     
  3225                           ;menu.c: 26:         if (kpReadKey() != 0) {
  3226  001212  EC15  F00C         	call	_kpReadKey	;wreg free
  3227  001216  0900               	iorlw	0
  3228  001218  B4D8               	btfsc	status,2,c
  3229  00121A  EF11  F009         	goto	u2321
  3230  00121E  EF13  F009         	goto	u2320
  3231  001222                     u2321:
  3232  001222  EF70  F009         	goto	l301
  3233  001226                     u2320:
  3234  001226                     
  3235                           ;menu.c: 27:             count = kpReadKey();
  3236  001226  EC15  F00C         	call	_kpReadKey	;wreg free
  3237  00122A  6E2B               	movwf	_count^0,c
  3238  00122C                     
  3239                           ;menu.c: 29:             if ((count == 'R')&&(subMenu == 1)) {
  3240  00122C  0E52               	movlw	82
  3241  00122E  182B               	xorwf	_count^0,w,c
  3242  001230  A4D8               	btfss	status,2,c
  3243  001232  EF1D  F009         	goto	u2331
  3244  001236  EF1F  F009         	goto	u2330
  3245  00123A                     u2331:
  3246  00123A  EF30  F009         	goto	l2567
  3247  00123E                     u2330:
  3248  00123E  0432               	decf	_subMenu^0,w,c
  3249  001240  A4D8               	btfss	status,2,c
  3250  001242  EF25  F009         	goto	u2341
  3251  001246  EF27  F009         	goto	u2340
  3252  00124A                     u2341:
  3253  00124A  EF30  F009         	goto	l2567
  3254  00124E                     u2340:
  3255  00124E                     
  3256                           ;menu.c: 30:                 if (menuNum <= 3) {
  3257  00124E  0E04               	movlw	4
  3258  001250  6033               	cpfslt	_menuNum^0,c
  3259  001252  EF2D  F009         	goto	u2351
  3260  001256  EF2F  F009         	goto	u2350
  3261  00125A                     u2351:
  3262  00125A  EF30  F009         	goto	l2567
  3263  00125E                     u2350:
  3264  00125E                     
  3265                           ;menu.c: 31:                     menuNum += 1;
  3266  00125E  2A33               	incf	_menuNum^0,f,c
  3267  001260                     l2567:
  3268                           
  3269                           ;menu.c: 34:             if ((count == 'L')&&(subMenu == 1)) {
  3270  001260  0E4C               	movlw	76
  3271  001262  182B               	xorwf	_count^0,w,c
  3272  001264  A4D8               	btfss	status,2,c
  3273  001266  EF37  F009         	goto	u2361
  3274  00126A  EF39  F009         	goto	u2360
  3275  00126E                     u2361:
  3276  00126E  EF4A  F009         	goto	l2575
  3277  001272                     u2360:
  3278  001272  0432               	decf	_subMenu^0,w,c
  3279  001274  A4D8               	btfss	status,2,c
  3280  001276  EF3F  F009         	goto	u2371
  3281  00127A  EF41  F009         	goto	u2370
  3282  00127E                     u2371:
  3283  00127E  EF4A  F009         	goto	l2575
  3284  001282                     u2370:
  3285  001282                     
  3286                           ;menu.c: 35:                 if (menuNum > 0) {
  3287  001282  5033               	movf	_menuNum^0,w,c
  3288  001284  B4D8               	btfsc	status,2,c
  3289  001286  EF47  F009         	goto	u2381
  3290  00128A  EF49  F009         	goto	u2380
  3291  00128E                     u2381:
  3292  00128E  EF4A  F009         	goto	l2575
  3293  001292                     u2380:
  3294  001292                     
  3295                           ;menu.c: 36:                     menuNum -= 1;
  3296  001292  0633               	decf	_menuNum^0,f,c
  3297  001294                     l2575:
  3298                           
  3299                           ;menu.c: 39:             if (count == 's') {
  3300  001294  0E73               	movlw	115
  3301  001296  182B               	xorwf	_count^0,w,c
  3302  001298  A4D8               	btfss	status,2,c
  3303  00129A  EF51  F009         	goto	u2391
  3304  00129E  EF53  F009         	goto	u2390
  3305  0012A2                     u2391:
  3306  0012A2  EF5C  F009         	goto	l2581
  3307  0012A6                     u2390:
  3308  0012A6                     
  3309                           ;menu.c: 40:                 if (subMenu <= 2) {
  3310  0012A6  0E03               	movlw	3
  3311  0012A8  6032               	cpfslt	_subMenu^0,c
  3312  0012AA  EF59  F009         	goto	u2401
  3313  0012AE  EF5B  F009         	goto	u2400
  3314  0012B2                     u2401:
  3315  0012B2  EF5C  F009         	goto	l2581
  3316  0012B6                     u2400:
  3317  0012B6                     
  3318                           ;menu.c: 41:                     subMenu += 1;
  3319  0012B6  2A32               	incf	_subMenu^0,f,c
  3320  0012B8                     l2581:
  3321                           
  3322                           ;menu.c: 44:             if (count == 'S') {
  3323  0012B8  0E53               	movlw	83
  3324  0012BA  182B               	xorwf	_count^0,w,c
  3325  0012BC  A4D8               	btfss	status,2,c
  3326  0012BE  EF63  F009         	goto	u2411
  3327  0012C2  EF65  F009         	goto	u2410
  3328  0012C6                     u2411:
  3329  0012C6  EF70  F009         	goto	l301
  3330  0012CA                     u2410:
  3331  0012CA                     
  3332                           ;menu.c: 45:                 if (subMenu > 0) {
  3333  0012CA  5032               	movf	_subMenu^0,w,c
  3334  0012CC  B4D8               	btfsc	status,2,c
  3335  0012CE  EF6B  F009         	goto	u2421
  3336  0012D2  EF6D  F009         	goto	u2420
  3337  0012D6                     u2421:
  3338  0012D6  EF70  F009         	goto	l292
  3339  0012DA                     u2420:
  3340  0012DA                     
  3341                           ;menu.c: 46:                     subMenu -= 1;
  3342  0012DA  0632               	decf	_subMenu^0,f,c
  3343  0012DC  EF70  F009         	goto	l301
  3344  0012E0                     l292:
  3345  0012E0                     l301:
  3346  0012E0  0012               	return		;funcret
  3347  0012E2                     __end_of_leituraMenu:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _kpReadKey *****************
  3351 ;; Defined at:
  3352 ;;		line 17 in file "keypad.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  i               2    3[COMRAM] int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      unsigned char 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3366 ;;      Params:         0       0       0       0       0       0       0
  3367 ;;      Locals:         2       0       0       0       0       0       0
  3368 ;;      Temps:          3       0       0       0       0       0       0
  3369 ;;      Totals:         5       0       0       0       0       0       0
  3370 ;;Total ram usage:        5 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_leituraMenu
  3376 ;;		_menuCtrl
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text23
  3381  00182A                     __ptext23:
  3382                           	callstack 0
  3383  00182A                     _kpReadKey:
  3384                           	callstack 29
  3385  00182A                     
  3386                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3387  00182A  0E00               	movlw	0
  3388  00182C  6E05               	movwf	(kpReadKey@i+1)^0,c
  3389  00182E  0E00               	movlw	0
  3390  001830  6E04               	movwf	kpReadKey@i^0,c
  3391  001832                     l1533:
  3392                           
  3393                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3394  001832  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  3395  001836  0E01               	movlw	1
  3396  001838  6E02               	movwf	(??_kpReadKey+1)^0,c
  3397  00183A  0E00               	movlw	0
  3398  00183C  6E03               	movwf	(??_kpReadKey+2)^0,c
  3399  00183E  2A01               	incf	??_kpReadKey^0,f,c
  3400  001840  EF25  F00C         	goto	u744
  3401  001844                     u745:
  3402  001844  90D8               	bcf	status,0,c
  3403  001846  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  3404  001848  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  3405  00184A                     u744:
  3406  00184A  2E01               	decfsz	??_kpReadKey^0,f,c
  3407  00184C  EF22  F00C         	goto	u745
  3408  001850  5023               	movf	_keys^0,w,c
  3409  001852  1602               	andwf	(??_kpReadKey+1)^0,f,c
  3410  001854  5024               	movf	(_keys+1)^0,w,c
  3411  001856  1603               	andwf	(??_kpReadKey+2)^0,f,c
  3412  001858  5002               	movf	(??_kpReadKey+1)^0,w,c
  3413  00185A  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  3414  00185C  B4D8               	btfsc	status,2,c
  3415  00185E  EF33  F00C         	goto	u751
  3416  001862  EF35  F00C         	goto	u750
  3417  001866                     u751:
  3418  001866  EF3F  F00C         	goto	l1539
  3419  00186A                     u750:
  3420  00186A                     
  3421                           ;keypad.c: 21:    return charKey[i];
  3422  00186A  0E11               	movlw	low _charKey
  3423  00186C  2404               	addwf	kpReadKey@i^0,w,c
  3424  00186E  6EF6               	movwf	tblptrl,c
  3425  001870  0E06               	movlw	high _charKey
  3426  001872  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  3427  001874  6EF7               	movwf	tblptrh,c
  3428  001876                     	if	0	;There are less than 3 active tblptr bytes
  3429  001876                     	endif
  3430  001876  0008               	tblrd		*
  3431  001878  50F5               	movf	tablat,w,c
  3432  00187A  EF50  F00C         	goto	l111
  3433  00187E                     l1539:
  3434                           
  3435                           ;keypad.c: 23:  }
  3436  00187E  4A04               	infsnz	kpReadKey@i^0,f,c
  3437  001880  2A05               	incf	(kpReadKey@i+1)^0,f,c
  3438  001882  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  3439  001884  EF4D  F00C         	goto	u761
  3440  001888  5005               	movf	(kpReadKey@i+1)^0,w,c
  3441  00188A  E109               	bnz	u760
  3442  00188C  0E0A               	movlw	10
  3443  00188E  5C04               	subwf	kpReadKey@i^0,w,c
  3444  001890  A0D8               	btfss	status,0,c
  3445  001892  EF4D  F00C         	goto	u761
  3446  001896  EF4F  F00C         	goto	u760
  3447  00189A                     u761:
  3448  00189A  EF19  F00C         	goto	l1533
  3449  00189E                     u760:
  3450  00189E                     
  3451                           ;keypad.c: 25:  return 0;
  3452  00189E  0E00               	movlw	0
  3453  0018A0                     l111:
  3454  0018A0  0012               	return		;funcret
  3455  0018A2                     __end_of_kpReadKey:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _kpRead *****************
  3459 ;; Defined at:
  3460 ;;		line 14 in file "keypad.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2    0[COMRAM] unsigned int 
  3467 ;; Registers used:
  3468 ;;		None
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         2       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0
  3477 ;;      Totals:         2       0       0       0       0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_leituraMenu
  3484 ;;		_menuCtrl
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text24
  3489  001E0C                     __ptext24:
  3490                           	callstack 0
  3491  001E0C                     _kpRead:
  3492                           	callstack 29
  3493  001E0C                     
  3494                           ;keypad.c: 15:     return keys;
  3495  001E0C  C023  F001         	movff	_keys,?_kpRead
  3496  001E10  C024  F002         	movff	_keys+1,?_kpRead+1
  3497  001E14  0012               	return		;funcret
  3498  001E16                     __end_of_kpRead:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _lcdInit *****************
  3502 ;; Defined at:
  3503 ;;		line 72 in file "lcd.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3517 ;;      Params:         0       0       0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 5
  3524 ;; This function calls:
  3525 ;;		_delayMicro
  3526 ;;		_delayMili
  3527 ;;		_lcdCommand
  3528 ;;		_pinMode
  3529 ;;		_pushNibble
  3530 ;;		_soInit
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text25
  3537  001480                     __ptext25:
  3538                           	callstack 0
  3539  001480                     _lcdInit:
  3540                           	callstack 25
  3541  001480                     
  3542                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3543  001480  0E00               	movlw	0
  3544  001482  6E02               	movwf	(pinMode@pin+1)^0,c
  3545  001484  0E1C               	movlw	28
  3546  001486  6E01               	movwf	pinMode@pin^0,c
  3547  001488  0E00               	movlw	0
  3548  00148A  6E04               	movwf	(pinMode@type+1)^0,c
  3549  00148C  0E00               	movlw	0
  3550  00148E  6E03               	movwf	pinMode@type^0,c
  3551  001490  EC5E  F003         	call	_pinMode	;wreg free
  3552                           
  3553                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3554  001494  0E00               	movlw	0
  3555  001496  6E02               	movwf	(pinMode@pin+1)^0,c
  3556  001498  0E1D               	movlw	29
  3557  00149A  6E01               	movwf	pinMode@pin^0,c
  3558  00149C  0E00               	movlw	0
  3559  00149E  6E04               	movwf	(pinMode@type+1)^0,c
  3560  0014A0  0E00               	movlw	0
  3561  0014A2  6E03               	movwf	pinMode@type^0,c
  3562  0014A4  EC5E  F003         	call	_pinMode	;wreg free
  3563                           
  3564                           ;lcd.c: 75:  soInit();
  3565  0014A8  ECC6  F00D         	call	_soInit	;wreg free
  3566                           
  3567                           ;lcd.c: 76:  delayMili(15);
  3568  0014AC  0E00               	movlw	0
  3569  0014AE  6E02               	movwf	(delayMili@a+1)^0,c
  3570  0014B0  0E0F               	movlw	15
  3571  0014B2  6E01               	movwf	delayMili@a^0,c
  3572  0014B4  EC19  F00E         	call	_delayMili	;wreg free
  3573                           
  3574                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3575  0014B8  0E00               	movlw	0
  3576  0014BA  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3577  0014BC  0E00               	movlw	0
  3578  0014BE  6E0A               	movwf	pushNibble@rs^0,c
  3579  0014C0  0E03               	movlw	3
  3580  0014C2  EC97  F00E         	call	_pushNibble
  3581                           
  3582                           ;lcd.c: 79:  delayMili(5);
  3583  0014C6  0E00               	movlw	0
  3584  0014C8  6E02               	movwf	(delayMili@a+1)^0,c
  3585  0014CA  0E05               	movlw	5
  3586  0014CC  6E01               	movwf	delayMili@a^0,c
  3587  0014CE  EC19  F00E         	call	_delayMili	;wreg free
  3588                           
  3589                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3590  0014D2  0E00               	movlw	0
  3591  0014D4  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3592  0014D6  0E00               	movlw	0
  3593  0014D8  6E0A               	movwf	pushNibble@rs^0,c
  3594  0014DA  0E03               	movlw	3
  3595  0014DC  EC97  F00E         	call	_pushNibble
  3596  0014E0                     
  3597                           ;lcd.c: 81:  delayMicro(160);
  3598  0014E0  0E00               	movlw	0
  3599  0014E2  6E02               	movwf	(delayMicro@a+1)^0,c
  3600  0014E4  0EA0               	movlw	160
  3601  0014E6  6E01               	movwf	delayMicro@a^0,c
  3602  0014E8  EC13  F00F         	call	_delayMicro	;wreg free
  3603  0014EC                     
  3604                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3605  0014EC  0E00               	movlw	0
  3606  0014EE  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3607  0014F0  0E00               	movlw	0
  3608  0014F2  6E0A               	movwf	pushNibble@rs^0,c
  3609  0014F4  0E03               	movlw	3
  3610  0014F6  EC97  F00E         	call	_pushNibble
  3611                           
  3612                           ;lcd.c: 83:  delayMicro(160);
  3613  0014FA  0E00               	movlw	0
  3614  0014FC  6E02               	movwf	(delayMicro@a+1)^0,c
  3615  0014FE  0EA0               	movlw	160
  3616  001500  6E01               	movwf	delayMicro@a^0,c
  3617  001502  EC13  F00F         	call	_delayMicro	;wreg free
  3618  001506                     
  3619                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3620  001506  0E00               	movlw	0
  3621  001508  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3622  00150A  0E00               	movlw	0
  3623  00150C  6E0A               	movwf	pushNibble@rs^0,c
  3624  00150E  0E02               	movlw	2
  3625  001510  EC97  F00E         	call	_pushNibble
  3626  001514                     
  3627                           ;lcd.c: 86:  delayMili(10);
  3628  001514  0E00               	movlw	0
  3629  001516  6E02               	movwf	(delayMili@a+1)^0,c
  3630  001518  0E0A               	movlw	10
  3631  00151A  6E01               	movwf	delayMili@a^0,c
  3632  00151C  EC19  F00E         	call	_delayMili	;wreg free
  3633  001520                     
  3634                           ;lcd.c: 88:  lcdCommand(0x28);
  3635  001520  0E28               	movlw	40
  3636  001522  ECCA  F00E         	call	_lcdCommand
  3637  001526                     
  3638                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3639  001526  0E0C               	movlw	12
  3640  001528  ECCA  F00E         	call	_lcdCommand
  3641  00152C                     
  3642                           ;lcd.c: 90:  lcdCommand(0x01);
  3643  00152C  0E01               	movlw	1
  3644  00152E  ECCA  F00E         	call	_lcdCommand
  3645  001532  0012               	return		;funcret
  3646  001534                     __end_of_lcdInit:
  3647                           	callstack 0
  3648                           
  3649 ;; *************** function _pushNibble *****************
  3650 ;; Defined at:
  3651 ;;		line 25 in file "lcd.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  value           1    wreg     unsigned char 
  3654 ;;  rs              2    9[COMRAM] int 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  value           1   11[COMRAM] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3666 ;;      Params:         2       0       0       0       0       0       0
  3667 ;;      Locals:         1       0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0
  3669 ;;      Totals:         3       0       0       0       0       0       0
  3670 ;;Total ram usage:        3 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 3
  3673 ;; This function calls:
  3674 ;;		_digitalWrite
  3675 ;;		_pulseEnablePin
  3676 ;;		_soWrite
  3677 ;; This function is called by:
  3678 ;;		_lcdInit
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text26
  3683  001D2E                     __ptext26:
  3684                           	callstack 0
  3685  001D2E                     _pushNibble:
  3686                           	callstack 26
  3687                           
  3688                           ;incstack = 0
  3689                           ;pushNibble@value stored from wreg
  3690  001D2E  6E0C               	movwf	pushNibble@value^0,c
  3691  001D30                     
  3692                           ;lcd.c: 26:  soWrite(value);
  3693  001D30  C00C  F007         	movff	pushNibble@value,soWrite@value
  3694  001D34  6A08               	clrf	(soWrite@value+1)^0,c
  3695  001D36  EC7E  F00D         	call	_soWrite	;wreg free
  3696                           
  3697                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3698  001D3A  0E00               	movlw	0
  3699  001D3C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3700  001D3E  0E1D               	movlw	29
  3701  001D40  6E01               	movwf	digitalWrite@pin^0,c
  3702  001D42  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3703  001D46  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3704  001D4A  EC85  F004         	call	_digitalWrite	;wreg free
  3705                           
  3706                           ;lcd.c: 28:  pulseEnablePin();
  3707  001D4E  ECA5  F00D         	call	_pulseEnablePin	;wreg free
  3708  001D52  0012               	return		;funcret
  3709  001D54                     __end_of_pushNibble:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _lcdCommand *****************
  3713 ;; Defined at:
  3714 ;;		line 40 in file "lcd.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  value           1    wreg     unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  value           1   13[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3728 ;;      Params:         0       0       0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 4
  3735 ;; This function calls:
  3736 ;;		_delayMili
  3737 ;;		_pushByte
  3738 ;; This function is called by:
  3739 ;;		_lcdInit
  3740 ;;		_menu1
  3741 ;;		_menu2
  3742 ;;		_menu3
  3743 ;;		_main
  3744 ;;		_lcdPosition
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text27
  3749  001D94                     __ptext27:
  3750                           	callstack 0
  3751  001D94                     _lcdCommand:
  3752                           	callstack 25
  3753                           
  3754                           ;incstack = 0
  3755                           ;lcdCommand@value stored from wreg
  3756  001D94  6E0E               	movwf	lcdCommand@value^0,c
  3757  001D96                     
  3758                           ;lcd.c: 41:  pushByte(value, 0);
  3759  001D96  0E00               	movlw	0
  3760  001D98  6E0B               	movwf	(pushByte@rs+1)^0,c
  3761  001D9A  0E00               	movlw	0
  3762  001D9C  6E0A               	movwf	pushByte@rs^0,c
  3763  001D9E  500E               	movf	lcdCommand@value^0,w,c
  3764  001DA0  ECFB  F00C         	call	_pushByte
  3765                           
  3766                           ;lcd.c: 42:  delayMili(2);
  3767  001DA4  0E00               	movlw	0
  3768  001DA6  6E02               	movwf	(delayMili@a+1)^0,c
  3769  001DA8  0E02               	movlw	2
  3770  001DAA  6E01               	movwf	delayMili@a^0,c
  3771  001DAC  EC19  F00E         	call	_delayMili	;wreg free
  3772  001DB0  0012               	return		;funcret
  3773  001DB2                     __end_of_lcdCommand:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _pushByte *****************
  3777 ;; Defined at:
  3778 ;;		line 31 in file "lcd.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  value           1    wreg     unsigned char 
  3781 ;;  rs              2    9[COMRAM] int 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  value           1   12[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         2       0       0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0
  3795 ;;      Temps:          1       0       0       0       0       0       0
  3796 ;;      Totals:         4       0       0       0       0       0       0
  3797 ;;Total ram usage:        4 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 3
  3800 ;; This function calls:
  3801 ;;		_digitalWrite
  3802 ;;		_pulseEnablePin
  3803 ;;		_soWrite
  3804 ;; This function is called by:
  3805 ;;		_lcdCommand
  3806 ;;		_lcdChar
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text28
  3811  0019F6                     __ptext28:
  3812                           	callstack 0
  3813  0019F6                     _pushByte:
  3814                           	callstack 24
  3815                           
  3816                           ;incstack = 0
  3817                           ;pushByte@value stored from wreg
  3818  0019F6  6E0D               	movwf	pushByte@value^0,c
  3819  0019F8                     
  3820                           ;lcd.c: 32:  soWrite(value >> 4);
  3821  0019F8  C00D  F00C         	movff	pushByte@value,??_pushByte
  3822  0019FC  3A0C               	swapf	??_pushByte^0,f,c
  3823  0019FE  0E0F               	movlw	15
  3824  001A00  160C               	andwf	??_pushByte^0,f,c
  3825  001A02  500C               	movf	??_pushByte^0,w,c
  3826  001A04  6E07               	movwf	soWrite@value^0,c
  3827  001A06  6A08               	clrf	(soWrite@value+1)^0,c
  3828  001A08  EC7E  F00D         	call	_soWrite	;wreg free
  3829                           
  3830                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3831  001A0C  0E00               	movlw	0
  3832  001A0E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3833  001A10  0E1D               	movlw	29
  3834  001A12  6E01               	movwf	digitalWrite@pin^0,c
  3835  001A14  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3836  001A18  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3837  001A1C  EC85  F004         	call	_digitalWrite	;wreg free
  3838                           
  3839                           ;lcd.c: 34:  pulseEnablePin();
  3840  001A20  ECA5  F00D         	call	_pulseEnablePin	;wreg free
  3841                           
  3842                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3843  001A24  C00D  F00C         	movff	pushByte@value,??_pushByte
  3844  001A28  0E0F               	movlw	15
  3845  001A2A  160C               	andwf	??_pushByte^0,f,c
  3846  001A2C  500C               	movf	??_pushByte^0,w,c
  3847  001A2E  6E07               	movwf	soWrite@value^0,c
  3848  001A30  6A08               	clrf	(soWrite@value+1)^0,c
  3849  001A32  EC7E  F00D         	call	_soWrite	;wreg free
  3850                           
  3851                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3852  001A36  0E00               	movlw	0
  3853  001A38  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3854  001A3A  0E1D               	movlw	29
  3855  001A3C  6E01               	movwf	digitalWrite@pin^0,c
  3856  001A3E  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3857  001A42  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3858  001A46  EC85  F004         	call	_digitalWrite	;wreg free
  3859                           
  3860                           ;lcd.c: 38:  pulseEnablePin();
  3861  001A4A  ECA5  F00D         	call	_pulseEnablePin	;wreg free
  3862  001A4E  0012               	return		;funcret
  3863  001A50                     __end_of_pushByte:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _pulseEnablePin *****************
  3867 ;; Defined at:
  3868 ;;		line 18 in file "lcd.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3882 ;;      Params:         0       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0
  3885 ;;      Totals:         0       0       0       0       0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 1
  3889 ;; This function calls:
  3890 ;;		_delayMicro
  3891 ;;		_digitalWrite
  3892 ;; This function is called by:
  3893 ;;		_pushNibble
  3894 ;;		_pushByte
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text29
  3899  001B4A                     __ptext29:
  3900                           	callstack 0
  3901  001B4A                     _pulseEnablePin:
  3902                           	callstack 25
  3903  001B4A                     
  3904                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3905  001B4A  0E00               	movlw	0
  3906  001B4C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3907  001B4E  0E1C               	movlw	28
  3908  001B50  6E01               	movwf	digitalWrite@pin^0,c
  3909  001B52  0E00               	movlw	0
  3910  001B54  6E04               	movwf	(digitalWrite@value+1)^0,c
  3911  001B56  0E01               	movlw	1
  3912  001B58  6E03               	movwf	digitalWrite@value^0,c
  3913  001B5A  EC85  F004         	call	_digitalWrite	;wreg free
  3914  001B5E                     
  3915                           ;lcd.c: 20:  delayMicro(5);
  3916  001B5E  0E00               	movlw	0
  3917  001B60  6E02               	movwf	(delayMicro@a+1)^0,c
  3918  001B62  0E05               	movlw	5
  3919  001B64  6E01               	movwf	delayMicro@a^0,c
  3920  001B66  EC13  F00F         	call	_delayMicro	;wreg free
  3921  001B6A                     
  3922                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3923  001B6A  0E00               	movlw	0
  3924  001B6C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3925  001B6E  0E1C               	movlw	28
  3926  001B70  6E01               	movwf	digitalWrite@pin^0,c
  3927  001B72  0E00               	movlw	0
  3928  001B74  6E04               	movwf	(digitalWrite@value+1)^0,c
  3929  001B76  0E00               	movlw	0
  3930  001B78  6E03               	movwf	digitalWrite@value^0,c
  3931  001B7A  EC85  F004         	call	_digitalWrite	;wreg free
  3932                           
  3933                           ;lcd.c: 22:  delayMicro(5);
  3934  001B7E  0E00               	movlw	0
  3935  001B80  6E02               	movwf	(delayMicro@a+1)^0,c
  3936  001B82  0E05               	movlw	5
  3937  001B84  6E01               	movwf	delayMicro@a^0,c
  3938  001B86  EC13  F00F         	call	_delayMicro	;wreg free
  3939  001B8A  0012               	return		;funcret
  3940  001B8C                     __end_of_pulseEnablePin:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _delayMicro *****************
  3944 ;; Defined at:
  3945 ;;		line 5 in file "lcd.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  a               2    0[COMRAM] int 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  i               2    0        volatile int 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		None
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3959 ;;      Params:         2       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0
  3962 ;;      Totals:         2       0       0       0       0       0       0
  3963 ;;Total ram usage:        2 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_pulseEnablePin
  3969 ;;		_lcdChar
  3970 ;;		_lcdInit
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text30
  3975  001E26                     __ptext30:
  3976                           	callstack 0
  3977  001E26                     _delayMicro:
  3978                           	callstack 25
  3979  001E26  0012               	return		;funcret
  3980  001E28                     __end_of_delayMicro:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _delayMili *****************
  3984 ;; Defined at:
  3985 ;;		line 10 in file "lcd.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  a               2    0[COMRAM] int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  i               2    3[COMRAM] volatile int 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         2       0       0       0       0       0       0
  4000 ;;      Locals:         2       0       0       0       0       0       0
  4001 ;;      Temps:          1       0       0       0       0       0       0
  4002 ;;      Totals:         5       0       0       0       0       0       0
  4003 ;;Total ram usage:        5 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_lcdCommand
  4009 ;;		_lcdInit
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text31
  4014  001C32                     __ptext31:
  4015                           	callstack 0
  4016  001C32                     _delayMili:
  4017                           	callstack 28
  4018  001C32                     
  4019                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4020  001C32  0E00               	movlw	0
  4021  001C34  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4022  001C36  0E00               	movlw	0
  4023  001C38  6E04               	movwf	delayMili@i^0,c	;volatile
  4024  001C3A  EF21  F00E         	goto	l2273
  4025  001C3E                     l2271:
  4026                           
  4027                           ;lcd.c: 15:  }
  4028  001C3E  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4029  001C40  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4030  001C42                     l2273:
  4031  001C42  5001               	movf	delayMili@a^0,w,c
  4032  001C44  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4033  001C46  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4034  001C48  0A80               	xorlw	128
  4035  001C4A  6E03               	movwf	??_delayMili^0,c
  4036  001C4C  5002               	movf	(delayMili@a+1)^0,w,c
  4037  001C4E  0A80               	xorlw	128
  4038  001C50  5803               	subwfb	??_delayMili^0,w,c
  4039  001C52  A0D8               	btfss	status,0,c
  4040  001C54  EF2E  F00E         	goto	u1891
  4041  001C58  EF30  F00E         	goto	u1890
  4042  001C5C                     u1891:
  4043  001C5C  EF1F  F00E         	goto	l2271
  4044  001C60                     u1890:
  4045  001C60  0012               	return		;funcret
  4046  001C62                     __end_of_delayMili:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _kpInit *****************
  4050 ;; Defined at:
  4051 ;;		line 54 in file "keypad.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4065 ;;      Params:         0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 2
  4072 ;; This function calls:
  4073 ;;		_pinMode
  4074 ;;		_soInit
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text32
  4081  001C00                     __ptext32:
  4082                           	callstack 0
  4083  001C00                     _kpInit:
  4084                           	callstack 28
  4085  001C00                     
  4086                           ;keypad.c: 55:   soInit();
  4087  001C00  ECC6  F00D         	call	_soInit	;wreg free
  4088                           
  4089                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  4090  001C04  0E00               	movlw	0
  4091  001C06  6E02               	movwf	(pinMode@pin+1)^0,c
  4092  001C08  0E0A               	movlw	10
  4093  001C0A  6E01               	movwf	pinMode@pin^0,c
  4094  001C0C  0E00               	movlw	0
  4095  001C0E  6E04               	movwf	(pinMode@type+1)^0,c
  4096  001C10  0E01               	movlw	1
  4097  001C12  6E03               	movwf	pinMode@type^0,c
  4098  001C14  EC5E  F003         	call	_pinMode	;wreg free
  4099                           
  4100                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  4101  001C18  0E00               	movlw	0
  4102  001C1A  6E02               	movwf	(pinMode@pin+1)^0,c
  4103  001C1C  0E09               	movlw	9
  4104  001C1E  6E01               	movwf	pinMode@pin^0,c
  4105  001C20  0E00               	movlw	0
  4106  001C22  6E04               	movwf	(pinMode@type+1)^0,c
  4107  001C24  0E01               	movlw	1
  4108  001C26  6E03               	movwf	pinMode@type^0,c
  4109  001C28  EC5E  F003         	call	_pinMode	;wreg free
  4110  001C2C                     
  4111                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  4112  001C2C  0E0C               	movlw	12
  4113  001C2E  6EC1               	movwf	193,c	;volatile
  4114  001C30  0012               	return		;funcret
  4115  001C32                     __end_of_kpInit:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _soInit *****************
  4119 ;; Defined at:
  4120 ;;		line 3 in file "so.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4134 ;;      Params:         0       0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 1
  4141 ;; This function calls:
  4142 ;;		_pinMode
  4143 ;; This function is called by:
  4144 ;;		_kpInit
  4145 ;;		_lcdInit
  4146 ;;		_ssdInit
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text33
  4151  001B8C                     __ptext33:
  4152                           	callstack 0
  4153  001B8C                     _soInit:
  4154                           	callstack 28
  4155  001B8C                     
  4156                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4157  001B8C  0E00               	movlw	0
  4158  001B8E  6E02               	movwf	(pinMode@pin+1)^0,c
  4159  001B90  0E1F               	movlw	31
  4160  001B92  6E01               	movwf	pinMode@pin^0,c
  4161  001B94  0E00               	movlw	0
  4162  001B96  6E04               	movwf	(pinMode@type+1)^0,c
  4163  001B98  0E00               	movlw	0
  4164  001B9A  6E03               	movwf	pinMode@type^0,c
  4165  001B9C  EC5E  F003         	call	_pinMode	;wreg free
  4166                           
  4167                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4168  001BA0  0E00               	movlw	0
  4169  001BA2  6E02               	movwf	(pinMode@pin+1)^0,c
  4170  001BA4  0E08               	movlw	8
  4171  001BA6  6E01               	movwf	pinMode@pin^0,c
  4172  001BA8  0E00               	movlw	0
  4173  001BAA  6E04               	movwf	(pinMode@type+1)^0,c
  4174  001BAC  0E00               	movlw	0
  4175  001BAE  6E03               	movwf	pinMode@type^0,c
  4176  001BB0  EC5E  F003         	call	_pinMode	;wreg free
  4177                           
  4178                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4179  001BB4  0E00               	movlw	0
  4180  001BB6  6E02               	movwf	(pinMode@pin+1)^0,c
  4181  001BB8  0E1E               	movlw	30
  4182  001BBA  6E01               	movwf	pinMode@pin^0,c
  4183  001BBC  0E00               	movlw	0
  4184  001BBE  6E04               	movwf	(pinMode@type+1)^0,c
  4185  001BC0  0E00               	movlw	0
  4186  001BC2  6E03               	movwf	pinMode@type^0,c
  4187  001BC4  EC5E  F003         	call	_pinMode	;wreg free
  4188  001BC8  0012               	return		;funcret
  4189  001BCA                     __end_of_soInit:
  4190                           	callstack 0
  4191                           
  4192 ;; *************** function _pinMode *****************
  4193 ;; Defined at:
  4194 ;;		line 54 in file "io.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  pin             2    0[COMRAM] int 
  4197 ;;  type            2    2[COMRAM] int 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4209 ;;      Params:         4       0       0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0
  4211 ;;      Temps:          2       0       0       0       0       0       0
  4212 ;;      Totals:         6       0       0       0       0       0       0
  4213 ;;Total ram usage:        6 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_kpInit
  4219 ;;		_lcdInit
  4220 ;;		_soInit
  4221 ;;		_rgbInit
  4222 ;;		_ssdInit
  4223 ;;		_adcInit
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text34
  4228  0006BC                     __ptext34:
  4229                           	callstack 0
  4230  0006BC                     _pinMode:
  4231                           	callstack 28
  4232  0006BC                     
  4233                           ;io.c: 56:     if(pin <8){
  4234  0006BC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4235  0006BE  EF6C  F003         	goto	u1690
  4236  0006C2  5002               	movf	(pinMode@pin+1)^0,w,c
  4237  0006C4  E107               	bnz	u1691
  4238  0006C6  0E08               	movlw	8
  4239  0006C8  5C01               	subwf	pinMode@pin^0,w,c
  4240  0006CA  B0D8               	btfsc	status,0,c
  4241  0006CC  EF6A  F003         	goto	u1691
  4242  0006D0  EF6C  F003         	goto	u1690
  4243  0006D4                     u1691:
  4244  0006D4  EF96  F003         	goto	l2237
  4245  0006D8                     u1690:
  4246  0006D8                     
  4247                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4248  0006D8  5003               	movf	pinMode@type^0,w,c
  4249  0006DA  1004               	iorwf	(pinMode@type+1)^0,w,c
  4250  0006DC  B4D8               	btfsc	status,2,c
  4251  0006DE  EF73  F003         	goto	u1701
  4252  0006E2  EF75  F003         	goto	u1700
  4253  0006E6                     u1701:
  4254  0006E6  EF85  F003         	goto	l2235
  4255  0006EA                     u1700:
  4256  0006EA  C001  F005         	movff	pinMode@pin,??_pinMode
  4257  0006EE  0E01               	movlw	1
  4258  0006F0  6E06               	movwf	(??_pinMode+1)^0,c
  4259  0006F2  2A05               	incf	??_pinMode^0,f,c
  4260  0006F4  EF7E  F003         	goto	u1714
  4261  0006F8                     u1715:
  4262  0006F8  90D8               	bcf	status,0,c
  4263  0006FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4264  0006FC                     u1714:
  4265  0006FC  2E05               	decfsz	??_pinMode^0,f,c
  4266  0006FE  EF7C  F003         	goto	u1715
  4267  000702  5006               	movf	(??_pinMode+1)^0,w,c
  4268  000704  1292               	iorwf	146,f,c	;volatile
  4269  000706  EF84  F004         	goto	l88
  4270  00070A                     l2235:
  4271  00070A  C001  F005         	movff	pinMode@pin,??_pinMode
  4272  00070E  0E01               	movlw	1
  4273  000710  6E06               	movwf	(??_pinMode+1)^0,c
  4274  000712  2A05               	incf	??_pinMode^0,f,c
  4275  000714  EF8E  F003         	goto	u1724
  4276  000718                     u1725:
  4277  000718  90D8               	bcf	status,0,c
  4278  00071A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4279  00071C                     u1724:
  4280  00071C  2E05               	decfsz	??_pinMode^0,f,c
  4281  00071E  EF8C  F003         	goto	u1725
  4282  000722  5006               	movf	(??_pinMode+1)^0,w,c
  4283  000724  0AFF               	xorlw	255
  4284  000726  1692               	andwf	146,f,c	;volatile
  4285  000728  EF84  F004         	goto	l88
  4286  00072C                     l2237:
  4287  00072C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4288  00072E  EFA4  F003         	goto	u1730
  4289  000732  5002               	movf	(pinMode@pin+1)^0,w,c
  4290  000734  E107               	bnz	u1731
  4291  000736  0E10               	movlw	16
  4292  000738  5C01               	subwf	pinMode@pin^0,w,c
  4293  00073A  B0D8               	btfsc	status,0,c
  4294  00073C  EFA2  F003         	goto	u1731
  4295  000740  EFA4  F003         	goto	u1730
  4296  000744                     u1731:
  4297  000744  EFD2  F003         	goto	l2245
  4298  000748                     u1730:
  4299  000748                     
  4300                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4301  000748  5003               	movf	pinMode@type^0,w,c
  4302  00074A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4303  00074C  B4D8               	btfsc	status,2,c
  4304  00074E  EFAB  F003         	goto	u1741
  4305  000752  EFAD  F003         	goto	u1740
  4306  000756                     u1741:
  4307  000756  EFBF  F003         	goto	l2243
  4308  00075A                     u1740:
  4309  00075A  C001  F005         	movff	pinMode@pin,??_pinMode
  4310  00075E  0EF8               	movlw	-8
  4311  000760  2605               	addwf	??_pinMode^0,f,c
  4312  000762  0E01               	movlw	1
  4313  000764  6E06               	movwf	(??_pinMode+1)^0,c
  4314  000766  2A05               	incf	??_pinMode^0,f,c
  4315  000768  EFB8  F003         	goto	u1754
  4316  00076C                     u1755:
  4317  00076C  90D8               	bcf	status,0,c
  4318  00076E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4319  000770                     u1754:
  4320  000770  2E05               	decfsz	??_pinMode^0,f,c
  4321  000772  EFB6  F003         	goto	u1755
  4322  000776  5006               	movf	(??_pinMode+1)^0,w,c
  4323  000778  1293               	iorwf	147,f,c	;volatile
  4324  00077A  EF84  F004         	goto	l88
  4325  00077E                     l2243:
  4326  00077E  C001  F005         	movff	pinMode@pin,??_pinMode
  4327  000782  0EF8               	movlw	-8
  4328  000784  2605               	addwf	??_pinMode^0,f,c
  4329  000786  0E01               	movlw	1
  4330  000788  6E06               	movwf	(??_pinMode+1)^0,c
  4331  00078A  2A05               	incf	??_pinMode^0,f,c
  4332  00078C  EFCA  F003         	goto	u1764
  4333  000790                     u1765:
  4334  000790  90D8               	bcf	status,0,c
  4335  000792  3606               	rlcf	(??_pinMode+1)^0,f,c
  4336  000794                     u1764:
  4337  000794  2E05               	decfsz	??_pinMode^0,f,c
  4338  000796  EFC8  F003         	goto	u1765
  4339  00079A  5006               	movf	(??_pinMode+1)^0,w,c
  4340  00079C  0AFF               	xorlw	255
  4341  00079E  1693               	andwf	147,f,c	;volatile
  4342  0007A0  EF84  F004         	goto	l88
  4343  0007A4                     l2245:
  4344  0007A4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4345  0007A6  EFE0  F003         	goto	u1770
  4346  0007AA  5002               	movf	(pinMode@pin+1)^0,w,c
  4347  0007AC  E107               	bnz	u1771
  4348  0007AE  0E18               	movlw	24
  4349  0007B0  5C01               	subwf	pinMode@pin^0,w,c
  4350  0007B2  B0D8               	btfsc	status,0,c
  4351  0007B4  EFDE  F003         	goto	u1771
  4352  0007B8  EFE0  F003         	goto	u1770
  4353  0007BC                     u1771:
  4354  0007BC  EF0E  F004         	goto	l2253
  4355  0007C0                     u1770:
  4356  0007C0                     
  4357                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4358  0007C0  5003               	movf	pinMode@type^0,w,c
  4359  0007C2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4360  0007C4  B4D8               	btfsc	status,2,c
  4361  0007C6  EFE7  F003         	goto	u1781
  4362  0007CA  EFE9  F003         	goto	u1780
  4363  0007CE                     u1781:
  4364  0007CE  EFFB  F003         	goto	l2251
  4365  0007D2                     u1780:
  4366  0007D2  C001  F005         	movff	pinMode@pin,??_pinMode
  4367  0007D6  0EF0               	movlw	-16
  4368  0007D8  2605               	addwf	??_pinMode^0,f,c
  4369  0007DA  0E01               	movlw	1
  4370  0007DC  6E06               	movwf	(??_pinMode+1)^0,c
  4371  0007DE  2A05               	incf	??_pinMode^0,f,c
  4372  0007E0  EFF4  F003         	goto	u1794
  4373  0007E4                     u1795:
  4374  0007E4  90D8               	bcf	status,0,c
  4375  0007E6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4376  0007E8                     u1794:
  4377  0007E8  2E05               	decfsz	??_pinMode^0,f,c
  4378  0007EA  EFF2  F003         	goto	u1795
  4379  0007EE  5006               	movf	(??_pinMode+1)^0,w,c
  4380  0007F0  1294               	iorwf	148,f,c	;volatile
  4381  0007F2  EF84  F004         	goto	l88
  4382  0007F6                     l2251:
  4383  0007F6  C001  F005         	movff	pinMode@pin,??_pinMode
  4384  0007FA  0EF0               	movlw	-16
  4385  0007FC  2605               	addwf	??_pinMode^0,f,c
  4386  0007FE  0E01               	movlw	1
  4387  000800  6E06               	movwf	(??_pinMode+1)^0,c
  4388  000802  2A05               	incf	??_pinMode^0,f,c
  4389  000804  EF06  F004         	goto	u1804
  4390  000808                     u1805:
  4391  000808  90D8               	bcf	status,0,c
  4392  00080A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4393  00080C                     u1804:
  4394  00080C  2E05               	decfsz	??_pinMode^0,f,c
  4395  00080E  EF04  F004         	goto	u1805
  4396  000812  5006               	movf	(??_pinMode+1)^0,w,c
  4397  000814  0AFF               	xorlw	255
  4398  000816  1694               	andwf	148,f,c	;volatile
  4399  000818  EF84  F004         	goto	l88
  4400  00081C                     l2253:
  4401  00081C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4402  00081E  EF1C  F004         	goto	u1810
  4403  000822  5002               	movf	(pinMode@pin+1)^0,w,c
  4404  000824  E107               	bnz	u1811
  4405  000826  0E20               	movlw	32
  4406  000828  5C01               	subwf	pinMode@pin^0,w,c
  4407  00082A  B0D8               	btfsc	status,0,c
  4408  00082C  EF1A  F004         	goto	u1811
  4409  000830  EF1C  F004         	goto	u1810
  4410  000834                     u1811:
  4411  000834  EF4A  F004         	goto	l2261
  4412  000838                     u1810:
  4413  000838                     
  4414                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4415  000838  5003               	movf	pinMode@type^0,w,c
  4416  00083A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4417  00083C  B4D8               	btfsc	status,2,c
  4418  00083E  EF23  F004         	goto	u1821
  4419  000842  EF25  F004         	goto	u1820
  4420  000846                     u1821:
  4421  000846  EF37  F004         	goto	l2259
  4422  00084A                     u1820:
  4423  00084A  C001  F005         	movff	pinMode@pin,??_pinMode
  4424  00084E  0EE8               	movlw	-24
  4425  000850  2605               	addwf	??_pinMode^0,f,c
  4426  000852  0E01               	movlw	1
  4427  000854  6E06               	movwf	(??_pinMode+1)^0,c
  4428  000856  2A05               	incf	??_pinMode^0,f,c
  4429  000858  EF30  F004         	goto	u1834
  4430  00085C                     u1835:
  4431  00085C  90D8               	bcf	status,0,c
  4432  00085E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4433  000860                     u1834:
  4434  000860  2E05               	decfsz	??_pinMode^0,f,c
  4435  000862  EF2E  F004         	goto	u1835
  4436  000866  5006               	movf	(??_pinMode+1)^0,w,c
  4437  000868  1295               	iorwf	149,f,c	;volatile
  4438  00086A  EF84  F004         	goto	l88
  4439  00086E                     l2259:
  4440  00086E  C001  F005         	movff	pinMode@pin,??_pinMode
  4441  000872  0EE8               	movlw	-24
  4442  000874  2605               	addwf	??_pinMode^0,f,c
  4443  000876  0E01               	movlw	1
  4444  000878  6E06               	movwf	(??_pinMode+1)^0,c
  4445  00087A  2A05               	incf	??_pinMode^0,f,c
  4446  00087C  EF42  F004         	goto	u1844
  4447  000880                     u1845:
  4448  000880  90D8               	bcf	status,0,c
  4449  000882  3606               	rlcf	(??_pinMode+1)^0,f,c
  4450  000884                     u1844:
  4451  000884  2E05               	decfsz	??_pinMode^0,f,c
  4452  000886  EF40  F004         	goto	u1845
  4453  00088A  5006               	movf	(??_pinMode+1)^0,w,c
  4454  00088C  0AFF               	xorlw	255
  4455  00088E  1695               	andwf	149,f,c	;volatile
  4456  000890  EF84  F004         	goto	l88
  4457  000894                     l2261:
  4458  000894  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4459  000896  EF58  F004         	goto	u1850
  4460  00089A  5002               	movf	(pinMode@pin+1)^0,w,c
  4461  00089C  E107               	bnz	u1851
  4462  00089E  0E28               	movlw	40
  4463  0008A0  5C01               	subwf	pinMode@pin^0,w,c
  4464  0008A2  B0D8               	btfsc	status,0,c
  4465  0008A4  EF56  F004         	goto	u1851
  4466  0008A8  EF58  F004         	goto	u1850
  4467  0008AC                     u1851:
  4468  0008AC  EF84  F004         	goto	l88
  4469  0008B0                     u1850:
  4470  0008B0                     
  4471                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4472  0008B0  5003               	movf	pinMode@type^0,w,c
  4473  0008B2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4474  0008B4  B4D8               	btfsc	status,2,c
  4475  0008B6  EF5F  F004         	goto	u1861
  4476  0008BA  EF61  F004         	goto	u1860
  4477  0008BE                     u1861:
  4478  0008BE  EF73  F004         	goto	l2267
  4479  0008C2                     u1860:
  4480  0008C2  C001  F005         	movff	pinMode@pin,??_pinMode
  4481  0008C6  0EE0               	movlw	-32
  4482  0008C8  2605               	addwf	??_pinMode^0,f,c
  4483  0008CA  0E01               	movlw	1
  4484  0008CC  6E06               	movwf	(??_pinMode+1)^0,c
  4485  0008CE  2A05               	incf	??_pinMode^0,f,c
  4486  0008D0  EF6C  F004         	goto	u1874
  4487  0008D4                     u1875:
  4488  0008D4  90D8               	bcf	status,0,c
  4489  0008D6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4490  0008D8                     u1874:
  4491  0008D8  2E05               	decfsz	??_pinMode^0,f,c
  4492  0008DA  EF6A  F004         	goto	u1875
  4493  0008DE  5006               	movf	(??_pinMode+1)^0,w,c
  4494  0008E0  1296               	iorwf	150,f,c	;volatile
  4495  0008E2  EF84  F004         	goto	l88
  4496  0008E6                     l2267:
  4497  0008E6  C001  F005         	movff	pinMode@pin,??_pinMode
  4498  0008EA  0EE0               	movlw	-32
  4499  0008EC  2605               	addwf	??_pinMode^0,f,c
  4500  0008EE  0E01               	movlw	1
  4501  0008F0  6E06               	movwf	(??_pinMode+1)^0,c
  4502  0008F2  2A05               	incf	??_pinMode^0,f,c
  4503  0008F4  EF7E  F004         	goto	u1884
  4504  0008F8                     u1885:
  4505  0008F8  90D8               	bcf	status,0,c
  4506  0008FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4507  0008FC                     u1884:
  4508  0008FC  2E05               	decfsz	??_pinMode^0,f,c
  4509  0008FE  EF7C  F004         	goto	u1885
  4510  000902  5006               	movf	(??_pinMode+1)^0,w,c
  4511  000904  0AFF               	xorlw	255
  4512  000906  1696               	andwf	150,f,c	;volatile
  4513  000908                     l88:
  4514  000908  0012               	return		;funcret
  4515  00090A                     __end_of_pinMode:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _kpDebounce *****************
  4519 ;; Defined at:
  4520 ;;		line 27 in file "keypad.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  i               2   12[COMRAM] int 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4534 ;;      Params:         0       0       0       0       0       0       0
  4535 ;;      Locals:         2       0       0       0       0       0       0
  4536 ;;      Temps:          3       0       0       0       0       0       0
  4537 ;;      Totals:         5       0       0       0       0       0       0
  4538 ;;Total ram usage:        5 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 3
  4541 ;; This function calls:
  4542 ;;		_digitalRead
  4543 ;;		_soWrite
  4544 ;; This function is called by:
  4545 ;;		_main
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text35
  4550  000E76                     __ptext35:
  4551                           	callstack 0
  4552  000E76                     _kpDebounce:
  4553                           	callstack 27
  4554  000E76                     
  4555                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4556  000E76  0E00               	movlw	0
  4557  000E78  6E22               	movwf	(kpDebounce@newRead+1)^0,c
  4558  000E7A  0E00               	movlw	0
  4559  000E7C  6E21               	movwf	kpDebounce@newRead^0,c
  4560                           
  4561                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4562  000E7E  0E00               	movlw	0
  4563  000E80  6E0E               	movwf	(kpDebounce@i+1)^0,c
  4564  000E82  0E00               	movlw	0
  4565  000E84  6E0D               	movwf	kpDebounce@i^0,c
  4566  000E86                     l2505:
  4567  000E86  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  4568  000E88  EF4F  F007         	goto	u2231
  4569  000E8C  500E               	movf	(kpDebounce@i+1)^0,w,c
  4570  000E8E  E109               	bnz	u2230
  4571  000E90  0E05               	movlw	5
  4572  000E92  5C0D               	subwf	kpDebounce@i^0,w,c
  4573  000E94  A0D8               	btfss	status,0,c
  4574  000E96  EF4F  F007         	goto	u2231
  4575  000E9A  EF51  F007         	goto	u2230
  4576  000E9E                     u2231:
  4577  000E9E  EF53  F007         	goto	l2509
  4578  000EA2                     u2230:
  4579  000EA2  EFB4  F007         	goto	l2521
  4580  000EA6                     l2509:
  4581                           
  4582                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4583  000EA6  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4584  000EAA  0E03               	movlw	3
  4585  000EAC  260A               	addwf	??_kpDebounce^0,f,c
  4586  000EAE  0E01               	movlw	1
  4587  000EB0  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4588  000EB2  0E00               	movlw	0
  4589  000EB4  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4590  000EB6  2A0A               	incf	??_kpDebounce^0,f,c
  4591  000EB8  EF61  F007         	goto	u2244
  4592  000EBC                     u2245:
  4593  000EBC  90D8               	bcf	status,0,c
  4594  000EBE  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4595  000EC0  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4596  000EC2                     u2244:
  4597  000EC2  2E0A               	decfsz	??_kpDebounce^0,f,c
  4598  000EC4  EF5E  F007         	goto	u2245
  4599  000EC8  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  4600  000ECC  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  4601  000ED0  EC7E  F00D         	call	_soWrite	;wreg free
  4602                           
  4603                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4604  000ED4  0E00               	movlw	0
  4605  000ED6  6E02               	movwf	(digitalRead@pin+1)^0,c
  4606  000ED8  0E0A               	movlw	10
  4607  000EDA  6E01               	movwf	digitalRead@pin^0,c
  4608  000EDC  EC86  F006         	call	_digitalRead	;wreg free
  4609  000EE0  5001               	movf	?_digitalRead^0,w,c
  4610  000EE2  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4611  000EE4  B4D8               	btfsc	status,2,c
  4612  000EE6  EF77  F007         	goto	u2251
  4613  000EEA  EF79  F007         	goto	u2250
  4614  000EEE                     u2251:
  4615  000EEE  EF8C  F007         	goto	l2513
  4616  000EF2                     u2250:
  4617  000EF2                     
  4618                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4619  000EF2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4620  000EF6  0E01               	movlw	1
  4621  000EF8  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4622  000EFA  0E00               	movlw	0
  4623  000EFC  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4624  000EFE  2A0A               	incf	??_kpDebounce^0,f,c
  4625  000F00  EF85  F007         	goto	u2264
  4626  000F04                     u2265:
  4627  000F04  90D8               	bcf	status,0,c
  4628  000F06  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4629  000F08  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4630  000F0A                     u2264:
  4631  000F0A  2E0A               	decfsz	??_kpDebounce^0,f,c
  4632  000F0C  EF82  F007         	goto	u2265
  4633  000F10  500B               	movf	(??_kpDebounce+1)^0,w,c
  4634  000F12  1221               	iorwf	kpDebounce@newRead^0,f,c
  4635  000F14  500C               	movf	(??_kpDebounce+2)^0,w,c
  4636  000F16  1222               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4637  000F18                     l2513:
  4638                           
  4639                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4640  000F18  0E00               	movlw	0
  4641  000F1A  6E02               	movwf	(digitalRead@pin+1)^0,c
  4642  000F1C  0E09               	movlw	9
  4643  000F1E  6E01               	movwf	digitalRead@pin^0,c
  4644  000F20  EC86  F006         	call	_digitalRead	;wreg free
  4645  000F24  5001               	movf	?_digitalRead^0,w,c
  4646  000F26  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4647  000F28  B4D8               	btfsc	status,2,c
  4648  000F2A  EF99  F007         	goto	u2271
  4649  000F2E  EF9B  F007         	goto	u2270
  4650  000F32                     u2271:
  4651  000F32  EFB0  F007         	goto	l2517
  4652  000F36                     u2270:
  4653  000F36                     
  4654                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4655  000F36  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4656  000F3A  0E05               	movlw	5
  4657  000F3C  260A               	addwf	??_kpDebounce^0,f,c
  4658  000F3E  0E01               	movlw	1
  4659  000F40  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4660  000F42  0E00               	movlw	0
  4661  000F44  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4662  000F46  2A0A               	incf	??_kpDebounce^0,f,c
  4663  000F48  EFA9  F007         	goto	u2284
  4664  000F4C                     u2285:
  4665  000F4C  90D8               	bcf	status,0,c
  4666  000F4E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4667  000F50  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4668  000F52                     u2284:
  4669  000F52  2E0A               	decfsz	??_kpDebounce^0,f,c
  4670  000F54  EFA6  F007         	goto	u2285
  4671  000F58  500B               	movf	(??_kpDebounce+1)^0,w,c
  4672  000F5A  1221               	iorwf	kpDebounce@newRead^0,f,c
  4673  000F5C  500C               	movf	(??_kpDebounce+2)^0,w,c
  4674  000F5E  1222               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4675  000F60                     l2517:
  4676                           
  4677                           ;keypad.c: 42:     }
  4678  000F60  4A0D               	infsnz	kpDebounce@i^0,f,c
  4679  000F62  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  4680  000F64  EF43  F007         	goto	l2505
  4681  000F68                     l2521:
  4682                           
  4683                           ;keypad.c: 43:     if (oldRead == newRead) {
  4684  000F68  5021               	movf	kpDebounce@newRead^0,w,c
  4685  000F6A  181F               	xorwf	kpDebounce@oldRead^0,w,c
  4686  000F6C  E107               	bnz	u2291
  4687  000F6E  5022               	movf	(kpDebounce@newRead+1)^0,w,c
  4688  000F70  1820               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4689  000F72  A4D8               	btfss	status,2,c
  4690  000F74  EFBE  F007         	goto	u2291
  4691  000F78  EFC0  F007         	goto	u2290
  4692  000F7C                     u2291:
  4693  000F7C  EFC3  F007         	goto	l2525
  4694  000F80                     u2290:
  4695  000F80                     
  4696                           ;keypad.c: 44:         tempo--;
  4697  000F80  062C               	decf	kpDebounce@tempo^0,f,c
  4698                           
  4699                           ;keypad.c: 45:     } else {
  4700  000F82  EFC9  F007         	goto	l125
  4701  000F86                     l2525:
  4702                           
  4703                           ;keypad.c: 46:         tempo = 1;
  4704  000F86  0E01               	movlw	1
  4705  000F88  6E2C               	movwf	kpDebounce@tempo^0,c
  4706  000F8A                     
  4707                           ;keypad.c: 47:         oldRead = newRead;
  4708  000F8A  C021  F01F         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4709  000F8E  C022  F020         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4710  000F92                     l125:
  4711                           
  4712                           ;keypad.c: 49:     if (tempo == 0) {
  4713  000F92  502C               	movf	kpDebounce@tempo^0,w,c
  4714  000F94  A4D8               	btfss	status,2,c
  4715  000F96  EFCF  F007         	goto	u2301
  4716  000F9A  EFD1  F007         	goto	u2300
  4717  000F9E                     u2301:
  4718  000F9E  EFD5  F007         	goto	l127
  4719  000FA2                     u2300:
  4720  000FA2                     
  4721                           ;keypad.c: 50:         keys = oldRead;
  4722  000FA2  C01F  F023         	movff	kpDebounce@oldRead,_keys
  4723  000FA6  C020  F024         	movff	kpDebounce@oldRead+1,_keys+1
  4724  000FAA                     l127:
  4725  000FAA  0012               	return		;funcret
  4726  000FAC                     __end_of_kpDebounce:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _soWrite *****************
  4730 ;; Defined at:
  4731 ;;		line 18 in file "so.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  value           2    6[COMRAM] int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  i               1    8[COMRAM] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4745 ;;      Params:         2       0       0       0       0       0       0
  4746 ;;      Locals:         1       0       0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0
  4748 ;;      Totals:         3       0       0       0       0       0       0
  4749 ;;Total ram usage:        3 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 2
  4752 ;; This function calls:
  4753 ;;		_PulseClockData
  4754 ;;		_PulseEnClock
  4755 ;;		_digitalWrite
  4756 ;; This function is called by:
  4757 ;;		_kpDebounce
  4758 ;;		_pushNibble
  4759 ;;		_pushByte
  4760 ;;		_ssdUpdate
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text36
  4765  001AFC                     __ptext36:
  4766                           	callstack 0
  4767  001AFC                     _soWrite:
  4768                           	callstack 24
  4769  001AFC                     
  4770                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4771  001AFC  0E00               	movlw	0
  4772  001AFE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4773  001B00  0E08               	movlw	8
  4774  001B02  6E01               	movwf	digitalWrite@pin^0,c
  4775  001B04  0E00               	movlw	0
  4776  001B06  6E04               	movwf	(digitalWrite@value+1)^0,c
  4777  001B08  0E00               	movlw	0
  4778  001B0A  6E03               	movwf	digitalWrite@value^0,c
  4779  001B0C  EC85  F004         	call	_digitalWrite	;wreg free
  4780  001B10                     
  4781                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4782  001B10  0E00               	movlw	0
  4783  001B12  6E09               	movwf	soWrite@i^0,c
  4784  001B14                     l2211:
  4785                           
  4786                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4787  001B14  0E00               	movlw	0
  4788  001B16  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4789  001B18  0E1E               	movlw	30
  4790  001B1A  6E01               	movwf	digitalWrite@pin^0,c
  4791  001B1C  0E80               	movlw	128
  4792  001B1E  1407               	andwf	soWrite@value^0,w,c
  4793  001B20  6E03               	movwf	digitalWrite@value^0,c
  4794  001B22  6A04               	clrf	(digitalWrite@value+1)^0,c
  4795  001B24  EC85  F004         	call	_digitalWrite	;wreg free
  4796                           
  4797                           ;so.c: 23:   PulseClockData();
  4798  001B28  EC5C  F00E         	call	_PulseClockData	;wreg free
  4799  001B2C                     
  4800                           ;so.c: 24:   value <<= 1;
  4801  001B2C  90D8               	bcf	status,0,c
  4802  001B2E  3607               	rlcf	soWrite@value^0,f,c
  4803  001B30  3608               	rlcf	(soWrite@value+1)^0,f,c
  4804  001B32                     
  4805                           ;so.c: 25:  }
  4806  001B32  2A09               	incf	soWrite@i^0,f,c
  4807  001B34  0E07               	movlw	7
  4808  001B36  6409               	cpfsgt	soWrite@i^0,c
  4809  001B38  EFA0  F00D         	goto	u1681
  4810  001B3C  EFA2  F00D         	goto	u1680
  4811  001B40                     u1681:
  4812  001B40  EF8A  F00D         	goto	l2211
  4813  001B44                     u1680:
  4814  001B44                     
  4815                           ;so.c: 26:  PulseEnClock();
  4816  001B44  EC47  F00E         	call	_PulseEnClock	;wreg free
  4817  001B48  0012               	return		;funcret
  4818  001B4A                     __end_of_soWrite:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function _PulseEnClock *****************
  4822 ;; Defined at:
  4823 ;;		line 9 in file "so.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4837 ;;      Params:         0       0       0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 1
  4844 ;; This function calls:
  4845 ;;		_digitalWrite
  4846 ;; This function is called by:
  4847 ;;		_soWrite
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text37
  4852  001C8E                     __ptext37:
  4853                           	callstack 0
  4854  001C8E                     _PulseEnClock:
  4855                           	callstack 24
  4856  001C8E                     
  4857                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4858  001C8E  0E00               	movlw	0
  4859  001C90  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4860  001C92  0E1F               	movlw	31
  4861  001C94  6E01               	movwf	digitalWrite@pin^0,c
  4862  001C96  0E00               	movlw	0
  4863  001C98  6E04               	movwf	(digitalWrite@value+1)^0,c
  4864  001C9A  0E01               	movlw	1
  4865  001C9C  6E03               	movwf	digitalWrite@value^0,c
  4866  001C9E  EC85  F004         	call	_digitalWrite	;wreg free
  4867                           
  4868                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4869  001CA2  0E00               	movlw	0
  4870  001CA4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4871  001CA6  0E1F               	movlw	31
  4872  001CA8  6E01               	movwf	digitalWrite@pin^0,c
  4873  001CAA  0E00               	movlw	0
  4874  001CAC  6E04               	movwf	(digitalWrite@value+1)^0,c
  4875  001CAE  0E00               	movlw	0
  4876  001CB0  6E03               	movwf	digitalWrite@value^0,c
  4877  001CB2  EC85  F004         	call	_digitalWrite	;wreg free
  4878  001CB6  0012               	return		;funcret
  4879  001CB8                     __end_of_PulseEnClock:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _PulseClockData *****************
  4883 ;; Defined at:
  4884 ;;		line 14 in file "so.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4898 ;;      Params:         0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 1
  4905 ;; This function calls:
  4906 ;;		_digitalWrite
  4907 ;; This function is called by:
  4908 ;;		_soWrite
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text38
  4913  001CB8                     __ptext38:
  4914                           	callstack 0
  4915  001CB8                     _PulseClockData:
  4916                           	callstack 24
  4917  001CB8                     
  4918                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4919  001CB8  0E00               	movlw	0
  4920  001CBA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4921  001CBC  0E08               	movlw	8
  4922  001CBE  6E01               	movwf	digitalWrite@pin^0,c
  4923  001CC0  0E00               	movlw	0
  4924  001CC2  6E04               	movwf	(digitalWrite@value+1)^0,c
  4925  001CC4  0E01               	movlw	1
  4926  001CC6  6E03               	movwf	digitalWrite@value^0,c
  4927  001CC8  EC85  F004         	call	_digitalWrite	;wreg free
  4928                           
  4929                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4930  001CCC  0E00               	movlw	0
  4931  001CCE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4932  001CD0  0E08               	movlw	8
  4933  001CD2  6E01               	movwf	digitalWrite@pin^0,c
  4934  001CD4  0E00               	movlw	0
  4935  001CD6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4936  001CD8  0E00               	movlw	0
  4937  001CDA  6E03               	movwf	digitalWrite@value^0,c
  4938  001CDC  EC85  F004         	call	_digitalWrite	;wreg free
  4939  001CE0  0012               	return		;funcret
  4940  001CE2                     __end_of_PulseClockData:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _digitalWrite *****************
  4944 ;; Defined at:
  4945 ;;		line 14 in file "io.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  pin             2    0[COMRAM] int 
  4948 ;;  value           2    2[COMRAM] int 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4960 ;;      Params:         4       0       0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0
  4962 ;;      Temps:          2       0       0       0       0       0       0
  4963 ;;      Totals:         6       0       0       0       0       0       0
  4964 ;;Total ram usage:        6 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_pulseEnablePin
  4970 ;;		_pushNibble
  4971 ;;		_pushByte
  4972 ;;		_PulseEnClock
  4973 ;;		_PulseClockData
  4974 ;;		_soWrite
  4975 ;;		_rgbColor
  4976 ;;		_turnOn
  4977 ;;		_turnOff
  4978 ;;		_ssdUpdate
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text39
  4983  00090A                     __ptext39:
  4984                           	callstack 0
  4985  00090A                     _digitalWrite:
  4986                           	callstack 25
  4987  00090A                     
  4988                           ;io.c: 16:     if(pin <8){
  4989  00090A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4990  00090C  EF93  F004         	goto	u1480
  4991  000910  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4992  000912  E107               	bnz	u1481
  4993  000914  0E08               	movlw	8
  4994  000916  5C01               	subwf	digitalWrite@pin^0,w,c
  4995  000918  B0D8               	btfsc	status,0,c
  4996  00091A  EF91  F004         	goto	u1481
  4997  00091E  EF93  F004         	goto	u1480
  4998  000922                     u1481:
  4999  000922  EFBD  F004         	goto	l2167
  5000  000926                     u1480:
  5001  000926                     
  5002                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5003  000926  5003               	movf	digitalWrite@value^0,w,c
  5004  000928  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5005  00092A  B4D8               	btfsc	status,2,c
  5006  00092C  EF9A  F004         	goto	u1491
  5007  000930  EF9C  F004         	goto	u1490
  5008  000934                     u1491:
  5009  000934  EFAC  F004         	goto	l2165
  5010  000938                     u1490:
  5011  000938  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5012  00093C  0E01               	movlw	1
  5013  00093E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5014  000940  2A05               	incf	??_digitalWrite^0,f,c
  5015  000942  EFA5  F004         	goto	u1504
  5016  000946                     u1505:
  5017  000946  90D8               	bcf	status,0,c
  5018  000948  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5019  00094A                     u1504:
  5020  00094A  2E05               	decfsz	??_digitalWrite^0,f,c
  5021  00094C  EFA3  F004         	goto	u1505
  5022  000950  5006               	movf	(??_digitalWrite+1)^0,w,c
  5023  000952  1280               	iorwf	128,f,c	;volatile
  5024  000954  EFAB  F005         	goto	l54
  5025  000958                     l2165:
  5026  000958  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5027  00095C  0E01               	movlw	1
  5028  00095E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5029  000960  2A05               	incf	??_digitalWrite^0,f,c
  5030  000962  EFB5  F004         	goto	u1514
  5031  000966                     u1515:
  5032  000966  90D8               	bcf	status,0,c
  5033  000968  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5034  00096A                     u1514:
  5035  00096A  2E05               	decfsz	??_digitalWrite^0,f,c
  5036  00096C  EFB3  F004         	goto	u1515
  5037  000970  5006               	movf	(??_digitalWrite+1)^0,w,c
  5038  000972  0AFF               	xorlw	255
  5039  000974  1680               	andwf	128,f,c	;volatile
  5040  000976  EFAB  F005         	goto	l54
  5041  00097A                     l2167:
  5042  00097A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5043  00097C  EFCB  F004         	goto	u1520
  5044  000980  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5045  000982  E107               	bnz	u1521
  5046  000984  0E10               	movlw	16
  5047  000986  5C01               	subwf	digitalWrite@pin^0,w,c
  5048  000988  B0D8               	btfsc	status,0,c
  5049  00098A  EFC9  F004         	goto	u1521
  5050  00098E  EFCB  F004         	goto	u1520
  5051  000992                     u1521:
  5052  000992  EFF9  F004         	goto	l2175
  5053  000996                     u1520:
  5054  000996                     
  5055                           ;io.c: 20:         pin -=8;
  5056  000996  0EF8               	movlw	248
  5057  000998  2601               	addwf	digitalWrite@pin^0,f,c
  5058  00099A  0EFF               	movlw	255
  5059  00099C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5060                           
  5061                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5062  00099E  5003               	movf	digitalWrite@value^0,w,c
  5063  0009A0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5064  0009A2  B4D8               	btfsc	status,2,c
  5065  0009A4  EFD6  F004         	goto	u1531
  5066  0009A8  EFD8  F004         	goto	u1530
  5067  0009AC                     u1531:
  5068  0009AC  EFE8  F004         	goto	l2173
  5069  0009B0                     u1530:
  5070  0009B0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5071  0009B4  0E01               	movlw	1
  5072  0009B6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5073  0009B8  2A05               	incf	??_digitalWrite^0,f,c
  5074  0009BA  EFE1  F004         	goto	u1544
  5075  0009BE                     u1545:
  5076  0009BE  90D8               	bcf	status,0,c
  5077  0009C0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5078  0009C2                     u1544:
  5079  0009C2  2E05               	decfsz	??_digitalWrite^0,f,c
  5080  0009C4  EFDF  F004         	goto	u1545
  5081  0009C8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5082  0009CA  1281               	iorwf	129,f,c	;volatile
  5083  0009CC  EFAB  F005         	goto	l54
  5084  0009D0                     l2173:
  5085  0009D0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5086  0009D4  0E01               	movlw	1
  5087  0009D6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5088  0009D8  2A05               	incf	??_digitalWrite^0,f,c
  5089  0009DA  EFF1  F004         	goto	u1554
  5090  0009DE                     u1555:
  5091  0009DE  90D8               	bcf	status,0,c
  5092  0009E0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5093  0009E2                     u1554:
  5094  0009E2  2E05               	decfsz	??_digitalWrite^0,f,c
  5095  0009E4  EFEF  F004         	goto	u1555
  5096  0009E8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5097  0009EA  0AFF               	xorlw	255
  5098  0009EC  1681               	andwf	129,f,c	;volatile
  5099  0009EE  EFAB  F005         	goto	l54
  5100  0009F2                     l2175:
  5101  0009F2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5102  0009F4  EF07  F005         	goto	u1560
  5103  0009F8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5104  0009FA  E107               	bnz	u1561
  5105  0009FC  0E18               	movlw	24
  5106  0009FE  5C01               	subwf	digitalWrite@pin^0,w,c
  5107  000A00  B0D8               	btfsc	status,0,c
  5108  000A02  EF05  F005         	goto	u1561
  5109  000A06  EF07  F005         	goto	u1560
  5110  000A0A                     u1561:
  5111  000A0A  EF35  F005         	goto	l2183
  5112  000A0E                     u1560:
  5113  000A0E                     
  5114                           ;io.c: 24:         pin -=16;
  5115  000A0E  0EF0               	movlw	240
  5116  000A10  2601               	addwf	digitalWrite@pin^0,f,c
  5117  000A12  0EFF               	movlw	255
  5118  000A14  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5119                           
  5120                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5121  000A16  5003               	movf	digitalWrite@value^0,w,c
  5122  000A18  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5123  000A1A  B4D8               	btfsc	status,2,c
  5124  000A1C  EF12  F005         	goto	u1571
  5125  000A20  EF14  F005         	goto	u1570
  5126  000A24                     u1571:
  5127  000A24  EF24  F005         	goto	l2181
  5128  000A28                     u1570:
  5129  000A28  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5130  000A2C  0E01               	movlw	1
  5131  000A2E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5132  000A30  2A05               	incf	??_digitalWrite^0,f,c
  5133  000A32  EF1D  F005         	goto	u1584
  5134  000A36                     u1585:
  5135  000A36  90D8               	bcf	status,0,c
  5136  000A38  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5137  000A3A                     u1584:
  5138  000A3A  2E05               	decfsz	??_digitalWrite^0,f,c
  5139  000A3C  EF1B  F005         	goto	u1585
  5140  000A40  5006               	movf	(??_digitalWrite+1)^0,w,c
  5141  000A42  1282               	iorwf	130,f,c	;volatile
  5142  000A44  EFAB  F005         	goto	l54
  5143  000A48                     l2181:
  5144  000A48  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5145  000A4C  0E01               	movlw	1
  5146  000A4E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5147  000A50  2A05               	incf	??_digitalWrite^0,f,c
  5148  000A52  EF2D  F005         	goto	u1594
  5149  000A56                     u1595:
  5150  000A56  90D8               	bcf	status,0,c
  5151  000A58  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5152  000A5A                     u1594:
  5153  000A5A  2E05               	decfsz	??_digitalWrite^0,f,c
  5154  000A5C  EF2B  F005         	goto	u1595
  5155  000A60  5006               	movf	(??_digitalWrite+1)^0,w,c
  5156  000A62  0AFF               	xorlw	255
  5157  000A64  1682               	andwf	130,f,c	;volatile
  5158  000A66  EFAB  F005         	goto	l54
  5159  000A6A                     l2183:
  5160  000A6A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5161  000A6C  EF43  F005         	goto	u1600
  5162  000A70  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5163  000A72  E107               	bnz	u1601
  5164  000A74  0E20               	movlw	32
  5165  000A76  5C01               	subwf	digitalWrite@pin^0,w,c
  5166  000A78  B0D8               	btfsc	status,0,c
  5167  000A7A  EF41  F005         	goto	u1601
  5168  000A7E  EF43  F005         	goto	u1600
  5169  000A82                     u1601:
  5170  000A82  EF71  F005         	goto	l2191
  5171  000A86                     u1600:
  5172  000A86                     
  5173                           ;io.c: 28:         pin -=24;
  5174  000A86  0EE8               	movlw	232
  5175  000A88  2601               	addwf	digitalWrite@pin^0,f,c
  5176  000A8A  0EFF               	movlw	255
  5177  000A8C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5178                           
  5179                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5180  000A8E  5003               	movf	digitalWrite@value^0,w,c
  5181  000A90  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5182  000A92  B4D8               	btfsc	status,2,c
  5183  000A94  EF4E  F005         	goto	u1611
  5184  000A98  EF50  F005         	goto	u1610
  5185  000A9C                     u1611:
  5186  000A9C  EF60  F005         	goto	l2189
  5187  000AA0                     u1610:
  5188  000AA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5189  000AA4  0E01               	movlw	1
  5190  000AA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5191  000AA8  2A05               	incf	??_digitalWrite^0,f,c
  5192  000AAA  EF59  F005         	goto	u1624
  5193  000AAE                     u1625:
  5194  000AAE  90D8               	bcf	status,0,c
  5195  000AB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5196  000AB2                     u1624:
  5197  000AB2  2E05               	decfsz	??_digitalWrite^0,f,c
  5198  000AB4  EF57  F005         	goto	u1625
  5199  000AB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5200  000ABA  1283               	iorwf	131,f,c	;volatile
  5201  000ABC  EFAB  F005         	goto	l54
  5202  000AC0                     l2189:
  5203  000AC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5204  000AC4  0E01               	movlw	1
  5205  000AC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  5206  000AC8  2A05               	incf	??_digitalWrite^0,f,c
  5207  000ACA  EF69  F005         	goto	u1634
  5208  000ACE                     u1635:
  5209  000ACE  90D8               	bcf	status,0,c
  5210  000AD0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5211  000AD2                     u1634:
  5212  000AD2  2E05               	decfsz	??_digitalWrite^0,f,c
  5213  000AD4  EF67  F005         	goto	u1635
  5214  000AD8  5006               	movf	(??_digitalWrite+1)^0,w,c
  5215  000ADA  0AFF               	xorlw	255
  5216  000ADC  1683               	andwf	131,f,c	;volatile
  5217  000ADE  EFAB  F005         	goto	l54
  5218  000AE2                     l2191:
  5219  000AE2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5220  000AE4  EF7F  F005         	goto	u1640
  5221  000AE8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5222  000AEA  E107               	bnz	u1641
  5223  000AEC  0E28               	movlw	40
  5224  000AEE  5C01               	subwf	digitalWrite@pin^0,w,c
  5225  000AF0  B0D8               	btfsc	status,0,c
  5226  000AF2  EF7D  F005         	goto	u1641
  5227  000AF6  EF7F  F005         	goto	u1640
  5228  000AFA                     u1641:
  5229  000AFA  EFAB  F005         	goto	l54
  5230  000AFE                     u1640:
  5231  000AFE                     
  5232                           ;io.c: 32:         pin -=32;
  5233  000AFE  0EE0               	movlw	224
  5234  000B00  2601               	addwf	digitalWrite@pin^0,f,c
  5235  000B02  0EFF               	movlw	255
  5236  000B04  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5237                           
  5238                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5239  000B06  5003               	movf	digitalWrite@value^0,w,c
  5240  000B08  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5241  000B0A  B4D8               	btfsc	status,2,c
  5242  000B0C  EF8A  F005         	goto	u1651
  5243  000B10  EF8C  F005         	goto	u1650
  5244  000B14                     u1651:
  5245  000B14  EF9C  F005         	goto	l2197
  5246  000B18                     u1650:
  5247  000B18  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5248  000B1C  0E01               	movlw	1
  5249  000B1E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5250  000B20  2A05               	incf	??_digitalWrite^0,f,c
  5251  000B22  EF95  F005         	goto	u1664
  5252  000B26                     u1665:
  5253  000B26  90D8               	bcf	status,0,c
  5254  000B28  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5255  000B2A                     u1664:
  5256  000B2A  2E05               	decfsz	??_digitalWrite^0,f,c
  5257  000B2C  EF93  F005         	goto	u1665
  5258  000B30  5006               	movf	(??_digitalWrite+1)^0,w,c
  5259  000B32  1284               	iorwf	132,f,c	;volatile
  5260  000B34  EFAB  F005         	goto	l54
  5261  000B38                     l2197:
  5262  000B38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5263  000B3C  0E01               	movlw	1
  5264  000B3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  5265  000B40  2A05               	incf	??_digitalWrite^0,f,c
  5266  000B42  EFA5  F005         	goto	u1674
  5267  000B46                     u1675:
  5268  000B46  90D8               	bcf	status,0,c
  5269  000B48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5270  000B4A                     u1674:
  5271  000B4A  2E05               	decfsz	??_digitalWrite^0,f,c
  5272  000B4C  EFA3  F005         	goto	u1675
  5273  000B50  5006               	movf	(??_digitalWrite+1)^0,w,c
  5274  000B52  0AFF               	xorlw	255
  5275  000B54  1684               	andwf	132,f,c	;volatile
  5276  000B56                     l54:
  5277  000B56  0012               	return		;funcret
  5278  000B58                     __end_of_digitalWrite:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function _digitalRead *****************
  5282 ;; Defined at:
  5283 ;;		line 39 in file "io.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  pin             2    0[COMRAM] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  2    0[COMRAM] int 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5297 ;;      Params:         2       0       0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0
  5299 ;;      Temps:          3       0       0       0       0       0       0
  5300 ;;      Totals:         5       0       0       0       0       0       0
  5301 ;;Total ram usage:        5 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_kpDebounce
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text40
  5311  000D0C                     __ptext40:
  5312                           	callstack 0
  5313  000D0C                     _digitalRead:
  5314                           	callstack 29
  5315  000D0C                     
  5316                           ;io.c: 40:     if(pin <8){
  5317  000D0C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5318  000D0E  EF94  F006         	goto	u2110
  5319  000D12  5002               	movf	(digitalRead@pin+1)^0,w,c
  5320  000D14  E107               	bnz	u2111
  5321  000D16  0E08               	movlw	8
  5322  000D18  5C01               	subwf	digitalRead@pin^0,w,c
  5323  000D1A  B0D8               	btfsc	status,0,c
  5324  000D1C  EF92  F006         	goto	u2111
  5325  000D20  EF94  F006         	goto	u2110
  5326  000D24                     u2111:
  5327  000D24  EFA8  F006         	goto	l2439
  5328  000D28                     u2110:
  5329  000D28                     
  5330                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5331  000D28  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5332  000D2C  0E01               	movlw	1
  5333  000D2E  6E04               	movwf	(??_digitalRead+1)^0,c
  5334  000D30  2A03               	incf	??_digitalRead^0,f,c
  5335  000D32  EF9D  F006         	goto	u2124
  5336  000D36                     u2125:
  5337  000D36  90D8               	bcf	status,0,c
  5338  000D38  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5339  000D3A                     u2124:
  5340  000D3A  2E03               	decfsz	??_digitalRead^0,f,c
  5341  000D3C  EF9B  F006         	goto	u2125
  5342  000D40  5004               	movf	(??_digitalRead+1)^0,w,c
  5343  000D42  1480               	andwf	128,w,c	;volatile
  5344  000D44  6E05               	movwf	(??_digitalRead+2)^0,c
  5345  000D46  5005               	movf	(??_digitalRead+2)^0,w,c
  5346  000D48  6E01               	movwf	?_digitalRead^0,c
  5347  000D4A  6A02               	clrf	(?_digitalRead+1)^0,c
  5348  000D4C  EF3A  F007         	goto	l58
  5349  000D50                     l2439:
  5350  000D50  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5351  000D52  EFB6  F006         	goto	u2130
  5352  000D56  5002               	movf	(digitalRead@pin+1)^0,w,c
  5353  000D58  E107               	bnz	u2131
  5354  000D5A  0E10               	movlw	16
  5355  000D5C  5C01               	subwf	digitalRead@pin^0,w,c
  5356  000D5E  B0D8               	btfsc	status,0,c
  5357  000D60  EFB4  F006         	goto	u2131
  5358  000D64  EFB6  F006         	goto	u2130
  5359  000D68                     u2131:
  5360  000D68  EFCC  F006         	goto	l2447
  5361  000D6C                     u2130:
  5362  000D6C                     
  5363                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5364  000D6C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5365  000D70  0EF8               	movlw	-8
  5366  000D72  2603               	addwf	??_digitalRead^0,f,c
  5367  000D74  0E01               	movlw	1
  5368  000D76  6E04               	movwf	(??_digitalRead+1)^0,c
  5369  000D78  2A03               	incf	??_digitalRead^0,f,c
  5370  000D7A  EFC1  F006         	goto	u2144
  5371  000D7E                     u2145:
  5372  000D7E  90D8               	bcf	status,0,c
  5373  000D80  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5374  000D82                     u2144:
  5375  000D82  2E03               	decfsz	??_digitalRead^0,f,c
  5376  000D84  EFBF  F006         	goto	u2145
  5377  000D88  5004               	movf	(??_digitalRead+1)^0,w,c
  5378  000D8A  1481               	andwf	129,w,c	;volatile
  5379  000D8C  6E05               	movwf	(??_digitalRead+2)^0,c
  5380  000D8E  5005               	movf	(??_digitalRead+2)^0,w,c
  5381  000D90  6E01               	movwf	?_digitalRead^0,c
  5382  000D92  6A02               	clrf	(?_digitalRead+1)^0,c
  5383  000D94  EF3A  F007         	goto	l58
  5384  000D98                     l2447:
  5385  000D98  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5386  000D9A  EFDA  F006         	goto	u2150
  5387  000D9E  5002               	movf	(digitalRead@pin+1)^0,w,c
  5388  000DA0  E107               	bnz	u2151
  5389  000DA2  0E18               	movlw	24
  5390  000DA4  5C01               	subwf	digitalRead@pin^0,w,c
  5391  000DA6  B0D8               	btfsc	status,0,c
  5392  000DA8  EFD8  F006         	goto	u2151
  5393  000DAC  EFDA  F006         	goto	u2150
  5394  000DB0                     u2151:
  5395  000DB0  EFF0  F006         	goto	l2455
  5396  000DB4                     u2150:
  5397  000DB4                     
  5398                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5399  000DB4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5400  000DB8  0EF0               	movlw	-16
  5401  000DBA  2603               	addwf	??_digitalRead^0,f,c
  5402  000DBC  0E01               	movlw	1
  5403  000DBE  6E04               	movwf	(??_digitalRead+1)^0,c
  5404  000DC0  2A03               	incf	??_digitalRead^0,f,c
  5405  000DC2  EFE5  F006         	goto	u2164
  5406  000DC6                     u2165:
  5407  000DC6  90D8               	bcf	status,0,c
  5408  000DC8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5409  000DCA                     u2164:
  5410  000DCA  2E03               	decfsz	??_digitalRead^0,f,c
  5411  000DCC  EFE3  F006         	goto	u2165
  5412  000DD0  5004               	movf	(??_digitalRead+1)^0,w,c
  5413  000DD2  1482               	andwf	130,w,c	;volatile
  5414  000DD4  6E05               	movwf	(??_digitalRead+2)^0,c
  5415  000DD6  5005               	movf	(??_digitalRead+2)^0,w,c
  5416  000DD8  6E01               	movwf	?_digitalRead^0,c
  5417  000DDA  6A02               	clrf	(?_digitalRead+1)^0,c
  5418  000DDC  EF3A  F007         	goto	l58
  5419  000DE0                     l2455:
  5420  000DE0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5421  000DE2  EFFE  F006         	goto	u2170
  5422  000DE6  5002               	movf	(digitalRead@pin+1)^0,w,c
  5423  000DE8  E107               	bnz	u2171
  5424  000DEA  0E20               	movlw	32
  5425  000DEC  5C01               	subwf	digitalRead@pin^0,w,c
  5426  000DEE  B0D8               	btfsc	status,0,c
  5427  000DF0  EFFC  F006         	goto	u2171
  5428  000DF4  EFFE  F006         	goto	u2170
  5429  000DF8                     u2171:
  5430  000DF8  EF14  F007         	goto	l2463
  5431  000DFC                     u2170:
  5432  000DFC                     
  5433                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5434  000DFC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5435  000E00  0EE8               	movlw	-24
  5436  000E02  2603               	addwf	??_digitalRead^0,f,c
  5437  000E04  0E01               	movlw	1
  5438  000E06  6E04               	movwf	(??_digitalRead+1)^0,c
  5439  000E08  2A03               	incf	??_digitalRead^0,f,c
  5440  000E0A  EF09  F007         	goto	u2184
  5441  000E0E                     u2185:
  5442  000E0E  90D8               	bcf	status,0,c
  5443  000E10  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5444  000E12                     u2184:
  5445  000E12  2E03               	decfsz	??_digitalRead^0,f,c
  5446  000E14  EF07  F007         	goto	u2185
  5447  000E18  5004               	movf	(??_digitalRead+1)^0,w,c
  5448  000E1A  1483               	andwf	131,w,c	;volatile
  5449  000E1C  6E05               	movwf	(??_digitalRead+2)^0,c
  5450  000E1E  5005               	movf	(??_digitalRead+2)^0,w,c
  5451  000E20  6E01               	movwf	?_digitalRead^0,c
  5452  000E22  6A02               	clrf	(?_digitalRead+1)^0,c
  5453  000E24  EF3A  F007         	goto	l58
  5454  000E28                     l2463:
  5455  000E28  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5456  000E2A  EF22  F007         	goto	u2190
  5457  000E2E  5002               	movf	(digitalRead@pin+1)^0,w,c
  5458  000E30  E107               	bnz	u2191
  5459  000E32  0E28               	movlw	40
  5460  000E34  5C01               	subwf	digitalRead@pin^0,w,c
  5461  000E36  B0D8               	btfsc	status,0,c
  5462  000E38  EF20  F007         	goto	u2191
  5463  000E3C  EF22  F007         	goto	u2190
  5464  000E40                     u2191:
  5465  000E40  EF38  F007         	goto	l63
  5466  000E44                     u2190:
  5467  000E44                     
  5468                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5469  000E44  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5470  000E48  0EE0               	movlw	-32
  5471  000E4A  2603               	addwf	??_digitalRead^0,f,c
  5472  000E4C  0E01               	movlw	1
  5473  000E4E  6E04               	movwf	(??_digitalRead+1)^0,c
  5474  000E50  2A03               	incf	??_digitalRead^0,f,c
  5475  000E52  EF2D  F007         	goto	u2204
  5476  000E56                     u2205:
  5477  000E56  90D8               	bcf	status,0,c
  5478  000E58  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5479  000E5A                     u2204:
  5480  000E5A  2E03               	decfsz	??_digitalRead^0,f,c
  5481  000E5C  EF2B  F007         	goto	u2205
  5482  000E60  5004               	movf	(??_digitalRead+1)^0,w,c
  5483  000E62  1484               	andwf	132,w,c	;volatile
  5484  000E64  6E05               	movwf	(??_digitalRead+2)^0,c
  5485  000E66  5005               	movf	(??_digitalRead+2)^0,w,c
  5486  000E68  6E01               	movwf	?_digitalRead^0,c
  5487  000E6A  6A02               	clrf	(?_digitalRead+1)^0,c
  5488  000E6C  EF3A  F007         	goto	l58
  5489  000E70                     l63:
  5490  000E70                     
  5491                           ;io.c: 51:     return -1;
  5492  000E70  6801               	setf	?_digitalRead^0,c
  5493  000E72  6802               	setf	(?_digitalRead+1)^0,c
  5494  000E74                     l58:
  5495  000E74  0012               	return		;funcret
  5496  000E76                     __end_of_digitalRead:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function _InfBoiler *****************
  5500 ;; Defined at:
  5501 ;;		line 34 in file "main.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  cmd             1    3[COMRAM] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         0       0       0       0       0       0       0
  5516 ;;      Locals:         1       0       0       0       0       0       0
  5517 ;;      Temps:          2       0       0       0       0       0       0
  5518 ;;      Totals:         3       0       0       0       0       0       0
  5519 ;;Total ram usage:        3 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 1
  5522 ;; This function calls:
  5523 ;;		_serialRead
  5524 ;;		_serialSend
  5525 ;; This function is called by:
  5526 ;;		_main
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text41
  5531  0012E2                     __ptext41:
  5532                           	callstack 0
  5533  0012E2                     _InfBoiler:
  5534                           	callstack 29
  5535  0012E2                     
  5536                           ;main.c: 35:     char cmd = serialRead();
  5537  0012E2  EC31  F00E         	call	_serialRead	;wreg free
  5538  0012E6  6E04               	movwf	InfBoiler@cmd^0,c
  5539  0012E8                     
  5540                           ;main.c: 37:     if (cmd != 0) {
  5541  0012E8  5004               	movf	InfBoiler@cmd^0,w,c
  5542  0012EA  B4D8               	btfsc	status,2,c
  5543  0012EC  EF7A  F009         	goto	u1231
  5544  0012F0  EF7C  F009         	goto	u1230
  5545  0012F4                     u1231:
  5546  0012F4  EFDD  F009         	goto	l409
  5547  0012F8                     u1230:
  5548  0012F8  EFBC  F009         	goto	l1893
  5549  0012FC                     l1865:
  5550                           
  5551                           ;main.c: 40:                 serialSend('T');
  5552  0012FC  0E54               	movlw	84
  5553  0012FE  ECF3  F00E         	call	_serialSend
  5554  001302                     
  5555                           ;main.c: 41:                 temp++;
  5556  001302  4A2D               	infsnz	_temp^0,f,c
  5557  001304  2A2E               	incf	(_temp+1)^0,f,c
  5558                           
  5559                           ;main.c: 42:                 break;
  5560  001306  EFDD  F009         	goto	l409
  5561  00130A                     l1869:
  5562                           
  5563                           ;main.c: 45:                 serialSend('p');
  5564  00130A  0E70               	movlw	112
  5565  00130C  ECF3  F00E         	call	_serialSend
  5566  001310                     
  5567                           ;main.c: 46:                 if (temp > 0) {
  5568  001310  502D               	movf	_temp^0,w,c
  5569  001312  102E               	iorwf	(_temp+1)^0,w,c
  5570  001314  B4D8               	btfsc	status,2,c
  5571  001316  EF8F  F009         	goto	u1241
  5572  00131A  EF91  F009         	goto	u1240
  5573  00131E                     u1241:
  5574  00131E  EFDD  F009         	goto	l409
  5575  001322                     u1240:
  5576  001322                     
  5577                           ;main.c: 47:                     temp--;
  5578  001322  062D               	decf	_temp^0,f,c
  5579  001324  A0D8               	btfss	status,0,c
  5580  001326  062E               	decf	(_temp+1)^0,f,c
  5581  001328  EFDD  F009         	goto	l409
  5582  00132C                     l1875:
  5583                           
  5584                           ;main.c: 52:                 serialSend('P');
  5585  00132C  0E50               	movlw	80
  5586  00132E  ECF3  F00E         	call	_serialSend
  5587  001332                     
  5588                           ;main.c: 53:                 pres++;
  5589  001332  4A2F               	infsnz	_pres^0,f,c
  5590  001334  2A30               	incf	(_pres+1)^0,f,c
  5591                           
  5592                           ;main.c: 54:                 break;
  5593  001336  EFDD  F009         	goto	l409
  5594  00133A                     l1879:
  5595                           
  5596                           ;main.c: 57:                 serialSend('p');
  5597  00133A  0E70               	movlw	112
  5598  00133C  ECF3  F00E         	call	_serialSend
  5599  001340                     
  5600                           ;main.c: 58:                 if (pres > 0) {
  5601  001340  502F               	movf	_pres^0,w,c
  5602  001342  1030               	iorwf	(_pres+1)^0,w,c
  5603  001344  B4D8               	btfsc	status,2,c
  5604  001346  EFA7  F009         	goto	u1251
  5605  00134A  EFA9  F009         	goto	u1250
  5606  00134E                     u1251:
  5607  00134E  EFDD  F009         	goto	l409
  5608  001352                     u1250:
  5609  001352                     
  5610                           ;main.c: 59:                     pres--;
  5611  001352  062F               	decf	_pres^0,f,c
  5612  001354  A0D8               	btfss	status,0,c
  5613  001356  0630               	decf	(_pres+1)^0,f,c
  5614  001358  EFDD  F009         	goto	l409
  5615  00135C                     l1885:
  5616                           
  5617                           ;main.c: 65:                 serialSend('N');
  5618  00135C  0E4E               	movlw	78
  5619  00135E  ECF3  F00E         	call	_serialSend
  5620  001362                     
  5621                           ;main.c: 66:                 if (lev > 0) {
  5622  001362  5031               	movf	_lev^0,w,c
  5623  001364  B4D8               	btfsc	status,2,c
  5624  001366  EFB7  F009         	goto	u1261
  5625  00136A  EFB9  F009         	goto	u1260
  5626  00136E                     u1261:
  5627  00136E  EFDD  F009         	goto	l409
  5628  001372                     u1260:
  5629  001372                     
  5630                           ;main.c: 67:                     lev--;
  5631  001372  0631               	decf	_lev^0,f,c
  5632  001374  EFDD  F009         	goto	l409
  5633  001378                     l1893:
  5634  001378  5004               	movf	InfBoiler@cmd^0,w,c
  5635  00137A  6E02               	movwf	??_InfBoiler^0,c
  5636  00137C  6A03               	clrf	(??_InfBoiler+1)^0,c
  5637                           
  5638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5639                           ; Switch size 1, requested type "simple"
  5640                           ; Number of cases is 1, Range of values is 0 to 0
  5641                           ; switch strategies available:
  5642                           ; Name         Instructions Cycles
  5643                           ; simple_byte            4     3 (average)
  5644                           ;	Chosen strategy is simple_byte
  5645  00137E  5003               	movf	(??_InfBoiler+1)^0,w,c
  5646  001380  0A00               	xorlw	0	; case 0
  5647  001382  B4D8               	btfsc	status,2,c
  5648  001384  EFC6  F009         	goto	l2957
  5649  001388  EFDD  F009         	goto	l409
  5650  00138C                     l2957:
  5651                           
  5652                           ; Switch size 1, requested type "simple"
  5653                           ; Number of cases is 5, Range of values is 78 to 116
  5654                           ; switch strategies available:
  5655                           ; Name         Instructions Cycles
  5656                           ; simple_byte           16     9 (average)
  5657                           ;	Chosen strategy is simple_byte
  5658  00138C  5002               	movf	??_InfBoiler^0,w,c
  5659  00138E  0A4E               	xorlw	78	; case 78
  5660  001390  B4D8               	btfsc	status,2,c
  5661  001392  EFAE  F009         	goto	l1885
  5662  001396  0A1E               	xorlw	30	; case 80
  5663  001398  B4D8               	btfsc	status,2,c
  5664  00139A  EF96  F009         	goto	l1875
  5665  00139E  0A04               	xorlw	4	; case 84
  5666  0013A0  B4D8               	btfsc	status,2,c
  5667  0013A2  EF7E  F009         	goto	l1865
  5668  0013A6  0A24               	xorlw	36	; case 112
  5669  0013A8  B4D8               	btfsc	status,2,c
  5670  0013AA  EF9D  F009         	goto	l1879
  5671  0013AE  0A04               	xorlw	4	; case 116
  5672  0013B0  B4D8               	btfsc	status,2,c
  5673  0013B2  EF85  F009         	goto	l1869
  5674  0013B6  EFDD  F009         	goto	l409
  5675  0013BA                     l409:
  5676  0013BA  0012               	return		;funcret
  5677  0013BC                     __end_of_InfBoiler:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function _serialSend *****************
  5681 ;; Defined at:
  5682 ;;		line 25 in file "serial.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  c               1    wreg     unsigned char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  c               1    0[COMRAM] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      void 
  5689 ;; Registers used:
  5690 ;;		wreg
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5696 ;;      Params:         0       0       0       0       0       0       0
  5697 ;;      Locals:         1       0       0       0       0       0       0
  5698 ;;      Temps:          0       0       0       0       0       0       0
  5699 ;;      Totals:         1       0       0       0       0       0       0
  5700 ;;Total ram usage:        1 bytes
  5701 ;; Hardware stack levels used: 1
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_InfBoiler
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text42
  5710  001DE6                     __ptext42:
  5711                           	callstack 0
  5712  001DE6                     _serialSend:
  5713                           	callstack 29
  5714                           
  5715                           ;incstack = 0
  5716                           ;serialSend@c stored from wreg
  5717  001DE6  6E01               	movwf	serialSend@c^0,c
  5718  001DE8                     l231:
  5719  001DE8  A89E               	btfss	158,4,c	;volatile
  5720  001DEA  EFF9  F00E         	goto	u791
  5721  001DEE  EFFB  F00E         	goto	u790
  5722  001DF2                     u791:
  5723  001DF2  EFF4  F00E         	goto	l231
  5724  001DF6                     u790:
  5725  001DF6                     
  5726                           ;serial.c: 27:     TXREG = c;
  5727  001DF6  C001  FFAD         	movff	serialSend@c,4013	;volatile
  5728  001DFA  0012               	return		;funcret
  5729  001DFC                     __end_of_serialSend:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _serialRead *****************
  5733 ;; Defined at:
  5734 ;;		line 30 in file "serial.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  resp            1    0[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         0       0       0       0       0       0       0
  5749 ;;      Locals:         1       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0
  5751 ;;      Totals:         1       0       0       0       0       0       0
  5752 ;;Total ram usage:        1 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_InfBoiler
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text43
  5762  001C62                     __ptext43:
  5763                           	callstack 0
  5764  001C62                     _serialRead:
  5765                           	callstack 29
  5766  001C62                     
  5767                           ;serial.c: 31:     char resp = 0;
  5768  001C62  0E00               	movlw	0
  5769  001C64  6E01               	movwf	serialRead@resp^0,c
  5770  001C66                     
  5771                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  5772  001C66  A2AB               	btfss	171,1,c	;volatile
  5773  001C68  EF38  F00E         	goto	u801
  5774  001C6C  EF3A  F00E         	goto	u800
  5775  001C70                     u801:
  5776  001C70  EF3C  F00E         	goto	l1577
  5777  001C74                     u800:
  5778  001C74                     
  5779                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  5780  001C74  98AB               	bcf	171,4,c	;volatile
  5781                           
  5782                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  5783  001C76  88AB               	bsf	171,4,c	;volatile
  5784  001C78                     l1577:
  5785                           
  5786                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  5787  001C78  AA9E               	btfss	158,5,c	;volatile
  5788  001C7A  EF41  F00E         	goto	u811
  5789  001C7E  EF43  F00E         	goto	u810
  5790  001C82                     u811:
  5791  001C82  EF45  F00E         	goto	l1581
  5792  001C86                     u810:
  5793  001C86                     
  5794                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  5795  001C86  CFAE F001          	movff	4014,serialRead@resp	;volatile
  5796  001C8A                     l1581:
  5797                           
  5798                           ;serial.c: 43:     return resp;
  5799  001C8A  5001               	movf	serialRead@resp^0,w,c
  5800  001C8C  0012               	return		;funcret
  5801  001C8E                     __end_of_serialRead:
  5802                           	callstack 0
  5803                           
  5804                           	psect	rparam
  5805  0000                     
  5806                           	psect	idloc
  5807                           
  5808                           ;Config register IDLOC0 @ 0x200000
  5809                           ;	unspecified, using default values
  5810  200000                     	org	2097152
  5811  200000  FF                 	db	255
  5812                           
  5813                           ;Config register IDLOC1 @ 0x200001
  5814                           ;	unspecified, using default values
  5815  200001                     	org	2097153
  5816  200001  FF                 	db	255
  5817                           
  5818                           ;Config register IDLOC2 @ 0x200002
  5819                           ;	unspecified, using default values
  5820  200002                     	org	2097154
  5821  200002  FF                 	db	255
  5822                           
  5823                           ;Config register IDLOC3 @ 0x200003
  5824                           ;	unspecified, using default values
  5825  200003                     	org	2097155
  5826  200003  FF                 	db	255
  5827                           
  5828                           ;Config register IDLOC4 @ 0x200004
  5829                           ;	unspecified, using default values
  5830  200004                     	org	2097156
  5831  200004  FF                 	db	255
  5832                           
  5833                           ;Config register IDLOC5 @ 0x200005
  5834                           ;	unspecified, using default values
  5835  200005                     	org	2097157
  5836  200005  FF                 	db	255
  5837                           
  5838                           ;Config register IDLOC6 @ 0x200006
  5839                           ;	unspecified, using default values
  5840  200006                     	org	2097158
  5841  200006  FF                 	db	255
  5842                           
  5843                           ;Config register IDLOC7 @ 0x200007
  5844                           ;	unspecified, using default values
  5845  200007                     	org	2097159
  5846  200007  FF                 	db	255
  5847                           
  5848                           	psect	config
  5849                           
  5850                           ; Padding undefined space
  5851  300000                     	org	3145728
  5852  300000  FF                 	db	255
  5853                           
  5854                           ;Config register CONFIG1H @ 0x300001
  5855                           ;	Oscillator Selection bits
  5856                           ;	OSC = HS, HS oscillator
  5857                           ;	Fail-Safe Clock Monitor Enable bit
  5858                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5859                           ;	Internal/External Oscillator Switchover bit
  5860                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5861  300001                     	org	3145729
  5862  300001  02                 	db	2
  5863                           
  5864                           ;Config register CONFIG2L @ 0x300002
  5865                           ;	Power-up Timer Enable bit
  5866                           ;	PWRT = OFF, PWRT disabled
  5867                           ;	Brown-out Reset Enable bits
  5868                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5869                           ;	Brown Out Reset Voltage bits
  5870                           ;	BORV = 0x2E, user specified literal
  5871  300002                     	org	3145730
  5872  300002  71                 	db	369
  5873                           
  5874                           ;Config register CONFIG2H @ 0x300003
  5875                           ;	Watchdog Timer Enable bit
  5876                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5877                           ;	Watchdog Timer Postscale Select bits
  5878                           ;	WDTPS = 1, 1:1
  5879  300003                     	org	3145731
  5880  300003  00                 	db	0
  5881                           
  5882                           ; Padding undefined space
  5883  300004                     	org	3145732
  5884  300004  FF                 	db	255
  5885                           
  5886                           ;Config register CONFIG3H @ 0x300005
  5887                           ;	CCP2 MUX bit
  5888                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5889                           ;	PORTB A/D Enable bit
  5890                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5891                           ;	Low-Power Timer1 Oscillator Enable bit
  5892                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5893                           ;	MCLR Pin Enable bit
  5894                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5895  300005                     	org	3145733
  5896  300005  83                 	db	131
  5897                           
  5898                           ;Config register CONFIG4L @ 0x300006
  5899                           ;	Stack Full/Underflow Reset Enable bit
  5900                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5901                           ;	Single-Supply ICSP Enable bit
  5902                           ;	LVP = OFF, Single-Supply ICSP disabled
  5903                           ;	Extended Instruction Set Enable bit
  5904                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5905                           ;	Background Debugger Enable bit
  5906                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5907  300006                     	org	3145734
  5908  300006  80                 	db	128
  5909                           
  5910                           ; Padding undefined space
  5911  300007                     	org	3145735
  5912  300007  FF                 	db	255
  5913                           
  5914                           ;Config register CONFIG5L @ 0x300008
  5915                           ;	Code Protection bit
  5916                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5917                           ;	Code Protection bit
  5918                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5919                           ;	Code Protection bit
  5920                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5921                           ;	Code Protection bit
  5922                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5923  300008                     	org	3145736
  5924  300008  0F                 	db	15
  5925                           
  5926                           ;Config register CONFIG5H @ 0x300009
  5927                           ;	Boot Block Code Protection bit
  5928                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5929                           ;	Data EEPROM Code Protection bit
  5930                           ;	CPD = OFF, Data EEPROM not code-protected
  5931  300009                     	org	3145737
  5932  300009  C0                 	db	192
  5933                           
  5934                           ;Config register CONFIG6L @ 0x30000A
  5935                           ;	Write Protection bit
  5936                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5937                           ;	Write Protection bit
  5938                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5939                           ;	Write Protection bit
  5940                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5941                           ;	Write Protection bit
  5942                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5943  30000A                     	org	3145738
  5944  30000A  0F                 	db	15
  5945                           
  5946                           ;Config register CONFIG6H @ 0x30000B
  5947                           ;	Configuration Register Write Protection bit
  5948                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5949                           ;	Boot Block Write Protection bit
  5950                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5951                           ;	Data EEPROM Write Protection bit
  5952                           ;	WRTD = OFF, Data EEPROM not write-protected
  5953  30000B                     	org	3145739
  5954  30000B  E0                 	db	224
  5955                           
  5956                           ;Config register CONFIG7L @ 0x30000C
  5957                           ;	Table Read Protection bit
  5958                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5959                           ;	Table Read Protection bit
  5960                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5961                           ;	Table Read Protection bit
  5962                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5963                           ;	Table Read Protection bit
  5964                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5965  30000C                     	org	3145740
  5966  30000C  0F                 	db	15
  5967                           
  5968                           ;Config register CONFIG7H @ 0x30000D
  5969                           ;	Boot Block Table Read Protection bit
  5970                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5971  30000D                     	org	3145741
  5972  30000D  40                 	db	64
  5973                           tosu	equ	0xFFF
  5974                           tosh	equ	0xFFE
  5975                           tosl	equ	0xFFD
  5976                           stkptr	equ	0xFFC
  5977                           pclatu	equ	0xFFB
  5978                           pclath	equ	0xFFA
  5979                           pcl	equ	0xFF9
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           prodh	equ	0xFF4
  5985                           prodl	equ	0xFF3
  5986                           indf0	equ	0xFEF
  5987                           postinc0	equ	0xFEE
  5988                           postdec0	equ	0xFED
  5989                           preinc0	equ	0xFEC
  5990                           plusw0	equ	0xFEB
  5991                           fsr0h	equ	0xFEA
  5992                           fsr0l	equ	0xFE9
  5993                           wreg	equ	0xFE8
  5994                           indf1	equ	0xFE7
  5995                           postinc1	equ	0xFE6
  5996                           postdec1	equ	0xFE5
  5997                           preinc1	equ	0xFE4
  5998                           plusw1	equ	0xFE3
  5999                           fsr1h	equ	0xFE2
  6000                           fsr1l	equ	0xFE1
  6001                           bsr	equ	0xFE0
  6002                           indf2	equ	0xFDF
  6003                           postinc2	equ	0xFDE
  6004                           postdec2	equ	0xFDD
  6005                           preinc2	equ	0xFDC
  6006                           plusw2	equ	0xFDB
  6007                           fsr2h	equ	0xFDA
  6008                           fsr2l	equ	0xFD9
  6009                           status	equ	0xFD8

Data Sizes:
    Strings     159
    Constant    26
    Data        7
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      51
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[13]), STR_15(CODE[9]), STR_14(CODE[5]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[9]), STR_9(CODE[5]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[9]), 
		 -> STR_4(CODE[5]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_menu1
    _main->_menu2
    _main->_menu3
    _status->_pwmSet
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _menuCtrl->_kpReadKey
    _menu3->_lcdString
    _menu2->_lcdString
    _menu1->_lcdString
    _lcdString->_lcdChar
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _leituraMenu->_kpReadKey
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _InfBoiler->_serialRead
    _InfBoiler->_serialSend

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  378999
                                             23 COMRAM     3     3      0
                          _InfBoiler
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdString
                        _leituraMenu
                              _menu1
                              _menu2
                              _menu3
                           _menuCtrl
                            _pwmInit
                             _pwmSet
                         _serialInit
                             _status
                              _tempo
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tempo                                                5     5      0     120
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _status                                               0     0      0     716
                             _pwmSet
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _menuCtrl                                             4     3      1     552
                                              5 COMRAM     4     3      1
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (1) _menu3                                                3     3      0   80773
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _menu2                                                3     3      0   80773
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _menu1                                                3     3      0   80773
                                             20 COMRAM     3     3      0
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   27341
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdNumber                                            4     2      2   27405
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   26035
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _leituraMenu                                          0     0      0      60
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   58524
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   25741
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   26005
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   25633
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    5232
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   15793
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   15309
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    4852
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    4852
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    4852
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _InfBoiler                                            3     3      0      60
                                              1 COMRAM     3     3      0
                         _serialRead
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialRead                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InfBoiler
     _serialRead
     _serialSend
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _leituraMenu
     _kpRead
     _kpReadKey
   _menu1
     _lcdCommand
     _lcdNumber
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _lcdChar
     _lcdString
   _menu2
     _lcdCommand
     _lcdNumber
     _lcdString
   _menu3
     _lcdCommand
     _lcdNumber
     _lcdString
   _menuCtrl
     _kpRead
     _kpReadKey
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _serialInit
   _status
     _pwmSet
   _tempo
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      33       1       40.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      15        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 21:35:05 2021

         _pulseEnablePin 1B4A             lcdString@msg 000F                       l12 1828  
                     l54 0B56                       l63 0E70                       l58 0E74  
                     l59 0E70                       l88 0908             ___awdiv@sign 0006  
                     _v0 0028                       _v1 0027                       _v2 0026  
                     _v3 0025      ___wmul@multiplicand 0003                      l111 18A0  
                    l105 1E14                      l130 1C30                      l125 0F92  
                    l141 1E26                      l301 12E0                      l150 1B8A  
                    l231 1DE8                      l127 0FAA                      l153 1D52  
                    l234 1DFA                      l322 17AE                      l242 1DCA  
                    l147 1C60                      l315 167C                      l252 1CB6  
                    l260 1B48                      l156 1A4E                      l308 1716  
                    l173 1AFA                      l182 1532                      l334 0D0A  
                    l342 0D0A                      l239 1C8C                      l255 1CE0  
                    l159 1DB0                      l167 1D92                      l511 19F4  
                    l416 1AA4                      l409 13BA                      l249 1BC8  
                    l514 1D2C                      l179 1988                      l292 12E0  
                    l621 11E8                      l517 1DE4                      l542 1D06  
                    l492 1E0A                      l495 1D74                      l489 1DFC  
                    l498 1E1C                      l773 147E                      l786 15E2  
                    _PR2 000FCB                      u800 1C74                      u801 1C70  
                    u810 1C86                      u811 1C82                      u820 17CE  
                    u821 17CA                      u750 186A                      u830 17E6  
                    u751 1866                      u831 17E2                      u760 189E  
                    u744 184A                      u840 17FE                      u761 189A  
                    u745 1844                      u841 17FA                      u850 1828  
                    u851 1824                      u790 1DF6                      u791 1DF2  
                    _aux 001D                      _lev 0031             ___awmod@sign 000E  
                    wreg 000FE8                     l1040 1914                     l1033 190C  
                   l2201 1CB8                     l2211 1B14                     l2203 1AFC  
                   l2213 1B2C                     l2205 1B10                     l2221 1B4A  
                   l2301 1136                     l2215 1B32                     l2231 06D8  
                   l2223 1B5E                     l2311 1178                     l2303 114C  
                   l2161 0926                     l2217 1B34                     l2241 075A  
                   l2233 06EA                     l2225 1B6A                     l2401 15C2  
                   l2313 1196                     l2305 1154                     l2321 11B8  
                   l1601 17BE                     l2171 09B0                     l2163 0938  
                   l2219 1B44                     l2251 07F6                     l2243 077E  
                   l2235 070A                     l2227 19F8                     l2331 13C0  
                   l2403 15D2                     l2323 11C8                     l2315 11A6  
                   l2307 1160                     l2411 18AA                     l1611 17EA  
                   l2181 0A48                     l2173 09D0                     l2165 0958  
                   l2261 0894                     l2253 081C                     l2245 07A4  
                   l2237 072C                     l2229 06BC                     l1541 1882  
                   l1533 1832                     l2341 13F0                     l2333 13CE  
                   l2405 15DA                     l2325 11D8                     l2317 11A8  
                   l2309 116E                     l2501 1D08                     l2421 18E0  
                   l2413 18BC                     l1621 1808                     l1613 17EE  
                   l1605 17D2                     l2431 0D0C                     l2191 0AE2  
                   l2183 0A6A                     l2175 09F2                     l2167 097A  
                   l2159 090A                     l2511 0EF2                     l2503 0E76  
                   l2263 08B0                     l2255 0838                     l2247 07C0  
                   l2239 0748                     l2271 1C3E                     l1543 189E  
                   l1535 186A                     l1527 182A                     l2351 141E  
                   l2343 13F4                     l2335 13D6                     l2319 11B2  
                   l2423 18F6                     l2415 18C4                     l1607 17D6  
                   l1631 1816                     l2441 0D6C                     l2433 0D28  
                   l2193 0AFE                     l2185 0A86                     l2177 0A0E  
                   l2169 0996                     l2513 0F18                     l2521 0F68  
                   l2505 0E86                     l2265 08C2                     l2257 084A  
                   l2249 07D2                     l2273 1C42                     l2361 1452  
                   l2353 142C                     l2345 13FC                     l2337 13DA  
                   l2329 13BC                     l2601 16D0                     l2425 18FE  
                   l2417 18CC                     l2409 18A2                     l2281 1CFE  
                   l1617 1802                     l1625 180E                     l1571 1C62  
                   l2195 0B18                     l2187 0AA0                     l2179 0A28  
                   l2523 0F80                     l2515 0F36                     l2267 08E6  
                   l2259 086E                     l2531 1C00                     l1539 187E  
                   l2363 1458                     l2355 1432                     l2347 140E  
                   l2339 13E8                     l2275 1D78                     l2603 16DC  
                   l2291 1100                     l2427 1900                     l2419 18DA  
                   l1581 1C8A                     l1573 1C66                     l2197 0B38  
                   l2189 0AC0                     l2525 0F86                     l2517 0F60  
                   l2509 0EA6                     l2533 1C2C                     l2269 1C32  
                   l2541 1506                     l2357 1448                     l2349 1416  
                   l2365 145E                     l2381 1552                     l2373 1534  
                   l2277 1D86                     l2621 1612                     l2613 15E6  
                   l2701 0C7E                     l2293 1104                     l2285 10DE  
                   l2429 1906                     l1629 1814                     l1575 1C74  
                   l1567 1DE8                     l2463 0E28                     l2455 0DE0  
                   l2447 0D98                     l2439 0D50                     l2199 1C8E  
                   l2527 0F8A                     l2471 1B8C                     l2543 1514  
                   l2535 1480                     l2551 11EA                     l2367 146E  
                   l2359 1450                     l2391 158A                     l2383 1560  
                   l2375 1538                     l2607 16EC                     l2623 1618  
                   l2615 15EA                     l2711 0CC8                     l2703 0C88  
                   l2295 1112                     l2287 10E2                     l2279 1CE2  
                   l1577 1C78                     l1569 1DF6                     l2465 0E44  
                   l2457 0DFC                     l2449 0DB4                     l2529 0FA2  
                   l2473 1D30                     l2545 1520                     l2537 14E0  
                   l2561 123E                     l2553 1206                     l2369 1476  
                   l2393 1598                     l2385 1568                     l2377 1546  
                   l2481 1ACE                     l2625 1624                     l2617 15F0  
                   l2633 1652                     l2641 171E                     l2713 0CDA  
                   l2705 0C9A                     l2297 1122                     l2289 10F0  
                   l1681 1DB2                     l1579 1C86                     l2475 1D96  
                   l2547 1526                     l2539 14EC                     l2571 1282  
                   l2563 124E                     l2555 1212                     l2395 15AE  
                   l2387 157A                     l2379 154E                     l2483 1AD2  
                   l2627 1636                     l2619 15FC                     l2651 1758  
                   l2643 1724                     l2707 0CAC                     l2299 1126  
                   l1683 1DC6                     l2491 198C                     l2731 1A90  
                   l2723 1A50                     l1923 1E16                     l2811 0FAC  
                   l1861 12E8                     l2549 152C                     l2469 1E0C  
                   l2581 12B8                     l2573 1292                     l2565 125E  
                   l2557 1226                     l2397 15B6                     l2389 1582  
                   l2485 1916                     l2477 1AA6                     l2629 1642  
                   l2653 176A                     l2645 1730                     l2709 0CB6  
                   l2717 0CE0                     l2741 1DD2                     l1685 1DC8  
                   l2493 19AA                     l2733 1A9A                     l2725 1A66  
                   l1597 17B2                     l1925 1E1A                     l2821 0FC4  
                   l2813 0FB4                     l1871 1310                     l2583 12CA  
                   l2575 1294                     l2567 1260                     l2559 122C  
                   l2399 15BC                     l2487 1922                     l2479 1AB2  
                   l2591 168A                     l2655 1774                     l2647 1746  
                   l2639 171A                     l2671 0B96                     l2743 1DD4  
                   l2495 19C6                     l2735 1AA0                     l2727 1A7C  
                   l1599 17BA                     l2751 1D62                     l2831 0FE6  
                   l2823 0FC8                     l2815 0FB8                     l1881 1340  
                   l1873 1322                     l1865 12FC                     l2585 12DA  
                   l2577 12A6                     l2569 1272                     l2489 196E  
                   l2593 1696                     l2649 174C                     l2681 0BE0  
                   l2673 0BA0                     l2665 0B5A                     l2745 1DD8  
                   l2737 1DCC                     l2497 19CE                     l2729 1A8C  
                   l2753 1D6A                     l2833 0FF6                     l2825 0FCE  
                   l2817 0FBC                     l1883 1352                     l1875 132C  
                   l1867 1302                     l1859 12E2                     l2579 12B6  
                   l2595 16AC                     l2587 1680                     l2659 1784  
                   l2691 0C34                     l2683 0BF2                     l2675 0BB2  
                   l2667 0B76                     l2739 1DCE                     l2499 19E6  
                   l2755 1D6E                     l2747 1D54                     l1939 1DFC  
                   l2851 1080                     l2835 0FFE                     l2843 103A  
                   l2827 0FDA                     l2819 0FC0                     l1885 135C  
                   l1877 1332                     l1869 130A                     l1893 1378  
                   l2597 16B2                     l2589 1684                     l2693 0C46  
                   l2685 0C04                     l2677 0BC2                     l2669 0B82  
                   l2757 1D72                     l2749 1D5E                     l2853 1084  
                   l2837 1012                     l2845 106C                     l2829 0FE0  
                   l1887 1362                     l1879 133A                     l2599 16BE  
                   l2951 1798                     l2695 0C56                     l2687 0C1A  
                   l2679 0BD8                     l2855 108C                     l2847 1074  
                   l2839 1026                     l2863 1098                     l1889 1372  
                   l2953 1666                     l2697 0C5C                     l2689 0C22  
                   l2857 1090                     l2849 1078                     l2865 10D2  
                   l2945 104E                     l2955 1700                     l2699 0C6E  
                   l2947 10AC                     l2957 138C                     l2949 0CF4  
                   STR_1 0681                     STR_2 061B                     STR_3 064E  
                   STR_4 0627                     STR_5 06A8                     STR_6 0670  
                   STR_7 061B                     STR_8 062C                     STR_9 0627  
                   u2000 1448                     u2001 1444                     u2010 146E  
                   u2011 146A                     u2020 1546                     u2100 18F6  
                   u1300 1E0A                     u2021 1542                     u2101 18F2  
                   u1301 1E06                     u1230 12F8                     u2110 0D28  
                   u2030 1560                     u1231 12F4                     u2111 0D24  
                   u2031 155C                     u1240 1322                     u2040 157A  
                   u1241 131E                     u2041 1576                     u1250 1352  
                   u2130 0D6C                     u2050 1598                     u2210 1AFA  
                   u1251 134E                     u2131 0D68                     u2051 1594  
                   u2211 1AF6                     u1260 1372                     u2204 0E5A  
                   u2124 0D3A                     u2300 0FA2                     u2060 15AE  
                   u2220 1988                     u1261 136E                     u2205 0E56  
                   u2125 0D36                     u2301 0F9E                     u2061 15AA  
                   u2221 1984                     u2150 0DB4                     u2230 0EA2  
                   u2310 1206                     u2070 15D2                     u2151 0DB0  
                   u2231 0E9E                     u2311 1202                     u2071 15CE  
                   u2144 0D82                     u1600 0A86                     u1520 0996  
                   u1504 094A                     u2400 12B6                     u2320 1226  
                   u2080 18BC                     u2145 0D7E                     u1601 0A82  
                   u1521 0992                     u1505 0946                     u2401 12B2  
                   u2321 1222                     u2081 18B8                     u2170 0DFC  
                   u1610 0AA0                     u1530 09B0                     u1514 096A  
                   u2250 0EF2                     u2410 12CA                     u2330 123E  
                   u2090 18DA                     u2171 0DF8                     u1611 0A9C  
                   u1531 09AC                     u1515 0966                     u2251 0EEE  
                   u2411 12C6                     u2331 123A                     u2091 18D6  
                   u2164 0DCA                     u2244 0EC2                     u1700 06EA  
                   u2420 12DA                     u2340 124E                     u2500 0C1A  
                   u2165 0DC6                     u2245 0EBC                     u1701 06E6  
                   u2421 12D6                     u2341 124A                     u2501 0C16  
                   u2190 0E44                     u2270 0F36                     u2350 125E  
                   u2510 0C34                     u2430 0B76                     u2191 0E40  
                   u2271 0F32                     u2351 125A                     u2511 0C30  
                   u2431 0B72                     u2184 0E12                     u1640 0AFE  
                   u1624 0AB2                     u1560 0A0E                     u1544 09C2  
                   u1480 0926                     u2264 0F0A                     u2360 1272  
                   u2520 0C46                     u2440 0B96                     u2600 1A66  
                   u2185 0E0E                     u1641 0AFA                     u1625 0AAE  
                   u1561 0A0A                     u1545 09BE                     u1481 0922  
                   u2265 0F04                     u2361 126E                     u2521 0C42  
                   u2441 0B92                     u2601 1A62                     u1650 0B18  
                   u1634 0AD2                     u1570 0A28                     u1554 09E2  
                   u1490 0938                     u2290 0F80                     u1810 0838  
                   u1730 0748                     u1714 06FC                     u2370 1282  
                   u2530 0C56                     u2450 0BB2                     u2610 1A7C  
                   u1651 0B14                     u1635 0ACE                     u1571 0A24  
                   u1555 09DE                     u1491 0934                     u2291 0F7C  
                   u1811 0834                     u1731 0744                     u1715 06F8  
                   u2371 127E                     u2531 0C52                     u2451 0BAE  
                   u2611 1A78                     u2284 0F52                     u1820 084A  
                   u1804 080C                     u1740 075A                     u1724 071C  
                   u2380 1292                     u2540 0C6E                     u2460 0BC2  
                   u1900 10F0                     u2620 1A8C                     u2285 0F4C  
                   u1821 0846                     u1805 0808                     u1741 0756  
                   u1725 0718                     u2381 128E                     u2541 0C6A  
                   u2461 0BBE                     u1901 10EC                     u2621 1A88  
                   u2390 12A6                     u2550 0C7E                     u2470 0BD8  
                   u1910 1112                     u2391 12A2                     u2551 0C7A  
                   u2471 0BD4                     u1911 110E                     u1664 0B2A  
                   u1584 0A3A                     u1680 1B44                     u2560 0C9A  
                   u2480 0BF2                     u1920 114C                     u1665 0B26  
                   u1585 0A36                     u1681 1B40                     u2561 0C96  
                   u2481 0BEE                     u1921 1148                     u1674 0B4A  
                   u1594 0A5A                     u1850 08B0                     u1834 0860  
                   u1770 07C0                     u1754 0770                     u1690 06D8  
                   u2570 0CAC                     u2490 0C04                     u1930 116E  
                   u1675 0B46                     u1595 0A56                     u1851 08AC  
                   u1835 085C                     u1771 07BC                     u1755 076C  
                   u1691 06D4                     u2571 0CA8                     u2491 0C00  
                   u1931 116A                     u1860 08C2                     u1844 0884  
                   u1780 07D2                     u1764 0794                     u2580 0CC8  
                   u1940 1196                     u1861 08BE                     u1845 0880  
                   u1781 07CE                     u1765 0790                     u2581 0CC4  
                   u1941 1192                     u2590 0CDA                     u1950 11C8  
                   u2591 0CD6                     u1951 11C4                     u1960 13CE  
                   u1961 13CA                     u1874 08D8                     u1794 07E8  
                   u1890 1C60                     u1970 13E8                     u1875 08D4  
                   u1795 07E4                     u1891 1C5C                     u1971 13E4  
                   u1884 08FC                     u1980 140E                     u1885 08F8  
                   u1981 140A                     u1990 142C                     u1991 1428  
                   _PIR1 000F9E                     _aux2 001B                     _main 0FAC  
                   _ctrl 002A                     _keys 0023         ??_PulseClockData 0007  
                   _temp 002D                     _pres 002F                     fsr1l 000FE1  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 1B8C  
         pwmSet@porcento 000A          __end_of___aldiv 11EA                    ?_main 0001  
        __end_of___awdiv 1480                    STR_10 06B1                    STR_11 063D  
                  STR_12 061B                    STR_13 065F                    STR_14 0627  
                  STR_15 069F                    STR_16 0692          __end_of___awmod 15E4  
           ?_leituraMenu 0001                    _T0CON 000FD5          ___awdiv@divisor 0003  
                  _T2CON 000FCA          __end_of___lwdiv 1916          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_lcdChar 1D94          __end_of_lcdInit 1534                    _menu1 167E  
                  _count 002B                    _menu2 15E4                    _menu3 1718  
        __end_of_pinMode 090A                    _valor 0601                    _tempo 17B0  
        __end_of_soWrite 1B4A                    tablat 000FF5          __end_of_pwmInit 1DE6  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 0B58  
        __initialization 1BCA          ?_pulseEnablePin 0001             __end_of_main 10DE  
                 ??_main 0018            __activetblptr 000002     __size_of_digitalRead 016A  
     __size_of_InfBoiler 00DA                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_menu1 0001                   ?_menu2 0001  
                 ?_menu3 0001                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001                   ?_tempo 0001  
                 _INTCON 000FF2                   _SPBRGH 000FB0                ??___aldiv 0009  
                 ___wmul 1CE2                ??___awdiv 0005                ??___awmod 000D  
              ??___lwdiv 0005                   _kpInit 1C00                   _kpRead 1E0C  
       __end_of_menuCtrl 0D0C                   clear_0 1BF0                   _soInit 1B8C  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F                   _pwmSet 198A  
        ___awmod@counter 000D                   _status 1A50             __pdataCOMRAM 002D  
              ??_pinMode 0005             menu1@subMenu 0017             __mediumconst 0000  
        menuCtrl@menuNum 0009                   tempo@i 0003                   tempo@j 0004  
           menu2@subMenu 0017                   tempo@k 0005                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_pwmInit 0011         __end_of_pushByte 1A50             menu3@subMenu 0017  
        menuCtrl@subMenu 0006               __accesstop 0080  __end_of__initialization 1BF6  
          ___rparam_used 000001            pushByte@value 000D        __end_of_InfBoiler 13BC  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_menu1 1718  
          __end_of_menu2 167E            __end_of_menu3 17B0            __end_of_valor 0611  
          __end_of_tempo 182A       __size_of_delayMili 0030       __size_of_lcdNumber 0074  
   __size_of_leituraMenu 00F8       __size_of_lcdString 0056       __size_of_kpReadKey 0078  
                ??_menu1 0015                  ??_menu2 0015                  ??_menu3 0015  
                ??_tempo 0001    __size_of_digitalWrite 024E               _delayMicro 1E26  
             _lcdCommand 1D94                  ?___wmul 0001                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  _BAUDCON 000FB8  
                ?_soInit 0001               _kpDebounce 0E76                  ?_pwmSet 0001  
                ?_status 0001       __size_of_timerInit 0008       __size_of_timerWait 0010  
           _digitalWrite 090A        __end_of_delayMili 1C62                ?_menuCtrl 0006  
       ??_pulseEnablePin 0007                  __Hparam 0000        __end_of_lcdNumber 198A  
                __Lparam 0000        __end_of_lcdString 1AFC          kpDebounce@tempo 002C  
                ___aldiv 10DE        __end_of_kpReadKey 18A2                  ___awdiv 13BC  
                ___awmod 1534                ?_pushByte 000A          __size_of___wmul 0026  
                ___lwdiv 18A2             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611                  __pcinit 1BCA  
         serialRead@resp 0001                  _lcdChar 1D76                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 1480                  __ptext0 0FAC  
                __ptext1 1DFC                  __ptext2 1D54                  __ptext3 1E16  
                __ptext4 17B0                  __ptext5 1A50                  __ptext6 198A  
                __ptext7 1CE2                  __ptext8 18A2                  __ptext9 1DB2  
        __size_of_pwmSet 006C                  _display 0029          __size_of_status 0056  
                _menuNum 0033                  _pinMode 06BC         ___awmod@dividend 0009  
            serialSend@c 0001         ___aldiv@dividend 0001               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1AFC                  _subMenu 0032  
                _pwmInit 1DCC     end_of_initialization 1BF6            ?_PulseEnClock 0001  
             ??_menuCtrl 0007            __Lmediumconst 0000           digitalRead@pin 0001  
          ?_pwmFrequency 000F              ?_delayMicro 0001        __end_of_timerInit 1E1E  
      __end_of_timerWait 1E0C               _serialInit 1DB2               _serialRead 1C62  
             _serialSend 1DE6         ___aldiv@quotient 000B                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003               _timerReset 1D54  
            ?_kpDebounce 0001               lcdNumber@i 0011               _pushNibble 1D2E  
             lcdString@i 0013           ??_PulseEnClock 0007           ??_pwmFrequency 0011  
             kpReadKey@i 0004                _InfBoiler 12E2           __end_of___wmul 1D08  
          __pidataCOMRAM 1E1E           __end_of_kpInit 1C32           __end_of_kpRead 1E16  
         __end_of_soInit 1BCA           __end_of_pwmSet 19F6           __end_of_status 1AA6  
    __size_of_delayMicro 0002      start_initialization 1BCA      __end_of_digitalRead 0E76  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136              ?_serialInit 0001  
            ?_serialRead 0001              ?_serialSend 0001        kpDebounce@oldRead 001F  
      kpDebounce@newRead 0021                 ??___wmul 0005                 ??_kpInit 0007  
               ??_kpRead 0003               ?_InfBoiler 0001              ?_timerReset 0001  
               ??_soInit 0007                 ??_pwmSet 0008                 ??_status 000D  
          ??_leituraMenu 0006              __pbssCOMRAM 001B              ?_pushNibble 000A  
             pinMode@pin 0001        __size_of_menuCtrl 01B4                _delayMili 1C32  
       ___lwdiv@dividend 0001                 ?___aldiv 0001                 ?___awdiv 0001  
               ?___awmod 0009           _PulseClockData 1CB8                _lcdNumber 1916  
               ?___lwdiv 0001     __end_of_PulseEnClock 1CB8                _lcdString 1AA6  
            _digitalRead 0D0C                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001                _kpReadKey 182A     __end_of_pwmFrequency 1D2E  
            __smallconst 0600                 ?_pinMode 0001                 ?_soWrite 0007  
               ?_pwmInit 0001      __size_of_serialInit 001A      __size_of_serialRead 002C  
    __size_of_serialSend 0016         ___lwdiv@quotient 0005      __end_of_leituraMenu 12E2  
         __size_of_menu1 009A           __size_of_menu2 009A           __size_of_menu3 0098  
         __size_of_tempo 007A         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009      __size_of_timerReset 0022           ___wmul@product 0005  
           ??_delayMicro 0003               tempo@tempX 0001               ?_delayMili 0001  
 __end_of_PulseClockData 1CE2      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _timerInit 1E16                _timerWait 1DFC               ?_lcdNumber 000F  
            ??_InfBoiler 0002               ?_lcdString 000F             ??_kpDebounce 000A  
             ?_kpReadKey 0001        ___wmul@multiplier 0001          lcdCommand@value 000E  
     __end_of_delayMicro 1E28         timerReset@ciclos 0003                copy_data0 1BDE  
     __end_of_lcdCommand 1DB2               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 0FAC                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
       __size_of___aldiv 010C         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042           lcdNumber@value 000F         __size_of___lwdiv 0074  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4              _leituraMenu 11EA  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 1DCC                 __ptext11 1D08                 __ptext20 1534  
               __ptext12 10DE                 __ptext21 13BC                 __ptext13 0B58  
               __ptext30 1E26                 __ptext22 11EA                 __ptext14 1718  
               __ptext31 1C32                 __ptext23 182A                 __ptext15 15E4  
               __ptext40 0D0C                 __ptext32 1C00                 __ptext24 1E0C  
               __ptext16 167E                 __ptext41 12E2                 __ptext33 1B8C  
               __ptext25 1480                 __ptext17 1AA6                 __ptext42 1DE6  
               __ptext34 06BC                 __ptext26 1D2E                 __ptext18 1916  
               __ptext43 1C62                 __ptext35 0E76                 __ptext27 1D94  
               __ptext19 1D76                 __ptext36 1AFC                 __ptext28 19F6  
               __ptext37 1C8E                 __ptext29 1B4A                 __ptext38 1CB8  
               __ptext39 090A         __size_of_soWrite 004E         __size_of_pwmInit 001A  
               _menuCtrl 0B58            __size_of_main 0132              ??_delayMili 0003  
           ??_serialInit 0001             ??_serialRead 0001    __size_of_PulseEnClock 002A  
           InfBoiler@cmd 0004             ??_serialSend 0001              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 19F6              ??_lcdNumber 0011                pwmSet@val 000B  
            ??_lcdString 0011             ??_timerReset 0003                 main@slot 001A  
            ??_kpReadKey 0001          timerReset@tempo 0001             ??_pushNibble 000C  
          ?_digitalWrite 0001       __end_of_serialInit 1DCC       __end_of_serialRead 1C8E  
     __end_of_serialSend 1DFC             _PulseEnClock 1C8E        digitalWrite@value 0003  
     __end_of_timerReset 1D76             _pwmFrequency 1D08                 soWrite@i 0009  
               tempo@aux 0002              ??_timerInit 0001              ??_timerWait 0001  
     __end_of_pushNibble 1D54             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A          digitalWrite@pin 0001  
